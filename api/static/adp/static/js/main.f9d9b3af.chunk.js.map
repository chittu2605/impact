{"version":3,"sources":["components/PanelHeader/PanelHeader.js","config/apiConfig.js","components/Molecule/DashboardSummaryCard.js","components/Molecule/DashboardDefitiateCard.js","views/Dashboard.js","variables/icons.js","views/Notifications.js","views/Icons.js","views/Typography.js","variables/general.js","views/TableList.js","views/Maps.js","views/UserPage.js","components/Input/TextInput.js","components/Input/SelectInput.js","redux/actions/addAdp.js","redux/constants/adp.js","components/Forms/AddAdpForm.js","components/Molecule/Cart.js","components/Molecule/ProductCard.js","components/Organism/BuyProductList.js","redux/actions/wallet.js","redux/constants/wallet.js","redux/actions/smartMart.js","redux/constants/smartMart.js","components/Forms/BuyProducts.js","views/AddADP.js","components/Atom/TransactionListItem.js","views/WalletStatement.js","components/Input/AsyncSelctInput.js","redux/actions/rePurchase.js","redux/constants/rePurchase.js","components/Molecule/SelectAdpRepurchase.js","views/RePurchase.js","views/SmartMartBalanceStatement.js","views/FamilyTree.js","routes.js","components/Atom/WalletNavItem.js","components/Atom/SmartMartNavItem.js","components/Navbars/Navbar.js","components/Sidebar/Sidebar.js","components/Footer/Footer.js","utils/GlobalStyles.js","layouts/Adp.js","utils/mediaQueries/breakPoints.js","utils/mediaQueries/device.js","redux/actions/login.js","redux/constants/login.js","views/Login.js","redux/reducers/login.js","redux/reducers/wallet.js","redux/reducers/addAdp.js","redux/reducers/rePurchase.js","redux/reducers/smartMart.js","redux/reducers/rootReducer.js","redux/store/configureStore.js","index.js","impact1.png","variables/charts.js","assets/img/bg5.jpg","assets/img/mike.jpg"],"names":["PanelHeader","className","undefined","this","props","size","content","React","Component","apiHandler","axios","create","baseURL","window","API_URL","DashboardSummaryCard","state","pbv","totalPbv","gbv","totalGbv","coSponsorIncome","total_retail_profit","zone","bv","bvTillDate","componentDidMount","getPbvDetails","getGbvDetails","fetchCoSponsorIncome","fetchRetailProfit","fetchZone","getBvDetails","getPbv","then","response","data","results","length","setState","current_month_pbv","getGbv","getCoSponsorIncome","co_sponsor_income","getRetailProfit","getZone","name","getBv","Card","CardHeader","CardTitle","tag","CardBody","CardFooter","get","DashboardDefitiateCard","deficitZone","deficitValue","showDeficitZone","getDeficitZone","fetchDeficitZone","console","log","Dashboard","dashboardPanelChart","options","Row","Col","xs","md","icons","thead","tbody","MapWrapper","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","lat","lng","defaultOptions","scrollwheel","styles","featureType","elementType","stylers","color","lightness","weight","visibility","saturation","position","TextInput","FormGroup","showLabel","label","Input","type","placeholder","SelectInput","classNamePrefix","updateAdpData","payload","ifsc","require","Wrapper","styled","padding","genderOption","value","AddAdpForm","adpData","toggleBuyProducts","initialValues","validationSchema","Yup","shape","firstname","required","sponsor_id","positive","co_sponsor_id","mobile","test","val","toString","email","dob","nullable","onSubmit","values","setSubmitting","setTimeout","errors","touched","handleChange","getFieldProps","setFieldValue","handleBlur","handleSubmit","isSubmitting","class","id","onChange","onBlur","e","getAdpName","target","catch","err","status","alert","result","sponsor_name","disabled","co_sponsor_name","lastname","gender","father_firstname","father_lastname","nominee_firstname","nominee_lastname","nominee_gender","nominee_dob","relation","pan","address_correspondence","landmark","district","postal_code","id_proof","proof_address","bank_name","account_no","branch","ifs_code","ifscCode","validate","fetchDetails","fetchIfscDetails","BANKCODE","BRANCH","BANK","account_type","Button","connector","connect","balance","fetchWalletStatus","createAdpReducer","dispatch","bindActionCreators","withRouter","adp_id","params","style","button","background","th","fontSize","fontWeight","cartInput","width","height","borderRadius","textAlign","addRemoveButton","border","marginTop","StyledButton","StyledTH","StyledTextInput","StyledAddRemoveButton","cart","Table","responsive","striped","bordered","hover","align","showDiscount","cartItem","map","row","key","product","component","scope","price","display","alignItems","outline","minWidth","variant","onClick","quantityReduced","quantityAdded","Number","discount","after_discount","vdba","vdbd","retail_profit","fullWidth","deleteItem","margin","boxShadow","transition","transform","overflow","left","right","bottom","borderCollapse","borderRight","font","borderColor","borderBottomRightRadius","borderTopRightRadius","borderBottomLeftRadius","borderTopLeftRadius","clear","marginBottom","maxHeight","StyledCard","StyledButtonContainer","InputLabel","CardActions","StyledInputGroup","InputGroup","StyledAddCartButton","StyledCardContent","CardContent","StyledSelect","Select","StyledProductName","ProductCard","quantity","productOptions","selectedProductOption","handleQuantityChange","productOptionsDetails","details","forEach","elm","i","unit_quantity","unit","push","selectedOption","dataToggle","dataPlacement","title","actual_price","currency","vdbc","Grid","container","spacing","item","InputGroupAddon","addonType","inputProps","newProduct","cartAdded","BuyProductList","productTypeOptions","selectedProductType","cityOptions","selectedCity","franchiseOptions","selectedFranchise","categoryOptions","selectedCategory","isDisabled","subCategoryOptions","selectedSubCategory","productList","Math","random","fetchWalletAction","error","fetchSmartMartAction","marginRight","BuyProducts","bvWeightageList","totalSmartMartDiscount","subCategoryApiCall","categoryId","getSubCategory","obj","sub_category","getProducts","city","subCategoryId","productType","getCity","getFranchise","franchise_name","franchiseId","localCart","quantityFlag","calculateSmartMartDiscount","deleteItemHandler","index","splice","addAdpCreateOrderApi","totalBv","getTotalBv","calculatedBv","calcBvWeightage","body","products","totalAmount","getTotal","addAdp","toast","history","rePurchaseCreateOrderApi","adpId","rePurchase","smartMartBalance","getTotalDiscount","getProductTypeApi","getProductType","product_type","API_URL_v2","category","bvWeightage","Cart","fetchSmartMartStatus","updateRepurchaseAdpDetails","post","cartArray","total","min_value","max_value","AddADP","showBuyProducts","TransactionListItem","task_date","msg","credit","debit","moment","format","StyledTable","ContentWrapper","WalletStatement","statement","Alert","AsyncSelectInput","SelectAdpRepurchase","adpOption","handleInputChange","HandleSelectChange","loadOptions","inputValue","callback","getAdpByPhone","element","sponsorId","sponsorName","setLoggedInAdpDetails","currentAdp","adpName","handleChangeSelect","isClearable","onInputChange","isSearchable","updateLoginStatus","phoneNumber","phone","RePurchase","SmartMartStatement","containerStyles","FamilyTree","treeData","attributes","ADP_ID","children","keyA","keyB","keyC","makeCenter","JSON","parse","stringify","getFrontLineAdp","user","dimensions","treeContainer","getBoundingClientRect","translate","x","y","handleNodeClick","nodeObj","_children","depth","addChildNode","findAndUpdateNode","firstLine","lineList","findnode","filter","child","ref","tc","orientation","pathFunc","shouldCollapseNeighborNodes","nodeSize","dashRoutes","path","icon","layout","SmartMartBalanceStatement","marginLeft","verticalAlign","WalletWrapper","WalletLabel","WalletIcon","WalletNavItem","SmartMartWrapper","SmartMartLabel","SmartMartIcon","SmartMartNavItem","Header","isOpen","dropdownOpen","sidebarToggle","createRef","toggle","dropdownToggle","getBrand","routes","prop","collapse","views","location","pathname","redirect","openSidebar","document","documentElement","classList","current","updateColor","innerWidth","addEventListener","bind","indexOf","Navbar","expand","Container","fluid","NavbarBrand","href","NavbarToggler","Collapse","navbar","InputGroupText","Nav","NavItem","to","Dropdown","nav","DropdownToggle","caret","DropdownMenu","DropdownItem","origin","ps","Footer","default","Sidebar","activeRoute","routeName","navigator","platform","PerfectScrollbar","refs","sidebar","suppressScrollX","suppressScrollY","destroy","data-color","backgroundColor","src","logo","alt","pro","activeClassName","GlobalStyle","createGlobalStyle","mainPanel","handleColorClick","action","scrollTop","scrollingElement","authenticated","from","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","updateLoginSuccess","loginAction","cb","loginApi","loginContainer","form","top","maxWidth","bg","backgroundSize","input","LoginContainer","LoginFormWrapper","BackgroundImage","LogoComponent","Login","showForgotForm","sentOtp","validating","toggleForgot","handlerLogin","navigateToDashboard","validateToken","Logo","LoginForm","password","typeError","a","Promise","resolve","data-validate","ForgotPasswordForm","initialUserData","initialData","rootReducer","combineReducers","Object","assign","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","configureStore","preloadedState","createStore","hist","createBrowserHistory","store","ReactDOM","render","basename","Adp","getElementById","module","exports","hexToRGB","hex","alpha","r","parseInt","slice","g","b","dashboardShippedProductsChart","canvas","ctx","getContext","gradientStroke","createLinearGradient","addColorStop","gradientFill","labels","datasets","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","fill","borderWidth","maintainAspectRatio","legend","tooltips","bodySpacing","mode","intersect","xPadding","yPadding","caretPadding","scales","yAxes","ticks","maxTicksLimit","gridLines","zeroLineColor","drawTicks","drawBorder","xAxes","dashboardAllProductsChart","dashboard24HoursPerformanceChart","pointHoverBackgroundColor","pointHoverBorderColor","titleFontColor","bodyFontColor","fillStyle","fontColor","fontStyle","beginAtZero"],"mappings":"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OhC,EAAW6C,IAAI,QAGxB,SAASZ,IACP,OAAOjC,EAAW6C,IAAI,sBAGxB,SAASV,KACP,OAAOnC,EAAW6C,IAAI,kBAGxB,SAASK,KACP,OAAOlD,EAAW6C,IAAI,iB,ICiLTS,G,uKAxSX,OACE,oCACE,kBAAC,EAAD,CACE1D,KAAK,KACLC,QACE,kBAAC,IAAD,CACE8B,KAAM4B,sBAAoB5B,KAC1B6B,QAASD,sBAAoBC,YAInC,yBAAKhE,UAAU,WACb,kBAACiE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GACf,kBAAC,EAAD,OAEF,kBAACF,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GACf,kBAAC,EAAD,QA8DJ,mC,GAjFc9D,IAAMC,W,6DCkEf8D,ICpFa/D,IAAMC,UDnBpB,CACZ,6BACA,2BACA,wBACA,wBACA,yBACA,sBACA,sBACA,qBACA,iBACA,gBACA,wBACA,mBACA,wBACA,wBACA,iBACA,uBACA,kBACA,aACA,wBACA,eACA,iBACA,kBACA,gBACA,iBACA,wBACA,sBACA,YACA,cACA,uBACA,mBACA,cACA,iBACA,oBACA,sBACA,mBACA,eACA,iBACA,gBACA,uBACA,sBACA,uBACA,yBACA,kBACA,qBACA,kBACA,gBACA,iBACA,iBACA,oBACA,qBACA,sBACA,4BACA,iBACA,oBACA,gBACA,kBACA,kBACA,kBACA,eACA,uBACA,uBACA,yBACA,gBACA,uBACA,eACA,iBACA,yBACA,kBACA,cACA,cACA,cACA,UACA,kBACA,oBACA,kBACA,YACA,kBACA,kBACA,4BACA,8BACA,cACA,kBACA,eACA,aACA,mBACA,wBACA,YACA,wBACA,kBACA,qBACA,qBACA,iBACA,kBACA,oBACA,YACA,mBACA,kBACA,gBACA,kBACA,oB,IE1FkBD,IAAMC,UCFDD,IAAMC,U,QCgBzB+D,GAAQ,CAAC,OAAQ,UAAW,OAAQ,UACpCC,GAAQ,CACZ,CACEvE,UAAW,gBACXmC,KAAM,CAAC,cAAe,QAAS,eAAgB,YAEjD,CACEnC,UAAW,GACXmC,KAA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","file":"static/js/main.f9d9b3af.chunk.js","sourcesContent":["\nimport React from \"react\";\n\nclass PanelHeader extends React.Component {\n  render() {\n    return (\n      <div\n        className={\n          \"panel-header \" +\n          (this.props.size !== undefined\n            ? \"panel-header-\" + this.props.size\n            : \"\")\n        }\n      >\n        {this.props.content}\n      </div>\n    );\n  }\n}\n\nexport default PanelHeader;\n","import axios from \"axios\";\r\n\r\nexport const apiHandler = axios.create({baseURL:window.API_URL})\r\n\r\n","import React from \"react\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport { CardHeader, CardTitle, CardBody, CardFooter } from \"reactstrap\";\r\nimport { apiHandler } from \"config/apiConfig\";\r\n\r\nclass DashboardSummaryCard extends React.Component {\r\n  state = {\r\n    pbv: \"\",\r\n    totalPbv: \"\",\r\n    gbv: \"\",\r\n    totalGbv: \"\",\r\n    coSponsorIncome: 0,\r\n    total_retail_profit: 0,\r\n    zone: \"\",\r\n    bv: 0,\r\n    bvTillDate: 0,\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.getPbvDetails();\r\n    this.getGbvDetails();\r\n    this.fetchCoSponsorIncome();\r\n    this.fetchRetailProfit();\r\n    this.fetchZone();\r\n    this.getBvDetails();\r\n  }\r\n\r\n  getPbvDetails = () => {\r\n    getPbv().then((response) => {\r\n      if (response && response.data && response.data.results && response.data.results.length > 0) {\r\n        this.setState({\r\n          pbv: response.data.results[0].current_month_pbv,\r\n          totalPbv: response.data.results[0].pbv,\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  getGbvDetails = () => {\r\n    getGbv().then((response) => {\r\n      if (response && response.data ) {\r\n        this.setState({\r\n          gbv: response.data.gbv,\r\n          totalGbv: response.data.totalGbv,\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  fetchCoSponsorIncome = () => {\r\n    getCoSponsorIncome().then((response) => {\r\n      if (response && response.data ) {\r\n        this.setState({\r\n          coSponsorIncome: response.data.co_sponsor_income,\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  fetchRetailProfit = () => {\r\n    getRetailProfit().then((response) => {\r\n      if (response && response.data ) {\r\n        this.setState({\r\n          total_retail_profit: response.data.total_retail_profit,\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  fetchZone = () => {\r\n    getZone().then((response) => {\r\n      if (response && response.data ) {\r\n        this.setState({\r\n          zone: response.data.name,\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  getBvDetails = () => {\r\n    getBv().then((response) => {\r\n      if (response && response.data ) {\r\n        this.setState({\r\n          bv: response.data.bv,\r\n          bvTillDate: response.data.bvTillDate,\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let { pbv, totalPbv, gbv, totalGbv, coSponsorIncome, total_retail_profit, zone, bv, bvTillDate } = this.state;\r\n    return (\r\n      <Card className=\"\">\r\n        <CardHeader>\r\n          <h5 className=\"card-category\"></h5>\r\n          <CardTitle tag=\"h4\">Summary</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div className=\"\">\r\n            <p>CURRENT MONTH REPURCHASE (PBV) : {pbv ? pbv : 0}</p>\r\n            <p>Total PBV TILL DATE : {totalPbv ? totalPbv : 0}</p>\r\n            <p>CURRENT MONTH GROUP BUSINESS VOLUME (GBV) : {gbv}</p>\r\n            <p>GBV TILL DATE : {totalGbv}</p>\r\n            <p>CURRENT MONTH BV : {bv}</p>\r\n            <p>TOTAL BV TILL DATE : {bvTillDate}</p>\r\n            <p>YOUR CURRENT ZONE : {zone}</p>\r\n            <p>PERSONAL NEW JOINING TILL DATE : own</p>\r\n            \r\n\r\n\r\n          </div>\r\n        </CardBody>\r\n        <CardFooter>\r\n          <div className=\"stats\">\r\n            <i className=\"now-ui-icons arrows-1_refresh-69\" /> Just Updated\r\n          </div>\r\n        </CardFooter>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashboardSummaryCard;\r\n\r\n\r\nfunction getPbv () {\r\n  return apiHandler.get(\"/pbv\")\r\n}\r\n\r\nfunction getGbv () {\r\n  return apiHandler.get(\"/gbv\")\r\n}\r\n\r\nfunction getCoSponsorIncome () {\r\n  return apiHandler.get(\"/co-sponsor-income\")\r\n}\r\n\r\nfunction getRetailProfit () {\r\n  return apiHandler.get(\"/retail-profit\")\r\n}\r\n\r\nfunction getZone () {\r\n  return apiHandler.get(\"/zone\")\r\n}\r\n\r\nfunction getBv () {\r\n  return apiHandler.get(\"/bv\")\r\n}\r\n","import React from \"react\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport { CardHeader, CardTitle, CardBody, CardFooter } from \"reactstrap\";\r\nimport { apiHandler } from \"config/apiConfig\";\r\n\r\nclass DashboardDefitiateCard extends React.Component {\r\n  state = {\r\n    pbv: \"\",\r\n    totalPbv: \"\",\r\n    gbv: \"\",\r\n    totalGbv: \"\",\r\n    coSponsorIncome: 0,\r\n    total_retail_profit: 0,\r\n    deficitZone: \"\",\r\n    deficitValue: 0,\r\n    showDeficitZone: true,\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.getPbvDetails();\r\n    this.getGbvDetails();\r\n    this.fetchCoSponsorIncome();\r\n    this.fetchRetailProfit();\r\n    this.getDeficitZone();\r\n  }\r\n\r\n  getPbvDetails = () => {\r\n    getPbv().then((response) => {\r\n      if (response && response.data && response.data.results && response.data.results.length > 0) {\r\n        this.setState({\r\n          pbv: response.data.results[0].current_month_pbv,\r\n          totalPbv: response.data.results[0].pbv,\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  getGbvDetails = () => {\r\n    getGbv().then((response) => {\r\n      if (response && response.data ) {\r\n        this.setState({\r\n          gbv: response.data.gbv,\r\n          totalGbv: response.data.totalGbv,\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  fetchCoSponsorIncome = () => {\r\n    getCoSponsorIncome().then((response) => {\r\n      if (response && response.data ) {\r\n        this.setState({\r\n          coSponsorIncome: response.data.co_sponsor_income,\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  fetchRetailProfit = () => {\r\n    getRetailProfit().then((response) => {\r\n      if (response && response.data ) {\r\n        this.setState({\r\n          total_retail_profit: response.data.total_retail_profit,\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  fetchDeficitZone = () => {\r\n    getRetailProfit().then((response) => {\r\n      if (response && response.data ) {\r\n        this.setState({\r\n          total_retail_profit: response.data.total_retail_profit,\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  getDeficitZone = () => {\r\n    getDeficitZone().then((response) => {\r\n      console.log(response.data)\r\n      if ( response && response.data && response.data.deficitZone === false ) {\r\n        this.setState({\r\n          showDeficitZone: false,\r\n        })\r\n      } else {\r\n        this.setState({\r\n          showDeficitZone: true,\r\n          deficitZone: response.data.deficitZone,\r\n          deficitValue: response.data.deficitValue,\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    let { pbv, totalPbv, gbv, totalGbv, coSponsorIncome, total_retail_profit, showDeficitZone, deficitZone, deficitValue } = this.state;\r\n    return (\r\n      <Card className=\"\">\r\n        <CardHeader>\r\n          <h5 className=\"card-category\"></h5>\r\n          <CardTitle tag=\"h4\">Team Summary</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div className=\"\">\r\n            <p>PERSONAL NEW JOINING : own</p>\r\n            <p>CURRENT MONTH TEAM NEW JOINING : own + total downline</p>\r\n            <p>TEAM SIZE : own + total downline</p>\r\n            <p>FRONT LINES : </p>\r\n            <p>REPURCHASE PER MEMBER : CURRENT MONTH BV / TEAM SIZE</p>\r\n            <p>JOINING PER MEMBER : CURRENT MONTH NEW JOINING / TEAM SIZE</p>\r\n            <p>RETAIL PROFIT : Rs{total_retail_profit}</p>\r\n            <p>CO SPONSOR ROYALTY : Rs{coSponsorIncome}</p>\r\n            {\r\n              showDeficitZone && <p>DEFICIT FOR {deficitZone} ZONE : {deficitValue}</p>\r\n            }\r\n            \r\n            <p>SPRINT/SPRINTER DEFICIT : </p>\r\n            <p>DEFICIT FOR CHAMPIONS CLUB : </p>\r\n            <p>DEFICIT FOR BLUE CARD : </p>\r\n            <p>TOTAL 1+1 CARD THIS MONTH : </p>\r\n            <p>LEADER'S CLUB DEFICIT : </p>\r\n            <p>MEB DEFICIT : </p>\r\n            <p>INCOME FROM PULL : </p>\r\n\r\n\r\n          </div>\r\n        </CardBody>\r\n        <CardFooter>\r\n          <div className=\"stats\">\r\n            <i className=\"now-ui-icons arrows-1_refresh-69\" /> Just Updated\r\n          </div>\r\n        </CardFooter>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashboardDefitiateCard;\r\n\r\n\r\nfunction getPbv () {\r\n  return apiHandler.get(\"/pbv\")\r\n}\r\n\r\nfunction getGbv () {\r\n  return apiHandler.get(\"/gbv\")\r\n}\r\n\r\nfunction getCoSponsorIncome () {\r\n  return apiHandler.get(\"/co-sponsor-income\")\r\n}\r\n\r\nfunction getRetailProfit () {\r\n  return apiHandler.get(\"/retail-profit\")\r\n}\r\n\r\nfunction getDeficitZone () {\r\n  return apiHandler.get(\"/deficit-zone\")\r\n}\r\n\r\n","\nimport React from \"react\";\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Row,\n  Col,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Table,\n  Button,\n  Label,\n  FormGroup,\n  Input,\n  UncontrolledTooltip,\n} from \"reactstrap\";\n\n// core components\nimport PanelHeader from \"components/PanelHeader/PanelHeader.js\";\n\nimport {\n  dashboardPanelChart,\n  dashboardShippedProductsChart,\n  dashboardAllProductsChart,\n  dashboard24HoursPerformanceChart,\n} from \"variables/charts.js\";\nimport DashboardSummaryCard from \"components/Molecule/DashboardSummaryCard\";\nimport DashboardDefitiateCard from \"components/Molecule/DashboardDefitiateCard\";\n\nclass Dashboard extends React.Component {\n  render() {\n    return (\n      <>\n        <PanelHeader\n          size=\"lg\"\n          content={\n            <Line\n              data={dashboardPanelChart.data}\n              options={dashboardPanelChart.options}\n            />\n          }\n        />\n        <div className=\"content\">\n          <Row>\n            <Col xs={12} md={6}>\n              <DashboardSummaryCard />\n            </Col>\n            <Col xs={12} md={6}>\n              <DashboardDefitiateCard />\n            </Col>\n            {/* <Col xs={12} md={4}>\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  <h5 className=\"card-category\">2020 Sales</h5>\n                  <CardTitle tag=\"h4\">All products</CardTitle>\n                  <UncontrolledDropdown>\n                    <DropdownToggle\n                      className=\"btn-round btn-outline-default btn-icon\"\n                      color=\"default\"\n                    >\n                      <i className=\"now-ui-icons loader_gear\" />\n                    </DropdownToggle>\n                    <DropdownMenu right>\n                      <DropdownItem>Action</DropdownItem>\n                      <DropdownItem>Another Action</DropdownItem>\n                      <DropdownItem>Something else here</DropdownItem>\n                      <DropdownItem className=\"text-danger\">\n                        Remove data\n                      </DropdownItem>\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n                </CardHeader>\n                <CardBody>\n                  <div className=\"chart-area\">\n                    <Line\n                      data={dashboardAllProductsChart.data}\n                      options={dashboardAllProductsChart.options}\n                    />\n                  </div>\n                </CardBody>\n                <CardFooter>\n                  <div className=\"stats\">\n                    <i className=\"now-ui-icons arrows-1_refresh-69\" /> Just\n                    Updated\n                  </div>\n                </CardFooter>\n              </Card>\n            </Col> */}\n            {/* <Col xs={12} md={6}>\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  <h5 className=\"card-category\">Email Statistics</h5>\n                  <CardTitle tag=\"h4\">24 Hours Performance</CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <div className=\"chart-area\">\n                    <Bar\n                      data={dashboard24HoursPerformanceChart.data}\n                      options={dashboard24HoursPerformanceChart.options}\n                    />\n                  </div>\n                </CardBody>\n                <CardFooter>\n                  <div className=\"stats\">\n                    <i className=\"now-ui-icons ui-2_time-alarm\" /> Last 7 days\n                  </div>\n                </CardFooter>\n              </Card>\n            </Col> */}\n          </Row>\n          <br></br>\n          {/* <Row>\n            <Col xs={12} md={6}>\n              <Card className=\"card-tasks\">\n                <CardHeader>\n                  <h5 className=\"card-category\">Backend Development</h5>\n                  <CardTitle tag=\"h4\">Tasks</CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <div className=\"table-full-width table-responsive\">\n                    <Table>\n                      <tbody>\n                        <tr>\n                          <td>\n                            <FormGroup check>\n                              <Label check>\n                                <Input defaultChecked type=\"checkbox\" />\n                                <span className=\"form-check-sign\" />\n                              </Label>\n                            </FormGroup>\n                          </td>\n                          <td className=\"text-left\">\n                            Sign contract for \"What are conference organizers\n                            afraid of?\"\n                          </td>\n                          <td className=\"td-actions text-right\">\n                            <Button\n                              className=\"btn-round btn-icon btn-icon-mini btn-neutral\"\n                              color=\"info\"\n                              id=\"tooltip731609871\"\n                              type=\"button\"\n                            >\n                              <i className=\"now-ui-icons ui-2_settings-90\" />\n                            </Button>\n                            <UncontrolledTooltip\n                              delay={0}\n                              target=\"tooltip731609871\"\n                            >\n                              Edit Task\n                            </UncontrolledTooltip>\n                            <Button\n                              className=\"btn-round btn-icon btn-icon-mini btn-neutral\"\n                              color=\"danger\"\n                              id=\"tooltip923217206\"\n                              type=\"button\"\n                            >\n                              <i className=\"now-ui-icons ui-1_simple-remove\" />\n                            </Button>\n                            <UncontrolledTooltip\n                              delay={0}\n                              target=\"tooltip923217206\"\n                            >\n                              Remove\n                            </UncontrolledTooltip>\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <FormGroup check>\n                              <Label check>\n                                <Input type=\"checkbox\" />\n                                <span className=\"form-check-sign\" />\n                              </Label>\n                            </FormGroup>\n                          </td>\n                          <td className=\"text-left\">\n                            Lines From Great Russian Literature? Or E-mails From\n                            My Boss?\n                          </td>\n                          <td className=\"td-actions text-right\">\n                            <Button\n                              className=\"btn-round btn-icon btn-icon-mini btn-neutral\"\n                              color=\"info\"\n                              id=\"tooltip907509347\"\n                              type=\"button\"\n                            >\n                              <i className=\"now-ui-icons ui-2_settings-90\" />\n                            </Button>\n                            <UncontrolledTooltip\n                              delay={0}\n                              target=\"tooltip907509347\"\n                            >\n                              Edit Task\n                            </UncontrolledTooltip>\n                            <Button\n                              className=\"btn-round btn-icon btn-icon-mini btn-neutral\"\n                              color=\"danger\"\n                              id=\"tooltip496353037\"\n                              type=\"button\"\n                            >\n                              <i className=\"now-ui-icons ui-1_simple-remove\" />\n                            </Button>\n                            <UncontrolledTooltip\n                              delay={0}\n                              target=\"tooltip496353037\"\n                            >\n                              Remove\n                            </UncontrolledTooltip>\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <FormGroup check>\n                              <Label check>\n                                <Input defaultChecked type=\"checkbox\" />\n                                <span className=\"form-check-sign\" />\n                              </Label>\n                            </FormGroup>\n                          </td>\n                          <td className=\"text-left\">\n                            Flooded: One year later, assessing what was lost and\n                            what was found when a ravaging rain swept through\n                            metro Detroit\n                          </td>\n                          <td className=\"td-actions text-right\">\n                            <Button\n                              className=\"btn-round btn-icon btn-icon-mini btn-neutral\"\n                              color=\"info\"\n                              id=\"tooltip326247652\"\n                              type=\"button\"\n                            >\n                              <i className=\"now-ui-icons ui-2_settings-90\" />\n                            </Button>\n                            <UncontrolledTooltip\n                              delay={0}\n                              target=\"tooltip326247652\"\n                            >\n                              Edit Task\n                            </UncontrolledTooltip>\n                            <Button\n                              className=\"btn-round btn-icon btn-icon-mini btn-neutral\"\n                              color=\"danger\"\n                              id=\"tooltip389516969\"\n                              type=\"button\"\n                            >\n                              <i className=\"now-ui-icons ui-1_simple-remove\" />\n                            </Button>\n                            <UncontrolledTooltip\n                              delay={0}\n                              target=\"tooltip389516969\"\n                            >\n                              Remove\n                            </UncontrolledTooltip>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </Table>\n                  </div>\n                </CardBody>\n                <CardFooter>\n                  <hr />\n                  <div className=\"stats\">\n                    <i className=\"now-ui-icons loader_refresh spin\" /> Updated 3\n                    minutes ago\n                  </div>\n                </CardFooter>\n              </Card>\n            </Col>\n            <Col xs={12} md={6}>\n              <Card>\n                <CardHeader>\n                  <h5 className=\"card-category\">All Persons List</h5>\n                  <CardTitle tag=\"h4\">Employees Stats</CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <Table responsive>\n                    <thead className=\"text-primary\">\n                      <tr>\n                        <th>Name</th>\n                        <th>Country</th>\n                        <th>City</th>\n                        <th className=\"text-right\">Salary</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td>Dakota Rice</td>\n                        <td>Niger</td>\n                        <td>Oud-Turnhout</td>\n                        <td className=\"text-right\">$36,738</td>\n                      </tr>\n                      <tr>\n                        <td>Minerva Hooper</td>\n                        <td>Curaçao</td>\n                        <td>Sinaai-Waas</td>\n                        <td className=\"text-right\">$23,789</td>\n                      </tr>\n                      <tr>\n                        <td>Sage Rodriguez</td>\n                        <td>Netherlands</td>\n                        <td>Baileux</td>\n                        <td className=\"text-right\">$56,142</td>\n                      </tr>\n                      <tr>\n                        <td>Doris Greene</td>\n                        <td>Malawi</td>\n                        <td>Feldkirchen in Kärnten</td>\n                        <td className=\"text-right\">$63,542</td>\n                      </tr>\n                      <tr>\n                        <td>Mason Porter</td>\n                        <td>Chile</td>\n                        <td>Gloucester</td>\n                        <td className=\"text-right\">$78,615</td>\n                      </tr>\n                    </tbody>\n                  </Table>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row> */}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Dashboard;\n","\nconst icons = [\n  \"arrows-1_cloud-download-93\",\n  \"arrows-1_cloud-upload-94\",\n  \"arrows-1_minimal-down\",\n  \"arrows-1_minimal-left\",\n  \"arrows-1_minimal-right\",\n  \"arrows-1_minimal-up\",\n  \"arrows-1_refresh-69\",\n  \"arrows-1_share-66 \",\n  \"business_badge\",\n  \"business_bank\",\n  \"business_briefcase-24\",\n  \"business_bulb-63\",\n  \"business_chart-bar-32\",\n  \"business_chart-pie-36\",\n  \"business_globe\",\n  \"business_money-coins\",\n  \"clothes_tie-bow\",\n  \"design_app\",\n  \"design_bullet-list-67\",\n  \"design_image\",\n  \"design_palette\",\n  \"design_scissors\",\n  \"design_vector\",\n  \"design-2_html5\",\n  \"design-2_ruler-pencil\",\n  \"emoticons_satisfied\",\n  \"files_box\",\n  \"files_paper\",\n  \"files_single-copy-04\",\n  \"health_ambulance\",\n  \"loader_gear\",\n  \"loader_refresh\",\n  \"location_bookmark\",\n  \"location_compass-05\",\n  \"location_map-big\",\n  \"location_pin\",\n  \"location_world\",\n  \"media-1_album\",\n  \"media-1_button-pause\",\n  \"media-1_button-play\",\n  \"media-1_button-power\",\n  \"media-1_camera-compact\",\n  \"media-2_note-03\",\n  \"media-2_sound-wave\",\n  \"objects_diamond\",\n  \"objects_globe\",\n  \"objects_key-25\",\n  \"objects_planet\",\n  \"objects_spaceship\",\n  \"objects_support-17\",\n  \"objects_umbrella-13\",\n  \"education_agenda-bookmark\",\n  \"education_atom\",\n  \"education_glasses\",\n  \"education_hat\",\n  \"education_paper\",\n  \"shopping_bag-16\",\n  \"shopping_basket\",\n  \"shopping_box\",\n  \"shopping_cart-simple\",\n  \"shopping_credit-card\",\n  \"shopping_delivery-fast\",\n  \"shopping_shop\",\n  \"shopping_tag-content\",\n  \"sport_trophy\",\n  \"sport_user-run\",\n  \"tech_controller-modern\",\n  \"tech_headphones\",\n  \"tech_laptop\",\n  \"tech_mobile\",\n  \"tech_tablet\",\n  \"tech_tv\",\n  \"tech_watch-time\",\n  \"text_align-center\",\n  \"text_align-left\",\n  \"text_bold\",\n  \"text_caps-small\",\n  \"gestures_tap-01\",\n  \"transportation_air-baloon\",\n  \"transportation_bus-front-12\",\n  \"travel_info\",\n  \"travel_istanbul\",\n  \"ui-1_bell-53\",\n  \"ui-1_check\",\n  \"ui-1_calendar-60\",\n  \"ui-1_lock-circle-open\",\n  \"ui-1_send\",\n  \"ui-1_settings-gear-63\",\n  \"ui-1_simple-add\",\n  \"ui-1_simple-delete\",\n  \"ui-1_simple-remove\",\n  \"ui-1_zoom-bold\",\n  \"ui-2_chat-round\",\n  \"ui-2_favourite-28\",\n  \"ui-2_like\",\n  \"ui-2_settings-90\",\n  \"ui-2_time-alarm\",\n  \"ui-1_email-85\",\n  \"users_circle-08\",\n  \"users_single-02\",\n];\n\nexport default icons;\n","\nimport React from \"react\";\n// react plugin for creating notifications over the dashboard\nimport NotificationAlert from \"react-notification-alert\";\n\n// reactstrap components\nimport {\n  Alert,\n  Card,\n  CardTitle,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Button,\n} from \"reactstrap\";\n\n// core components\nimport PanelHeader from \"components/PanelHeader/PanelHeader.js\";\n\nclass Notifications extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: true,\n    };\n    this.onDismiss = this.onDismiss.bind(this);\n    this.notify = this.notify.bind(this);\n  }\n  onDismiss() {}\n  notify(place) {\n    var color = Math.floor(Math.random() * 5 + 1);\n    var type;\n    switch (color) {\n      case 1:\n        type = \"primary\";\n        break;\n      case 2:\n        type = \"success\";\n        break;\n      case 3:\n        type = \"danger\";\n        break;\n      case 4:\n        type = \"warning\";\n        break;\n      case 5:\n        type = \"info\";\n        break;\n      default:\n        break;\n    }\n    var options = {};\n    options = {\n      place: place,\n      message: (\n        <div>\n          <div>\n            Welcome to <b>Now UI Dashboard React</b> - a beautiful freebie for\n            every web developer.\n          </div>\n        </div>\n      ),\n      type: type,\n      icon: \"now-ui-icons ui-1_bell-53\",\n      autoDismiss: 7,\n    };\n    this.refs.notificationAlert.notificationAlert(options);\n  }\n  render() {\n    return (\n      <>\n        <PanelHeader\n          content={\n            <div className=\"header text-center\">\n              <h2 className=\"title\">Notifications</h2>\n              <p className=\"category\">\n                Please Checkout{\" \"}\n                <a\n                  href=\"https://github.com/creativetimofficial/react-notification-alert\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  The Full Documentation\n                </a>\n                .\n              </p>\n            </div>\n          }\n        />\n        <div className=\"content\">\n          <NotificationAlert ref=\"notificationAlert\" />\n          <Row>\n            <Col md={6} xs={12}>\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h4\">Notifications Style</CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <Alert color=\"info\">\n                    <span>This is a plain notification</span>\n                  </Alert>\n                  <Alert\n                    color=\"info\"\n                    isOpen={this.state.visible}\n                    toggle={this.onDismiss}\n                  >\n                    <span>This is a notification with close button.</span>\n                  </Alert>\n                  <Alert\n                    color=\"info\"\n                    className=\"alert-with-icon\"\n                    isOpen={this.state.visible}\n                    toggle={this.onDismiss}\n                  >\n                    <span\n                      data-notify=\"icon\"\n                      className=\"now-ui-icons ui-1_bell-53\"\n                    />\n                    <span data-notify=\"message\">\n                      This is a notification with close button and icon.\n                    </span>\n                  </Alert>\n                  <Alert\n                    color=\"info\"\n                    className=\"alert-with-icon\"\n                    isOpen={this.state.visible}\n                    toggle={this.onDismiss}\n                  >\n                    <span\n                      data-notify=\"icon\"\n                      className=\"now-ui-icons ui-1_bell-53\"\n                    />\n                    <span data-notify=\"message\">\n                      This is a notification with close button and icon and have\n                      many lines. You can see that the icon and the close button\n                      are always vertically aligned. This is a beautiful\n                      notification. So you don't have to worry about the style.\n                    </span>\n                  </Alert>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col md={6} xs={12}>\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h4\">Notification states</CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <Alert\n                    color=\"primary\"\n                    isOpen={this.state.visible}\n                    toggle={this.onDismiss}\n                  >\n                    <span>\n                      <b> Primary - </b> This is a regular notification made\n                      with color=\"primary\"\n                    </span>\n                  </Alert>\n                  <Alert\n                    color=\"info\"\n                    isOpen={this.state.visible}\n                    toggle={this.onDismiss}\n                  >\n                    <span>\n                      <b> Info - </b> This is a regular notification made with\n                      color=\"info\"\n                    </span>\n                  </Alert>\n                  <Alert\n                    color=\"success\"\n                    isOpen={this.state.visible}\n                    toggle={this.onDismiss}\n                  >\n                    <span>\n                      <b> Success - </b> This is a regular notification made\n                      with color=\"success\"\n                    </span>\n                  </Alert>\n                  <Alert\n                    color=\"warning\"\n                    isOpen={this.state.visible}\n                    toggle={this.onDismiss}\n                  >\n                    <span>\n                      <b> Warning - </b> This is a regular notification made\n                      with color=\"warning\"\n                    </span>\n                  </Alert>\n                  <Alert\n                    color=\"danger\"\n                    isOpen={this.state.visible}\n                    toggle={this.onDismiss}\n                  >\n                    <span>\n                      <b> Danger - </b> This is a regular notification made with\n                      color=\"danger\"\n                    </span>\n                  </Alert>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col md={12} xs={12}>\n              <Card>\n                <CardBody>\n                  <div className=\"places-buttons\">\n                    <Row>\n                      <Col md={6} className=\"ml-auto mr-auto text-center\">\n                        <CardTitle tag=\"h4\">\n                          Notifications Places\n                          <p className=\"category\">\n                            Click to view notifications\n                          </p>\n                        </CardTitle>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col lg={8} xs={12} className=\"ml-auto mr-auto\">\n                        <Row>\n                          <Col md={4} xs={12}>\n                            <Button\n                              color=\"primary\"\n                              block\n                              onClick={() => this.notify(\"tl\")}\n                            >\n                              Top Left\n                            </Button>\n                          </Col>\n                          <Col md={4} xs={12}>\n                            <Button\n                              color=\"primary\"\n                              block\n                              onClick={() => this.notify(\"tc\")}\n                            >\n                              Top Center\n                            </Button>\n                          </Col>\n                          <Col md={4} xs={12}>\n                            <Button\n                              color=\"primary\"\n                              block\n                              onClick={() => this.notify(\"tr\")}\n                            >\n                              Top Right\n                            </Button>\n                          </Col>\n                        </Row>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col lg={8} xs={12} className=\"ml-auto mr-auto\">\n                        <Row>\n                          <Col md={4} xs={12}>\n                            <Button\n                              color=\"primary\"\n                              block\n                              onClick={() => this.notify(\"bl\")}\n                            >\n                              Bottom Left\n                            </Button>\n                          </Col>\n                          <Col md={4} xs={12}>\n                            <Button\n                              color=\"primary\"\n                              block\n                              onClick={() => this.notify(\"bc\")}\n                            >\n                              Bottom Center\n                            </Button>\n                          </Col>\n                          <Col md={4} xs={12}>\n                            <Button\n                              color=\"primary\"\n                              block\n                              onClick={() => this.notify(\"br\")}\n                            >\n                              Bottom Right\n                            </Button>\n                          </Col>\n                        </Row>\n                      </Col>\n                    </Row>\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Notifications;\n","\nimport React from \"react\";\n\n// reactstrap components\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\n\n// core components\nimport PanelHeader from \"components/PanelHeader/PanelHeader.js\";\n\nimport icons from \"variables/icons\";\n\nclass Icons extends React.Component {\n  render() {\n    return (\n      <>\n        <PanelHeader size=\"sm\" />\n        <div className=\"content\">\n          <Row>\n            <Col md={12}>\n              <Card>\n                <CardHeader>\n                  <h5 className=\"title\">100 Awesome Nucleo Icons</h5>\n                  <p className=\"category\">\n                    Handcrafted by our friends from{\" \"}\n                    <a href=\"https://nucleoapp.com/?ref=1712\">NucleoApp</a>\n                  </p>\n                </CardHeader>\n                <CardBody className=\"all-icons\">\n                  <Row>\n                    {icons.map((prop, key) => {\n                      return (\n                        <Col\n                          lg={2}\n                          md={3}\n                          sm={4}\n                          xs={6}\n                          className=\"font-icon-list\"\n                          key={key}\n                        >\n                          <div className=\"font-icon-detail\">\n                            <i className={\"now-ui-icons \" + prop} />\n                            <p>{prop}</p>\n                          </div>\n                        </Col>\n                      );\n                    })}\n                  </Row>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Icons;\n","\nimport React from \"react\";\n\n// reactstrap components\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\n\n// core components\nimport PanelHeader from \"components/PanelHeader/PanelHeader.js\";\n\nclass Typography extends React.Component {\n  render() {\n    return (\n      <>\n        <PanelHeader size=\"sm\" />\n        <div className=\"content\">\n          <Row>\n            <Col md={12}>\n              <Card>\n                <CardHeader>\n                  <h5 className=\"title\">Now Ui Table Heading</h5>\n                  <p className=\"category\">\n                    Created using Montserrat Font Family\n                  </p>\n                </CardHeader>\n                <CardBody>\n                  <div className=\"typography-line\">\n                    <h1>\n                      <span>Header 1</span>The Life of Now Ui Dashboard{\" \"}\n                    </h1>\n                  </div>\n                  <div className=\"typography-line\">\n                    <h2>\n                      <span>Header 2</span>The Life of Now Ui Dashboard{\" \"}\n                    </h2>\n                  </div>\n                  <div className=\"typography-line\">\n                    <h3>\n                      <span>Header 3</span>The Life of Now Ui Dashboard{\" \"}\n                    </h3>\n                  </div>\n                  <div className=\"typography-line\">\n                    <h4>\n                      <span>Header 4</span>The Life of Now Ui Dashboard{\" \"}\n                    </h4>\n                  </div>\n                  <div className=\"typography-line\">\n                    <h5>\n                      <span>Header 5</span>The Life of Now Ui Dashboard{\" \"}\n                    </h5>\n                  </div>\n                  <div className=\"typography-line\">\n                    <h6>\n                      <span>Header 6</span>The Life of Now Ui Dashboard{\" \"}\n                    </h6>\n                  </div>\n                  <div className=\"typography-line\">\n                    <p>\n                      <span>Paragraph</span>I will be the leader of a company\n                      that ends up being worth billions of dollars, because I\n                      got the answers. I understand culture. I am the nucleus. I\n                      think that’s a responsibility that I have, to push\n                      possibilities, to show people, this is the level that\n                      things could be at.\n                    </p>\n                  </div>\n                  <div className=\"typography-line\">\n                    <span>Quote</span>\n                    <blockquote>\n                      <p className=\"blockquote blockquote-primary\">\n                        \"I will be the leader of a company that ends up being\n                        worth billions of dollars, because I got the answers. I\n                        understand culture. I am the nucleus. I think that’s a\n                        responsibility that I have, to push possibilities, to\n                        show people, this is the level that things could be at.\"\n                        <br />\n                        <br />\n                        <small>- Noaa</small>\n                      </p>\n                    </blockquote>\n                  </div>\n\n                  <div className=\"typography-line\">\n                    <span>Muted Text</span>\n                    <p className=\"text-muted\">\n                      I will be the leader of a company that ends up being worth\n                      billions of dollars, because I got the answers...\n                    </p>\n                  </div>\n                  <div className=\"typography-line\">\n                    <span>Primary Text</span>\n                    <p className=\"text-primary\">\n                      I will be the leader of a company that ends up being worth\n                      billions of dollars, because I got the answers...\n                    </p>\n                  </div>\n                  <div className=\"typography-line\">\n                    <span>Info Text</span>\n                    <p className=\"text-info\">\n                      I will be the leader of a company that ends up being worth\n                      billions of dollars, because I got the answers...{\" \"}\n                    </p>\n                  </div>\n                  <div className=\"typography-line\">\n                    <span>Success Text</span>\n                    <p className=\"text-success\">\n                      I will be the leader of a company that ends up being worth\n                      billions of dollars, because I got the answers...{\" \"}\n                    </p>\n                  </div>\n                  <div className=\"typography-line\">\n                    <span>Warning Text</span>\n                    <p className=\"text-warning\">\n                      I will be the leader of a company that ends up being worth\n                      billions of dollars, because I got the answers...\n                    </p>\n                  </div>\n                  <div className=\"typography-line\">\n                    <span>Danger Text</span>\n                    <p className=\"text-danger\">\n                      I will be the leader of a company that ends up being worth\n                      billions of dollars, because I got the answers...{\" \"}\n                    </p>\n                  </div>\n                  <div className=\"typography-line\">\n                    <h2>\n                      <span>Small Tag</span>\n                      Header with small subtitle <br />\n                      <small>Use \"small\" tag for the headers</small>\n                    </h2>\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Typography;\n","\n// ##############################\n// // // tasks list for Tasks card in Dashboard view\n// #############################\n\nconst tasks = [\n  {\n    checked: true,\n    text: 'Sign contract for \"What are conference organizers afraid of?\"',\n  },\n  {\n    checked: false,\n    text: \"Lines From Great Russian Literature? Or E-mails From My Boss?\",\n  },\n  {\n    checked: true,\n    text:\n      \"Flooded: One year later, assessing what was lost and what was found when a ravaging rain swept through metro Detroit\",\n  },\n];\n\n// ##############################\n// // // table head data and table body data for Tables view\n// #############################\n\nconst thead = [\"Name\", \"Country\", \"City\", \"Salary\"];\nconst tbody = [\n  {\n    className: \"table-success\",\n    data: [\"Dakota Rice\", \"Niger\", \"Oud-Turnhout\", \"$36,738\"],\n  },\n  {\n    className: \"\",\n    data: [\"Minerva Hooper\", \"Curaçao\", \"Sinaai-Waas\", \"$23,789\"],\n  },\n  {\n    className: \"table-info\",\n    data: [\"Sage Rodriguez\", \"Netherlands\", \"Baileux\", \"$56,142\"],\n  },\n  {\n    className: \"\",\n    data: [\"Philip Chaney\", \"Korea, South\", \"Overland Park\", \"$38,735\"],\n  },\n  {\n    className: \"table-danger\",\n    data: [\"Doris Greene\", \"Malawi\", \"Feldkirchen in Kärnten\", \"$63,542\"],\n  },\n  { className: \"\", data: [\"Mason Porter\", \"Chile\", \"Gloucester\", \"$78,615\"] },\n  {\n    className: \"table-warning\",\n    data: [\"Jon Porter\", \"Portugal\", \"Gloucester\", \"$98,615\"],\n  },\n];\n\n// tasks list for Tasks card in Dashboard view\n// data for <thead> of table in TableList view\n// data for <tbody> of table in TableList view\nexport { tasks, thead, tbody };\n","\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n} from \"reactstrap\";\n\n// core components\nimport PanelHeader from \"components/PanelHeader/PanelHeader.js\";\n\nimport { thead, tbody } from \"variables/general\";\n\nclass RegularTables extends React.Component {\n  render() {\n    return (\n      <>\n        <PanelHeader size=\"sm\" />\n        <div className=\"content\">\n          <Row>\n            <Col xs={12}>\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h4\">Simple Table</CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <Table responsive>\n                    <thead className=\"text-primary\">\n                      <tr>\n                        {thead.map((prop, key) => {\n                          if (key === thead.length - 1)\n                            return (\n                              <th key={key} className=\"text-right\">\n                                {prop}\n                              </th>\n                            );\n                          return <th key={key}>{prop}</th>;\n                        })}\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {tbody.map((prop, key) => {\n                        return (\n                          <tr key={key}>\n                            {prop.data.map((prop, key) => {\n                              if (key === thead.length - 1)\n                                return (\n                                  <td key={key} className=\"text-right\">\n                                    {prop}\n                                  </td>\n                                );\n                              return <td key={key}>{prop}</td>;\n                            })}\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </Table>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col xs={12}>\n              <Card className=\"card-plain\">\n                <CardHeader>\n                  <CardTitle tag=\"h4\">Table on Plain Background</CardTitle>\n                  <p className=\"category\"> Here is a subtitle for this table</p>\n                </CardHeader>\n                <CardBody>\n                  <Table responsive>\n                    <thead className=\"text-primary\">\n                      <tr>\n                        {thead.map((prop, key) => {\n                          if (key === thead.length - 1)\n                            return (\n                              <th key={key} className=\"text-right\">\n                                {prop}\n                              </th>\n                            );\n                          return <th key={key}>{prop}</th>;\n                        })}\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {tbody.map((prop, key) => {\n                        return (\n                          <tr key={key}>\n                            {prop.data.map((prop, key) => {\n                              if (key === thead.length - 1)\n                                return (\n                                  <td key={key} className=\"text-right\">\n                                    {prop}\n                                  </td>\n                                );\n                              return <td key={key}>{prop}</td>;\n                            })}\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </Table>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default RegularTables;\n","\nimport React from \"react\";\n// react plugin used to create google maps\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n} from \"react-google-maps\";\n\n// reactstrap components\nimport { Row, Col, Card, CardHeader, CardBody } from \"reactstrap\";\n\n// core components\nimport PanelHeader from \"components/PanelHeader/PanelHeader.js\";\n\nconst MapWrapper = withScriptjs(\n  withGoogleMap((props) => (\n    <GoogleMap\n      defaultZoom={13}\n      defaultCenter={{ lat: 40.748817, lng: -73.985428 }}\n      defaultOptions={{\n        scrollwheel: false,\n        styles: [\n          {\n            featureType: \"water\",\n            elementType: \"geometry\",\n            stylers: [{ color: \"#e9e9e9\" }, { lightness: 17 }],\n          },\n          {\n            featureType: \"landscape\",\n            elementType: \"geometry\",\n            stylers: [{ color: \"#f5f5f5\" }, { lightness: 20 }],\n          },\n          {\n            featureType: \"road.highway\",\n            elementType: \"geometry.fill\",\n            stylers: [{ color: \"#ffffff\" }, { lightness: 17 }],\n          },\n          {\n            featureType: \"road.highway\",\n            elementType: \"geometry.stroke\",\n            stylers: [{ color: \"#ffffff\" }, { lightness: 29 }, { weight: 0.2 }],\n          },\n          {\n            featureType: \"road.arterial\",\n            elementType: \"geometry\",\n            stylers: [{ color: \"#ffffff\" }, { lightness: 18 }],\n          },\n          {\n            featureType: \"road.local\",\n            elementType: \"geometry\",\n            stylers: [{ color: \"#ffffff\" }, { lightness: 16 }],\n          },\n          {\n            featureType: \"poi\",\n            elementType: \"geometry\",\n            stylers: [{ color: \"#f5f5f5\" }, { lightness: 21 }],\n          },\n          {\n            featureType: \"poi.park\",\n            elementType: \"geometry\",\n            stylers: [{ color: \"#dedede\" }, { lightness: 21 }],\n          },\n          {\n            elementType: \"labels.text.stroke\",\n            stylers: [\n              { visibility: \"on\" },\n              { color: \"#ffffff\" },\n              { lightness: 16 },\n            ],\n          },\n          {\n            elementType: \"labels.text.fill\",\n            stylers: [\n              { saturation: 36 },\n              { color: \"#333333\" },\n              { lightness: 40 },\n            ],\n          },\n          { elementType: \"labels.icon\", stylers: [{ visibility: \"off\" }] },\n          {\n            featureType: \"transit\",\n            elementType: \"geometry\",\n            stylers: [{ color: \"#f2f2f2\" }, { lightness: 19 }],\n          },\n          {\n            featureType: \"administrative\",\n            elementType: \"geometry.fill\",\n            stylers: [{ color: \"#fefefe\" }, { lightness: 20 }],\n          },\n          {\n            featureType: \"administrative\",\n            elementType: \"geometry.stroke\",\n            stylers: [{ color: \"#fefefe\" }, { lightness: 17 }, { weight: 1.2 }],\n          },\n        ],\n      }}\n    >\n      <Marker position={{ lat: 40.748817, lng: -73.985428 }} />\n    </GoogleMap>\n  ))\n);\n\nclass FullScreenMap extends React.Component {\n  render() {\n    return (\n      <>\n        <PanelHeader size=\"sm\" />\n        <div className=\"content\">\n          <Row>\n            <Col xs={12}>\n              <Card>\n                <CardHeader>Google Maps</CardHeader>\n                <CardBody>\n                  <div\n                    id=\"map\"\n                    className=\"map\"\n                    style={{ position: \"relative\", overflow: \"hidden\" }}\n                  >\n                    <MapWrapper\n                      googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=YOUR_KEY_HERE\"\n                      loadingElement={<div style={{ height: `100%` }} />}\n                      containerElement={<div style={{ height: `100%` }} />}\n                      mapElement={<div style={{ height: `100%` }} />}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default FullScreenMap;\n","\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  Row,\n  Col,\n} from \"reactstrap\";\n\n// core components\nimport PanelHeader from \"components/PanelHeader/PanelHeader.js\";\n\nclass User extends React.Component {\n  render() {\n    return (\n      <>\n        <PanelHeader size=\"sm\" />\n        <div className=\"content\">\n          <Row>\n            <Col md=\"8\">\n              <Card>\n                <CardHeader>\n                  <h5 className=\"title\">Edit Profile</h5>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <Row>\n                      <Col className=\"pr-1\" md=\"5\">\n                        <FormGroup>\n                          <label>Company (disabled)</label>\n                          <Input\n                            defaultValue=\"Creative Code Inc.\"\n                            disabled\n                            placeholder=\"Company\"\n                            type=\"text\"\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"px-1\" md=\"3\">\n                        <FormGroup>\n                          <label>Username</label>\n                          <Input\n                            defaultValue=\"michael23\"\n                            placeholder=\"Username\"\n                            type=\"text\"\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"pl-1\" md=\"4\">\n                        <FormGroup>\n                          <label htmlFor=\"exampleInputEmail1\">\n                            Email address\n                          </label>\n                          <Input placeholder=\"Email\" type=\"email\" />\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col className=\"pr-1\" md=\"6\">\n                        <FormGroup>\n                          <label>First Name</label>\n                          <Input\n                            defaultValue=\"Mike\"\n                            placeholder=\"Company\"\n                            type=\"text\"\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"pl-1\" md=\"6\">\n                        <FormGroup>\n                          <label>Last Name</label>\n                          <Input\n                            defaultValue=\"Andrew\"\n                            placeholder=\"Last Name\"\n                            type=\"text\"\n                          />\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col md=\"12\">\n                        <FormGroup>\n                          <label>Address</label>\n                          <Input\n                            defaultValue=\"Bld Mihail Kogalniceanu, nr. 8 Bl 1, Sc 1, Ap 09\"\n                            placeholder=\"Home Address\"\n                            type=\"text\"\n                          />\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col className=\"pr-1\" md=\"4\">\n                        <FormGroup>\n                          <label>City</label>\n                          <Input\n                            defaultValue=\"Mike\"\n                            placeholder=\"City\"\n                            type=\"text\"\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"px-1\" md=\"4\">\n                        <FormGroup>\n                          <label>Country</label>\n                          <Input\n                            defaultValue=\"Andrew\"\n                            placeholder=\"Country\"\n                            type=\"text\"\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"pl-1\" md=\"4\">\n                        <FormGroup>\n                          <label>Postal Code</label>\n                          <Input placeholder=\"ZIP Code\" type=\"number\" />\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col md=\"12\">\n                        <FormGroup>\n                          <label>About Me</label>\n                          <Input\n                            cols=\"80\"\n                            defaultValue=\"Lamborghini Mercy, Your chick she so thirsty, I'm in\n                            that two seat Lambo.\"\n                            placeholder=\"Here can be your description\"\n                            rows=\"4\"\n                            type=\"textarea\"\n                          />\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col md=\"4\">\n              <Card className=\"card-user\">\n                <div className=\"image\">\n                  <img alt=\"...\" src={require(\"assets/img/bg5.jpg\")} />\n                </div>\n                <CardBody>\n                  <div className=\"author\">\n                    <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                      <img\n                        alt=\"...\"\n                        className=\"avatar border-gray\"\n                        src={require(\"assets/img/mike.jpg\")}\n                      />\n                      <h5 className=\"title\">Mike Andrew</h5>\n                    </a>\n                    <p className=\"description\">michael24</p>\n                  </div>\n                  <p className=\"description text-center\">\n                    \"Lamborghini Mercy <br />\n                    Your chick she so thirsty <br />\n                    I'm in that two seat Lambo\"\n                  </p>\n                </CardBody>\n                <hr />\n                <div className=\"button-container\">\n                  <Button\n                    className=\"btn-neutral btn-icon btn-round\"\n                    color=\"default\"\n                    href=\"#pablo\"\n                    onClick={(e) => e.preventDefault()}\n                    size=\"lg\"\n                  >\n                    <i className=\"fab fa-facebook-f\" />\n                  </Button>\n                  <Button\n                    className=\"btn-neutral btn-icon btn-round\"\n                    color=\"default\"\n                    href=\"#pablo\"\n                    onClick={(e) => e.preventDefault()}\n                    size=\"lg\"\n                  >\n                    <i className=\"fab fa-twitter\" />\n                  </Button>\n                  <Button\n                    className=\"btn-neutral btn-icon btn-round\"\n                    color=\"default\"\n                    href=\"#pablo\"\n                    onClick={(e) => e.preventDefault()}\n                    size=\"lg\"\n                  >\n                    <i className=\"fab fa-google-plus-g\" />\n                  </Button>\n                </div>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default User;\n","import React from \"react\";\r\nimport { Input, FormGroup } from \"reactstrap\";\r\n\r\n\r\n\r\nfunction TextInput (props) {\r\n    return (\r\n        <>\r\n            <FormGroup>\r\n                {props.showLabel && <label className={props.className}>{props.label}</label>}\r\n                <Input\r\n                    {...props}\r\n                    type={props.type ? props.type : \"text\"}\r\n                    placeholder={props.label}\r\n                />\r\n            </FormGroup>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default TextInput;","import React from \"react\";\r\nimport { Input, FormGroup } from \"reactstrap\";\r\nimport Select from \"react-select\";\r\n\r\nconst style = {\r\n    select: {\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction SelectInput(props) {\r\n  return (\r\n    <>\r\n      <FormGroup>\r\n      {props.showLabel && <label className={props.className}>{props.label}</label>}\r\n        <Select\r\n            classNamePrefix=\"form-control\"\r\n          {...props}\r\n        />\r\n      </FormGroup>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SelectInput;\r\n","import {\r\n  CREATE_ADP_INITIATE,\r\n  CREATE_ADP_FAILED,\r\n  CREATE_ADP_SUCCESS,\r\n  UPDATE_ADP_DATA,\r\n} from \"../constants/adp\";\r\nimport { apiHandler } from \"config/apiConfig\";\r\n\r\nexport const createAdpInitiate = data => {\r\n  return {\r\n    type: CREATE_ADP_INITIATE,\r\n  };\r\n};\r\n\r\nexport const createAdpSuccess = data => {\r\n  return {\r\n    type: CREATE_ADP_SUCCESS,\r\n    payload: data\r\n  };\r\n};\r\n\r\nexport const createAdpFailed = data => {\r\n  return {\r\n    type: CREATE_ADP_FAILED,\r\n  };\r\n};\r\n\r\nexport const updateAdpData = data => {\r\n  return {\r\n    type: UPDATE_ADP_DATA,\r\n    payload: data,\r\n  };\r\n};\r\n\r\n// export const fetchWalletAction = () => {\r\n//   return dispatch => {\r\n//     dispatch(fetchWalletInitiate());\r\n//     return walletApi()\r\n//       .then(response => {\r\n//           if (response) {\r\n//               dispatch(fetchWalletSuccess(response));\r\n//           } else {\r\n//               dispatch(fetchWalletFailed());\r\n//           }\r\n//       })\r\n//       .catch(error => {\r\n//         dispatch(fetchWalletFailed());\r\n//       });\r\n//   };\r\n// };\r\n\r\n\r\n// function walletApi() {\r\n//   return apiHandler.get(`/wallet`).catch((err) => {\r\n//       console.log(err)\r\n//   });\r\n// }\r\n\r\n","export const CREATE_ADP_INITIATE = \"CREATE_ADP_INITIATE\";\r\nexport const CREATE_ADP_FAILED = \"CREATE_ADP_FAILED\";\r\nexport const CREATE_ADP_SUCCESS = \"CREATE_ADP_SUCCESS\";\r\nexport const UPDATE_ADP_DATA = \"UPDATE_ADP_DATA\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Formik } from \"formik\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport TextInput from \"components/Input/TextInput\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport SelectInput from \"components/Input/SelectInput\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { updateAdpData } from \"../../redux/actions/addAdp\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { apiHandler } from \"config/apiConfig\";\r\n\r\nvar ifsc = require(\"ifsc\");\r\n\r\nconst styles = {\r\n  wrapper: {\r\n    padding: \"1rem\",\r\n  },\r\n};\r\n\r\nconst Wrapper = styled(\"div\")(styles.wrapper);\r\n\r\nconst genderOption = [\r\n  {\r\n    value: \"Male\",\r\n    label: \"Male\",\r\n  },\r\n  {\r\n    value: \"Female\",\r\n    label: \"Female\",\r\n  },\r\n  {\r\n    value: \"Others\",\r\n    label: \"Others\",\r\n  },\r\n];\r\nclass AddAdpForm extends React.Component {\r\n  state = {};\r\n\r\n  render() {\r\n    let { adpData, updateAdpData, toggleBuyProducts } = this.props;\r\n    return (\r\n      <Wrapper>\r\n        <Formik\r\n          initialValues={adpData}\r\n          validationSchema={Yup.object().shape({\r\n            firstname: Yup.string().required(\"Required\"),\r\n            sponsor_id: Yup.number()\r\n              .positive(\"please enter number greater than 0\")\r\n              .required(\"Required\"),\r\n            co_sponsor_id: Yup.number()\r\n              .positive(\"please enter number greater than 0\")\r\n              .required(\"Required\"),\r\n            mobile: Yup.number()\r\n              .required(\"Required\")\r\n              .test(\r\n                \"len\",\r\n                \"Must be exactly 10 digits\",\r\n                (val) => val && val.toString().length === 10\r\n              ),\r\n            email: Yup.string().email(\"Invalid email address\"),\r\n            dob: Yup.date().nullable(),\r\n          })}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            setTimeout(() => {\r\n              //   alert(JSON.stringify(values, null, 2));\r\n              //   console.log(values);\r\n              setSubmitting(false);\r\n              //   this.props.history.push(\"/buy-product\");\r\n              updateAdpData(values);\r\n              toggleBuyProducts();\r\n            }, 400);\r\n          }}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            getFieldProps,\r\n            setFieldValue,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isSubmitting,\r\n            /* and other goodies */\r\n          }) => (\r\n            <form onSubmit={handleSubmit} className=\"form-group\">\r\n              <div class=\"row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 row-cols-xl-5\">\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Sponsor ID\"\r\n                    id=\"sponsor_id\"\r\n                    type=\"number\"\r\n                    value={values.sponsor_id}\r\n                    onChange={handleChange}\r\n                    onBlur={(e) => {\r\n                      // handleBlur(e); this.blurHandle(e);\r\n                      getAdpName(e.target.value)\r\n                        .catch((err) => {\r\n                          if (err.response.status === 404) {\r\n                            alert(\"Please check Sponsor ID\");\r\n                            setFieldValue(\"sponsor_id\", \"\");\r\n                          }\r\n                        })\r\n                        .then((response) => {\r\n                          response &&\r\n                            response.data &&\r\n                            setFieldValue(\"sponsor_name\", response.data.result);\r\n                        });\r\n                    }}\r\n                    className={\r\n                      errors.sponsor_id && touched.sponsor_id\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.sponsor_id && touched.sponsor_id && (\r\n                            <div className=\"input-feedback\">{errors.sponsor_id}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Sponsor Name\"\r\n                    id=\"sponsor_name\"\r\n                    type=\"text\"\r\n                    value={values.sponsor_name}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    disabled\r\n                    className={\r\n                      errors.sponsor_name && touched.sponsor_name\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.sponsor_name && touched.sponsor_name && (\r\n                            <div className=\"input-feedback\">{errors.sponsor_name}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Cosponsor ID\"\r\n                    id=\"co_sponsor_id\"\r\n                    type=\"number\"\r\n                    value={values.co_sponsor_id}\r\n                    onChange={handleChange}\r\n                    onBlur={(e) => {\r\n                      // handleBlur(e); this.blurHandle(e);\r\n                      getAdpName(e.target.value)\r\n                        .catch((err) => {\r\n                          if (err.response.status === 404) {\r\n                            alert(\"Please check Co Sponsor ID\");\r\n                            setFieldValue(\"co_sponsor_id\", \"\");\r\n                          }\r\n                        })\r\n                        .then((response) => {\r\n                          response &&\r\n                            response.data &&\r\n                            setFieldValue(\r\n                              \"co_sponsor_name\",\r\n                              response.data.result\r\n                            );\r\n                        });\r\n                    }}\r\n                    className={\r\n                      errors.co_sponsor_id && touched.co_sponsor_id\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.co_sponsor_id && touched.co_sponsor_id && (\r\n                            <div className=\"input-feedback\">{errors.co_sponsor_id}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Co Sponsor Name\"\r\n                    id=\"co_sponsor_name\"\r\n                    type=\"text\"\r\n                    value={values.co_sponsor_name}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    disabled\r\n                    className={\r\n                      errors.co_sponsor_name && touched.co_sponsor_name\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.co_sponsor_name && touched.co_sponsor_name && (\r\n                            <div className=\"input-feedback\">{errors.co_sponsor_name}</div>\r\n                        )} */}\r\n                </div>\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"First Name\"\r\n                    id=\"firstname\"\r\n                    type=\"text\"\r\n                    value={values.firstname}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.firstname && touched.firstname\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.firstname && touched.firstname && (\r\n                            <div className=\"input-feedback\">{errors.firstname}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Last Name\"\r\n                    id=\"lastname\"\r\n                    type=\"text\"\r\n                    value={values.lastname}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.lastname && touched.lastname\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.lastname && touched.lastname && (\r\n                            <div className=\"input-feedback\">{errors.lastname}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  {/* <KeyboardDatePicker\r\n                            id=\"dob\"\r\n                            clearable\r\n                            variant=\"dialog\"\r\n                            format=\"MM/dd/yyyy\"\r\n                            \r\n                            placeholder=\"DOB\"\r\n                            value={values.dob}\r\n                            onChange={value => setFieldValue(\"dob\", value)}\r\n                            helperText={\"MM/dd/yyyy\"}\r\n                            disableFuture\r\n                            onBlur={handleBlur}\r\n                            className={\r\n                            errors.dob && touched.dob\r\n                                ? \"text-input error\"\r\n                                : \"text-input\"\r\n                            }\r\n                            KeyboardButtonProps={{\r\n                            \"aria-label\": \"change date\"\r\n                            }}\r\n                        /> */}\r\n                  <TextInput\r\n                    label=\"DOB\"\r\n                    id=\"dob\"\r\n                    type=\"date\"\r\n                    value={values.dob}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.dob && touched.dob\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.dob && touched.dob && (\r\n                            <div className=\"input-feedback\">{errors.dob}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <SelectInput\r\n                    label=\"Gender\"\r\n                    id=\"gender\"\r\n                    value={values.gender}\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    {...getFieldProps(\"gender\")}\r\n                    className={\r\n                      errors.gender && touched.gender\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    options={genderOption}\r\n                    showLabel\r\n                  />\r\n\r\n                  {/* {errors.gender && touched.gender && (\r\n                            <div className=\"input-feedback\">{errors.gender}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Father First Name\"\r\n                    id=\"father_firstname\"\r\n                    type=\"text\"\r\n                    value={values.father_firstname}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.father_firstname && touched.father_firstname\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.father_firstname && touched.father_firstname && (\r\n                            <div className=\"input-feedback\">{errors.father_firstname}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Father Last Name\"\r\n                    id=\"father_lastname\"\r\n                    type=\"text\"\r\n                    value={values.father_lastname}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.father_lastname && touched.father_lastname\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.father_lastname && touched.father_lastname && (\r\n                            <div className=\"input-feedback\">{errors.father_lastname}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Nominee First Name\"\r\n                    id=\"nominee_firstname\"\r\n                    type=\"text\"\r\n                    value={values.nominee_firstname}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.nominee_firstname && touched.nominee_firstname\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.nominee_firstname && touched.nominee_firstname && (\r\n                            <div className=\"input-feedback\">{errors.nominee_firstname}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Nominee Last Name\"\r\n                    id=\"nominee_lastname\"\r\n                    type=\"text\"\r\n                    value={values.nominee_lastname}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.nominee_lastname && touched.nominee_lastname\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.nominee_lastname && touched.nominee_lastname && (\r\n                            <div className=\"input-feedback\">{errors.nominee_lastname}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <SelectInput\r\n                    label=\"Nominee Gender\"\r\n                    id=\"nominee_gender\"\r\n                    value={values.nominee_gender}\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    {...getFieldProps(\"nominee_gender\")}\r\n                    className={\r\n                      errors.nominee_gender && touched.nominee_gender\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    options={genderOption}\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.nominee_gender && touched.nominee_gender && (\r\n                            <div className=\"input-feedback\">{errors.nominee_gender}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  {/* <KeyboardDatePicker\r\n                            id=\"nominee_dob\"\r\n                            clearable\r\n                            variant=\"dialog\"\r\n                            format=\"MM/dd/yyyy\"\r\n                            placeholder=\"Nominee DOB\"\r\n                            value={values.nominee_dob}\r\n                            helperText={\"MM/dd/yyyy\"}\r\n                            onChange={value => setFieldValue(\"nominee_dob\", value)}\r\n                            disableFuture\r\n                            onBlur={handleBlur}\r\n                            className={\r\n                            errors.nominee_dob && touched.nominee_dob\r\n                                ? \"text-input error\"\r\n                                : \"text-input\"\r\n                            }\r\n                            KeyboardButtonProps={{\r\n                            \"aria-label\": \"change date\"\r\n                            }}\r\n                        /> */}\r\n\r\n                  <TextInput\r\n                    label=\"Nominee DOB\"\r\n                    id=\"nominee_dob\"\r\n                    type=\"date\"\r\n                    value={values.nominee_dob}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.nominee_dob && touched.nominee_dob\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.nominee_dob && touched.nominee_dob && (\r\n                            <div className=\"input-feedback\">{errors.nominee_dob}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Nominee Relation\"\r\n                    id=\"relation\"\r\n                    type=\"text\"\r\n                    value={values.relation}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.relation && touched.relation\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.relation && touched.relation && (\r\n                            <div className=\"input-feedback\">{errors.relation}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"PAN\"\r\n                    id=\"pan\"\r\n                    type=\"text\"\r\n                    value={values.pan}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.pan && touched.pan\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.pan && touched.pan && (\r\n                            <div className=\"input-feedback\">{errors.pan}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Email\"\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    value={values.email}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.email && touched.email\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.email && touched.email && (\r\n                            <div className=\"input-feedback\">{errors.email}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Mobile\"\r\n                    id=\"mobile\"\r\n                    type=\"number\"\r\n                    value={values.mobile}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.mobile && touched.mobile\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.mobile && touched.mobile && (\r\n                            <div className=\"input-feedback\">{errors.mobile}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Address\"\r\n                    id=\"address_correspondence\"\r\n                    type=\"text\"\r\n                    value={values.address_correspondence}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.address_correspondence &&\r\n                      touched.address_correspondence\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.address_correspondence && touched.address_correspondence && (\r\n                            <div className=\"input-feedback\">{errors.address_correspondence}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Landmark\"\r\n                    id=\"landmark\"\r\n                    type=\"text\"\r\n                    value={values.landmark}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.landmark && touched.landmark\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.landmark && touched.landmark && (\r\n                            <div className=\"input-feedback\">{errors.landmark}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"City\"\r\n                    id=\"district\"\r\n                    type=\"text\"\r\n                    value={values.district}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.district && touched.district\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.district && touched.district && (\r\n                            <div className=\"input-feedback\">{errors.district}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"State\"\r\n                    id=\"state\"\r\n                    type=\"text\"\r\n                    value={values.state}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.state && touched.state\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.state && touched.state && (\r\n                            <div className=\"input-feedback\">{errors.state}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Postal Code\"\r\n                    id=\"postal_code\"\r\n                    type=\"number\"\r\n                    value={values.postal_code}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.postal_code && touched.postal_code\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.postal_code && touched.postal_code && (\r\n                            <div className=\"input-feedback\">{errors.postal_code}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"ID Proof\"\r\n                    id=\"id_proof\"\r\n                    type=\"text\"\r\n                    value={values.id_proof}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.id_proof && touched.id_proof\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.id_proof && touched.id_proof && (\r\n                            <div className=\"input-feedback\">{errors.id_proof}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Proof Address\"\r\n                    id=\"proof_address\"\r\n                    type=\"text\"\r\n                    value={values.proof_address}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.proof_address && touched.proof_address\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.proof_address && touched.proof_address && (\r\n                            <div className=\"input-feedback\">{errors.proof_address}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Bank Name\"\r\n                    id=\"bank_name\"\r\n                    type=\"text\"\r\n                    value={values.bank_name}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.bank_name && touched.bank_name\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                    disabled\r\n                  />\r\n                  {/* {errors.bank_name && touched.bank_name && (\r\n                            <div className=\"input-feedback\">{errors.bank_name}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Account Number\"\r\n                    id=\"account_no\"\r\n                    type=\"text\"\r\n                    value={values.account_no}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.account_no && touched.account_no\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.account_no && touched.account_no && (\r\n                            <div className=\"input-feedback\">{errors.account_no}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Branch\"\r\n                    id=\"branch\"\r\n                    type=\"text\"\r\n                    value={values.branch}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.branch && touched.branch\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                    disabled\r\n                  />\r\n                  {/* {errors.branch && touched.branch && (\r\n                            <div className=\"input-feedback\">{errors.branch}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"IFSC\"\r\n                    id=\"ifs_code\"\r\n                    type=\"text\"\r\n                    value={values.ifs_code}\r\n                    onChange={handleChange}\r\n                    // onBlur={handleBlur}\r\n                    className={\r\n                      errors.ifs_code && touched.ifs_code\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                    onBlur={(e) => {\r\n                      // handleBlur(e); this.blurHandle(e);\r\n                      let ifscCode = e.target.value;\r\n                      ifsc.validate(ifscCode)\r\n                        ? fetchIfscDetails(ifscCode).then((response) => {\r\n                            let branch = `${response.BANKCODE} - ${response.BRANCH}`;\r\n\r\n                            setFieldValue(\"bank_name\", response.BANK);\r\n                            setFieldValue(\"branch\", branch);\r\n                          })\r\n                        : alert(\"Please Check IFSC\");\r\n                    }}\r\n                  />\r\n                  {/* {errors.ifs_code && touched.ifs_code && (\r\n                            <div className=\"input-feedback\">{errors.ifs_code}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Account Type\"\r\n                    id=\"account_type\"\r\n                    type=\"text\"\r\n                    value={values.account_type}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.account_type && touched.account_type\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.account_type && touched.account_type && (\r\n                            <div className=\"input-feedback\">{errors.account_type}</div>\r\n                        )} */}\r\n                </div>\r\n              </div>\r\n\r\n              <Button\r\n                color=\"danger\"\r\n                type=\"submit\"\r\n                size=\"lg\"\r\n                className=\"pull-right\"\r\n                disabled={isSubmitting}\r\n              >\r\n                Next\r\n              </Button>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    balance: state.fetchWalletStatus.balance,\r\n    adpData: state.createAdpReducer.adpData,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateAdpData: bindActionCreators(updateAdpData, dispatch),\r\n  };\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default connector(withRouter(AddAdpForm));\r\n\r\nfunction getAdpName(adp_id) {\r\n  return apiHandler.get(\"get-adp-name\", { params: { adp_id } });\r\n}\r\n\r\n// function addAdp(body) {\r\n//   return apiHandler.post(\"add-adp\", body);\r\n// }\r\n\r\nfunction fetchIfscDetails(ifscCode) {\r\n  return ifsc.fetchDetails(ifscCode);\r\n}\r\n","import React from \"react\";\r\n// import {TableContainer, Table, TableHead, TableRow, TableCell, TableBody, Button, TextField, Icon} from \"@material-ui/core\";\r\n// import AddIcon from '@material-ui/icons/Add';\r\n// import RemoveIcon from '@material-ui/icons/Remove';\r\nimport styled  from \"styled-components\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardTitle,\r\n  Table,\r\n  Row,\r\n  Col,\r\n  Button\r\n} from \"reactstrap\";\r\nimport TextInput from \"components/Input/TextInput\";\r\n\r\n\r\nconst style = {\r\n    button: {\r\n        background: \"red !important\",\r\n        color: \"white !important\"\r\n    },\r\n    th: {\r\n      fontSize: \"0.8rem !important\",\r\n      fontWeight: \"400 !important\",\r\n    },\r\n    cartInput: {\r\n      width: \"20px !important\",\r\n      padding: \"0 !important\",\r\n      height: \"20px !important\",\r\n      borderRadius: \"50px\",\r\n      textAlign: \"center\",\r\n      width: \"24px\",\r\n      height: \"24px\",\r\n      margin: \"0 2px\"\r\n    },\r\n    addRemoveButton: {\r\n      width: \"24px\",\r\n      height: \"24px\",\r\n      borderRadius: \"50px\",\r\n      border: 0,\r\n      \"i\": {\r\n        marginTop: \"5px\",\r\n      }\r\n    },\r\n    \r\n}\r\n\r\n\r\nconst StyledButton = styled(Button)(style.button)\r\nconst StyledTH = styled(\"th\")(style.th)\r\nconst StyledTextInput = styled(TextInput)(style.cartInput)\r\nconst StyledAddRemoveButton = styled(StyledButton)(style.addRemoveButton)\r\n\r\nconst cart = (props) => {\r\n    // console.log(props.cartItem);\r\n    return(\r\n            <Table responsive striped bordered hover >\r\n                \r\n                    <thead className=\"text-primary\">\r\n                       <tr  >\r\n                            <StyledTH >Product Name</StyledTH>\r\n                            <StyledTH align=\"right\" >Price</StyledTH>\r\n                            <StyledTH align=\"center\" >Quantity</StyledTH>\r\n                            <StyledTH align=\"right\" >Total Price</StyledTH>\r\n                            <StyledTH align=\"right\" >Discount</StyledTH>\r\n                            <StyledTH align=\"right\" >After Discount</StyledTH>\r\n                            <StyledTH align=\"right\" >Net Price</StyledTH>\r\n                            <StyledTH align=\"right\" >BV</StyledTH>\r\n                            {props.showDiscount && <StyledTH align=\"right\" >Smart Mart Discount</StyledTH>}\r\n                            <StyledTH align=\"right\" >Retail Profit</StyledTH>\r\n                            <StyledTH align=\"right\" >Delete</StyledTH>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                    {props.cartItem.map((row) => (\r\n                            <tr key={row.product}>\r\n                                <td component=\"th\" scope=\"row\">\r\n                                    {row.product}\r\n                                </td>\r\n                                <td align=\"right\">{row.price}</td>\r\n                                <td align=\"right\" style={{display:\"flex\", alignItems: \"end\"}}> \r\n                                  <div style={{display:\"flex\", alignItems: \"end\", marginTop: \"7px\"}}>\r\n                                    <StyledAddRemoveButton \r\n                                          style={{padding:\"0\", outline:\"none\", minWidth:\"10px\" }}\r\n                                          variant=\"contained\"\r\n                                          color=\"primary\"\r\n                                          onClick={() => props.quantityReduced(row)}\r\n                                      >\r\n                                          <i className=\"now-ui-icons ui-1_simple-delete\" />\r\n                                      </StyledAddRemoveButton>\r\n                                      <StyledTextInput \r\n                                          id=\"filled-basic\" \r\n                                          // variant=\"style={{}}\" \r\n                                          disabled\r\n                                          color={\"white\"}\r\n                                          value={row.quantityAdded}\r\n                                          \r\n                                      />\r\n                                      <StyledAddRemoveButton\r\n                                          style={{padding:\"0\", outline:\"none\",  minWidth:\"10px\"}}\r\n                                          variant=\"contained\"\r\n                                          color=\"primary\"\r\n                                          onClick={() =>props.quantityAdded(row)}\r\n                                      >\r\n                                          <i className=\"now-ui-icons ui-1_simple-add\" />\r\n                                      </StyledAddRemoveButton>\r\n                                  </div>\r\n                                    \r\n                                </td>\r\n                                <td align=\"right\">{Number(row.quantityAdded)*Number(row.price)}</td>\r\n                                <td align=\"right\">{row.discount}</td>\r\n                                <td align=\"right\">{Number(row.after_discount)*Number(row.quantityAdded)}</td>\r\n                                <td align=\"right\">{Number(row.after_discount)*Number(row.quantityAdded)}</td>\r\n                                <td align=\"right\">{row.bv}</td>\r\n                                {props.showDiscount && <td align=\"right\">{row.vdba + row.vdbd}</td>}\r\n                                <td align=\"right\">{row.retail_profit}</td>\r\n                                <td align=\"right\">\r\n                                    <StyledButton size=\"small\" fullWidth\r\n                                            variant=\"contained\"\r\n                                            color=\"red\"\r\n                                            onClick={() => props.deleteItem(row)}>Delete</StyledButton>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                             \r\n                    </tbody>\r\n            </Table>\r\n    );\r\n}\r\n\r\nexport default cart;","import React from \"react\";\r\nimport {Card, CardContent, Typography, CardActions, Button, Divider, InputLabel, Grid } from \"@material-ui/core\";\r\nimport Select from \"react-select\";\r\nimport styled  from \"styled-components\"\r\nimport { InputGroup, InputGroupAddon, InputGroupText, Input } from 'reactstrap';\r\n\r\nconst style = {\r\n    card: {\r\n        width: \"225px\",\r\n        height: \"260px\",\r\n        display: \"inline-block\",\r\n        margin: \"5px 8px 0 0\",\r\n        boxShadow: \"0 0 0px #b6b6b6\",\r\n        transition: \"0.2s\",\r\n        transform: \"scale(1)\",\r\n        border: \"1px solid #f2f2f2\",\r\n        overflow: \"visible !important\",\r\n        \"&:hover\": {\r\n            boxShadow: \"0 0 4px #b6b6b6\",\r\n            transform: \"scale(1.05)\",\r\n            transition: \"0.2s\",\r\n        }\r\n\r\n    },\r\n    button: {\r\n        background: \"red !important\",\r\n        color: \"white !important\",\r\n        \"&.disabled\": {\r\n          background: \"grey !important\",\r\n        }\r\n    },\r\n    label: {\r\n        marginTop: \"15px\",\r\n    },\r\n\r\n    buttonContainer: {\r\n        // position: \"absolute\",\r\n        left: \"0\",\r\n        right: \"0\",\r\n        bottom: \"20px\",\r\n    },\r\n    inputGroup: {\r\n        position: \"relative\",\r\n        display: \"table\",\r\n        borderCollapse: \"separate\",\r\n        // width: \"90px\",\r\n        \".input-group-addon\": {\r\n            borderRight: 0,\r\n            padding: \"0 0px\",\r\n            height: \"auto\",\r\n            fontSize: \"12px\",\r\n            color: \"#999\",\r\n            font: \"12px/16px ProximaNovaA-Regular\",\r\n            width: \"50%\",\r\n            borderColor:\" #e0e0e0\",\r\n            display: \"inline-block\",\r\n            \".input-group-text\": {\r\n                padding: \"0 10px\",\r\n                borderBottomRightRadius: 0,\r\n                borderTopRightRadius: 0,\r\n                \r\n            }\r\n        },\r\n        \".form-control\": {\r\n            width: \"50%\",\r\n            display: \"inline-block\",\r\n            padding: \"5px 0\",\r\n            textAlign: \"center\",\r\n            borderRadius: \"0.25rem\",\r\n            borderBottomLeftRadius: 0,\r\n            borderTopLeftRadius: 0,\r\n        }\r\n    },\r\n\r\n    addCartButton: {\r\n        height: \"25px\"\r\n    },\r\n    \r\n    cardContent: {\r\n        height: \"180px\",\r\n        textAlign: \"center\",\r\n        padding: \"10px\",\r\n    },\r\n    select: {\r\n        clear: \"both\",\r\n        width: \"93%\",\r\n        margin: \"auto\",\r\n    },\r\n    productName: {\r\n        color: \"red\",\r\n        fontWeight: \"700\",\r\n        marginBottom: \"1rem\",\r\n        fontSize: \"1rem\",\r\n        display: \"-webkit-box\",\r\n        \"-webkit-line-clamp\": \"2\",\r\n        \"-webkit-box-orient\": \"vertical\",\r\n        maxHeight: \"48px\",\r\n        overflow: \"hidden\",\r\n    }\r\n}\r\n\r\n\r\nconst StyledCard = styled(Card)(style.card)\r\nconst StyledButton = styled(Button)(style.button)\r\nconst StyledLabel = styled(InputLabel)(style.label)\r\nconst StyledButtonContainer = styled(CardActions)(style.buttonContainer)\r\nconst StyledInputGroup = styled(InputGroup)(style.inputGroup)\r\nconst StyledAddCartButton = styled(StyledButton)(style.addCartButton)\r\nconst StyledCardContent = styled(CardContent)(style.cardContent);\r\nconst StyledSelect = styled(Select)(style.select);\r\nconst StyledProductName = styled(\"div\")(style.productName);\r\nclass ProductCard extends React.Component {\r\n    state = {\r\n        quantity: 1,\r\n        productOptions: [],\r\n        selectedProductOption: {},\r\n    }\r\n\r\n    handleQuantityChange = (value) => {\r\n        this.setState({\r\n            quantity: value\r\n        })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        debugger\r\n        let productOptionsDetails = this.props.product.details;\r\n        let productOptions = [];\r\n        let selectedProductOption = [];\r\n        productOptionsDetails && productOptionsDetails.forEach((elm, i) => {\r\n            elm.label = `${elm.unit_quantity} ${elm.unit}`;\r\n            elm.value = elm.id;\r\n            productOptions.push(elm);\r\n        })\r\n        if (productOptions && productOptions.length > 0) {\r\n            selectedProductOption = productOptions[0]\r\n        }\r\n        this.setState({\r\n            productOptions ,\r\n            selectedProductOption\r\n        })\r\n    }\r\n\r\n    handleChange = (selectedOption) => {\r\n        this.setState({\r\n            selectedProductOption: selectedOption,\r\n        })\r\n    }\r\n\r\n    render () {\r\n        let props = this.props;\r\n        let { selectedProductOption, productOptions } = this.state;\r\n        \r\n        return(\r\n            <StyledCard variant=\"outlined\" >   \r\n                <StyledCardContent>\r\n                    <StyledProductName dataToggle=\"tooltip\" dataPlacement=\"bottom\" title={props.product.product}>\r\n                        {props.product.product}\r\n                    </StyledProductName>\r\n                    <Typography variant=\"body2\" component=\"p\">\r\n                        Actual Price : RS.{selectedProductOption.price}\r\n                        <br></br>\r\n                        DISCOUNT : {selectedProductOption.discount}\r\n                        <br />\r\n                        You Pay : RS.{selectedProductOption.actual_price}\r\n                        <br></br>\r\n                        BV : {selectedProductOption.bv}\r\n                        <br></br>\r\n                        \r\n\r\n                        {\r\n                            (selectedProductOption.vdbd || selectedProductOption.vdba) && (selectedProductOption.vdbd + selectedProductOption.vdba) != \"0\" ? (\r\n                                <span dataToggle=\"tooltip\" dataPlacement=\"bottom\" title=\"Smart Mart Discount Debit\">{`SMDD: ${selectedProductOption.currency} ${selectedProductOption.vdbd + selectedProductOption.vdba}`}</span>\r\n                            ) : (\r\n                                <span dataToggle=\"tooltip\" dataPlacement=\"bottom\" title=\"Smart Mart Discount Credit\">{`SMDC: ${selectedProductOption.currency} ${selectedProductOption.vdbc}`}</span>\r\n                            )\r\n                        }\r\n                    </Typography>\r\n                    \r\n                </StyledCardContent>\r\n                <StyledSelect \r\n                        options={productOptions}\r\n                        value={selectedProductOption}\r\n                        onChange={this.handleChange}\r\n                />\r\n                <StyledButtonContainer>\r\n                    \r\n                    <Grid container spacing={1}>\r\n                    \r\n                        <Grid item xs={6} >\r\n                            <StyledInputGroup>\r\n                                <InputGroupAddon addonType=\"addon\">\r\n                                {/* <InputGroupText>Qty</InputGroupText> */}\r\n                                Qty\r\n                                </InputGroupAddon>\r\n                                <Input \r\n                                    id=\"quantity\" \r\n                                    value={this.state.quantity} \r\n                                    onChange={(e) => { this.handleQuantityChange(e.target.value) }} \r\n                                    inputProps={{style: {textAlign: \"center\"}} }\r\n                                />\r\n                            </StyledInputGroup>\r\n                        </Grid>\r\n                        \r\n                        {/* <Grid item xs={1} ></Grid> */}\r\n                        <Grid item xs={6} >\r\n                            <StyledAddCartButton size=\"small\" fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={() => {\r\n                                    let newProduct = {\r\n                                        ...props.product,\r\n                                        ...selectedProductOption,\r\n                                        quantityAdded: this.state.quantity\r\n                                    };\r\n                                    props.cartAdded(newProduct)\r\n                                }}>Add</StyledAddCartButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                    \r\n                    \r\n                </StyledButtonContainer>\r\n            </StyledCard>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ProductCard;\r\n\r\n\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\nimport ProductCard from \"../Molecule/ProductCard\";\r\n\r\n\r\nconst BuyProductList = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row row-cols-1 row-cols-sm-2 row-cols-md-2 row-cols-lg-5\">\r\n                <div className=\"col\">\r\n                    <Select\r\n                        placeholder=\"Product Type\"\r\n                        options={props.productTypeOptions}\r\n                        value={props.selectedProductType}\r\n                        onChange={(value) => {\r\n                            props.handleChange(\"selectedProductType\", value);\r\n                        }}\r\n                    />\r\n                </div>\r\n                <br></br>\r\n\r\n                <div className=\"col\">\r\n                    <Select\r\n                        placeholder=\"City\"\r\n                        options={props.cityOptions}\r\n                        value={props.selectedCity}\r\n                        onChange={(value) => {\r\n                            props.handleChange(\"selectedCity\", value);\r\n                        }}\r\n                    />\r\n                </div>\r\n                <br></br>\r\n                <div className=\"col\">\r\n                    <Select\r\n                        placeholder=\"Franchise\"\r\n                        options={props.franchiseOptions}\r\n                        value={props.selectedFranchise}\r\n                        onChange={(value) => {\r\n                            props.handleChange(\"selectedFranchise\", value);\r\n                        }}\r\n                    />\r\n                </div>\r\n                <br></br>\r\n                <div className=\"col\">\r\n                    <Select\r\n                        placeholder=\"Category\"\r\n                        options={props.categoryOptions}\r\n                        value={props.selectedCategory}\r\n                        isDisabled={props.selectedCity.label === undefined ? true : false}\r\n                        onChange={(value) => {\r\n                            props.handleChange(\"selectedCategory\", value);\r\n                        }}\r\n\r\n                    />\r\n                </div>\r\n                <br></br>\r\n                <div className=\"col\">\r\n                    <Select\r\n                        placeholder=\"Sub Category\"\r\n                        options={props.subCategoryOptions}\r\n                        value={props.selectedSubCategory}\r\n                        isDisabled={props.selectedCategory.label === undefined ? true : false}\r\n                        onChange={(value) => {\r\n                            props.handleChange(\"selectedSubCategory\", value);\r\n                        }}\r\n\r\n                    />\r\n                </div>\r\n                <br></br>\r\n            </div>\r\n            <br></br>\r\n            <div className=\"text-center\">\r\n\r\n                {props.productList.map((product, i) => {\r\n                    return (//<div class=\"col\">\r\n                                <ProductCard key={i + Math.random()} product={product} cartAdded={props.cartAdded} />\r\n                            //</div>\r\n                            )\r\n\r\n                })}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BuyProductList;","import {\r\n  FETCH_WALLET_INITIATE,\r\n  FETCH_WALLET_FAILED,\r\n  FETCH_WALLET_SUCCESS,\r\n} from \"../constants/wallet\";\r\nimport { apiHandler } from \"config/apiConfig\";\r\n\r\nexport const fetchWalletInitiate = data => {\r\n  return {\r\n    type: FETCH_WALLET_INITIATE,\r\n  };\r\n};\r\n\r\nexport const fetchWalletSuccess = data => {\r\n  return {\r\n    type: FETCH_WALLET_SUCCESS,\r\n    payload: data\r\n  };\r\n};\r\n\r\nexport const fetchWalletFailed = data => {\r\n  return {\r\n    type: FETCH_WALLET_FAILED,\r\n  };\r\n};\r\n\r\nexport const fetchWalletAction = () => {\r\n  return dispatch => {\r\n    dispatch(fetchWalletInitiate());\r\n    return walletApi()\r\n      .then(response => {\r\n          if (response) {\r\n              dispatch(fetchWalletSuccess(response));\r\n          } else {\r\n              dispatch(fetchWalletFailed());\r\n          }\r\n      })\r\n      .catch(error => {\r\n        dispatch(fetchWalletFailed());\r\n      });\r\n  };\r\n};\r\n\r\n\r\nfunction walletApi() {\r\n  return apiHandler.get(`/wallet`).catch((err) => {\r\n      console.log(err)\r\n  });\r\n}\r\n\r\n","export const FETCH_WALLET_INITIATE = \"FETCH_WALLET_INITIATE\";\r\nexport const FETCH_WALLET_FAILED = \"FETCH_WALLET_FAILED\";\r\nexport const FETCH_WALLET_SUCCESS = \"FETCH_WALLET_SUCCESS\";","import {\r\n  FETCH_SMART_MART_INITIATE,\r\n  FETCH_SMART_MART_FAILED,\r\n  FETCH_SMART_MART_SUCCESS,\r\n} from \"../constants/smartMart\";\r\nimport { apiHandler } from \"config/apiConfig\";\r\n\r\nexport const fetchSmartMartInitiate = data => {\r\n  return {\r\n    type: FETCH_SMART_MART_INITIATE,\r\n  };\r\n};\r\n\r\nexport const fetchSmartMartSuccess = data => {\r\n  return {\r\n    type: FETCH_SMART_MART_SUCCESS,\r\n    payload: data\r\n  };\r\n};\r\n\r\nexport const fetchSmartMartFailed = data => {\r\n  return {\r\n    type: FETCH_SMART_MART_FAILED,\r\n  };\r\n};\r\n\r\nexport const fetchSmartMartAction = () => {\r\n  return dispatch => {\r\n    dispatch(fetchSmartMartInitiate());\r\n    return SmartMartApi()\r\n      .then(response => {\r\n          if (response) {\r\n              dispatch(fetchSmartMartSuccess(response));\r\n          } else {\r\n              dispatch(fetchSmartMartFailed());\r\n          }\r\n      })\r\n      .catch(error => {\r\n        dispatch(fetchSmartMartFailed());\r\n      });\r\n  };\r\n};\r\n\r\n\r\nfunction SmartMartApi() {\r\n  return apiHandler.get(`/smart-mart-balance`).catch((err) => {\r\n      console.log(err)\r\n  });\r\n}\r\n\r\n","export const FETCH_SMART_MART_INITIATE = \"FETCH_SMART_MART_INITIATE\";\r\nexport const FETCH_SMART_MART_FAILED = \"FETCH_SMART_MART_FAILED\";\r\nexport const FETCH_SMART_MART_SUCCESS = \"FETCH_SMART_MART_SUCCESS\";","import React from \"react\";\r\nimport Cart from \"../Molecule/Cart\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport BuyProductList from \"components/Organism/BuyProductList\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { updateAdpData } from \"../../redux/actions/addAdp\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { apiHandler } from \"config/apiConfig\";\r\nimport { fetchWalletAction } from \"redux/actions/wallet\";\r\nimport { toast } from 'react-toastify';\r\nimport { fetchSmartMartAction } from \"redux/actions/smartMart\";\r\n\r\nconst styles = {\r\n  wrapper: {\r\n    padding: \"1rem\",\r\n  },\r\n  button: {\r\n    background: \"red !important\",\r\n    color: \"white !important\",\r\n    marginRight: \"1rem !important\",\r\n    \"&.disabled\": {\r\n      background: \"grey !important\",\r\n    },\r\n    \"&.grey\": {\r\n      background: \"black !important\",\r\n    }\r\n  }\r\n};\r\n\r\nconst Wrapper = styled(\"div\")(styles.wrapper);\r\nconst StyledButton = styled(Button)(styles.button)\r\n\r\nclass BuyProducts extends React.Component {\r\n  state = {\r\n    selectedCategory: [],\r\n    categoryOptions: [],\r\n    subCategoryOptions: [],\r\n    selectedSubCategory: [],\r\n    cityOptions: [],\r\n    selectedCity: [],\r\n    productList: [],\r\n    cart: [],\r\n    adp_id: \"\",\r\n    franchiseOptions: [],\r\n    selectedFranchise: [],\r\n    bvWeightageList: [],\r\n    totalSmartMartDiscount: 0,\r\n    showDiscount: false,\r\n    selectedProductType: [],\r\n    productTypeOptions: [],\r\n\r\n  };\r\n\r\n  componentDidMount() {\r\n    getCategory().then((response) => {\r\n      let categoryOptions = [];\r\n\r\n      response.data.results &&\r\n        response.data.results.forEach((elm) => {\r\n          let obj = {\r\n            value: elm.id,\r\n            label: elm.category,\r\n          };\r\n          categoryOptions.push(obj);\r\n        });\r\n      this.setState({\r\n        categoryOptions,\r\n      });\r\n    });\r\n\r\n    getCity().then((response) => {\r\n      let cityOptions = [];\r\n\r\n      response.data.results &&\r\n        response.data.results.forEach((elm) => {\r\n          let obj = {\r\n            value: elm.id,\r\n            label: elm.city,\r\n          };\r\n          cityOptions.push(obj);\r\n        });\r\n      this.setState({\r\n        cityOptions,\r\n      });\r\n    });\r\n\r\n    getBvWeightage().then((response) => {\r\n      if (response && response.data) {\r\n        this.setState({\r\n          bvWeightageList: response.data.results\r\n        })\r\n      }\r\n    })\r\n\r\n    this.getProductTypeApi();\r\n  }\r\n\r\n  subCategoryApiCall = (categoryId) => {\r\n    getSubCategory(categoryId).then((response) => {\r\n      let subCategoryOptions = [];\r\n\r\n      response.data.results &&\r\n        response.data.results.forEach((elm) => {\r\n          let obj = {\r\n            value: elm.id,\r\n            label: elm.sub_category,\r\n          };\r\n          subCategoryOptions.push(obj);\r\n        });\r\n      this.setState({\r\n        subCategoryOptions,\r\n      });\r\n    });\r\n  };\r\n\r\n  handleChange = (type, value) => {\r\n    this.setState(\r\n      {\r\n        [type]: value,\r\n      },\r\n      () => {\r\n        if (type === \"selectedCategory\") {\r\n          this.setState(\r\n            {\r\n              selectedSubCategory: [],\r\n            },\r\n            () => {\r\n              this.subCategoryApiCall(value.value);\r\n            }\r\n          );\r\n        } else if (type === \"selectedSubCategory\") {\r\n          let body = {\r\n            params: {\r\n              city: this.state.selectedCity.value,\r\n              categoryId: this.state.selectedCategory.value,\r\n              subCategoryId: this.state.selectedSubCategory.value,\r\n              productType: this.state.selectedProductType.value,\r\n              \r\n            },\r\n          };\r\n          getProducts(body).then((response) => {\r\n            this.setState({\r\n              productList: response.data.results,\r\n            });\r\n          });\r\n        } else if (type === \"selectedCity\") {\r\n          getCity().then((response) => {\r\n            let cityOptions = [];\r\n\r\n            response.data.results &&\r\n              response.data.results.forEach((elm) => {\r\n                let obj = {\r\n                  value: elm.id,\r\n                  label: elm.city,\r\n                };\r\n                cityOptions.push(obj);\r\n              });\r\n            this.setState({\r\n              cityOptions,\r\n            });\r\n          });\r\n\r\n          let body = {\r\n            params: {\r\n              city: this.state.selectedCity.value,\r\n              categoryId: this.state.selectedCategory.value,\r\n              subCategoryId: this.state.selectedSubCategory.value,\r\n              productType: this.state.selectedProductType.value,\r\n\r\n            },\r\n          };\r\n          getProducts(body).then((response) => {\r\n            this.setState({\r\n              productList: response.data.results,\r\n            });\r\n          });\r\n\r\n          getFranchise({\r\n            params: { city: this.state.selectedCity.value },\r\n          }).then((response) => {\r\n            let franchiseOptions = [];\r\n\r\n            response.data.results &&\r\n              response.data.results.forEach((elm) => {\r\n                let obj = {\r\n                  value: elm.id,\r\n                  label: elm.franchise_name,\r\n                };\r\n                franchiseOptions.push(obj);\r\n              });\r\n            this.setState({\r\n              franchiseOptions,\r\n            });\r\n          });\r\n        } else if (type === \"selectedFranchise\") {\r\n          let body = {\r\n            params: {\r\n              city: this.state.selectedCity.value,\r\n              categoryId: this.state.selectedCategory.value,\r\n              subCategoryId: this.state.selectedSubCategory.value,\r\n              franchiseId: this.state.selectedFranchise.value,\r\n              productType: this.state.selectedProductType.value,\r\n            },\r\n          };\r\n          getProducts(body).then((response) => {\r\n            this.setState({\r\n              productList: response.data.results,\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  cartAdded = (product) => {\r\n    let localCart = [...this.state.cart];\r\n    let quantityFlag = 0;\r\n    for (let i = 0; i < localCart.length; i++) {\r\n      if (localCart[i].id === product.id) {\r\n        localCart[i].quantityAdded =\r\n          Number(localCart[i].quantityAdded) + Number(product.quantityAdded);\r\n        quantityFlag = 1;\r\n      }\r\n    }\r\n    if (quantityFlag == 0) {\r\n      localCart.push(product);\r\n    }\r\n    //console.log('localCart After Push', localCart[0]);\r\n    this.setState({ cart: localCart }, () => {\r\n      this.calculateSmartMartDiscount()\r\n    });\r\n\r\n  };\r\n\r\n  deleteItemHandler = (cartItem) => {\r\n    let localCart = [...this.state.cart];\r\n    let index = 0;\r\n    for (let i = 0; i < localCart.length; i++) {\r\n      if (localCart[i].id === cartItem.id) {\r\n        index = i;\r\n      }\r\n    }\r\n    localCart.splice(index, 1);\r\n    this.setState({ cart: localCart }, () => {\r\n      this.calculateSmartMartDiscount()\r\n    });\r\n  };\r\n\r\n  quantityAdded = (cartItem) => {\r\n    let localCart = [...this.state.cart];\r\n\r\n    for (let i = 0; i < localCart.length; i++) {\r\n      if (localCart[i].id === cartItem.id) {\r\n        localCart[i].quantityAdded =\r\n          Number(localCart[i].quantityAdded) + Number(1);\r\n      }\r\n    }\r\n\r\n    this.setState({ cart: localCart }, () => {\r\n      this.calculateSmartMartDiscount()\r\n    });\r\n  };\r\n\r\n  quantityReduced = (cartItem) => {\r\n    let localCart = [...this.state.cart];\r\n\r\n    for (let i = 0; i < localCart.length; i++) {\r\n      if (localCart[i].id === cartItem.id) {\r\n        if (localCart[i].quantityAdded > 1) {\r\n          localCart[i].quantityAdded =\r\n            Number(localCart[i].quantityAdded) - Number(1);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({ cart: localCart }, () => {\r\n      this.calculateSmartMartDiscount()\r\n    });\r\n  };\r\n\r\n  addAdpCreateOrderApi = () => {\r\n    let {cart, bvWeightageList, totalSmartMartDiscount } = this.state;\r\n    let { adpData, balance, fetchWalletAction, updateAdpData, fetchSmartMartAction } = this.props;\r\n    let totalBv = getTotalBv(cart);\r\n\r\n    let calculatedBv =  totalBv * (calcBvWeightage(totalBv, bvWeightageList)/100)\r\n    let body = {\r\n      adpData: adpData,\r\n      products: cart,\r\n      totalAmount:getTotal(cart),\r\n      calculatedBv,\r\n      totalSmartMartDiscount\r\n    }\r\n    if (getTotal(cart) > balance) {\r\n      alert(\"You sont have enough funds in wallet\")\r\n      return\r\n    } \r\n    addAdp(body).then((response) => {\r\n      fetchWalletAction()\r\n      fetchSmartMartAction()\r\n      toast(\"ADP Created\");\r\n      this.props.history.push(\"/adp/dashboard\");\r\n      updateAdpData({adpData: {}});\r\n\r\n    })\r\n  };\r\n\r\n  rePurchaseCreateOrderApi = () => {\r\n    let {cart, bvWeightageList, totalSmartMartDiscount} = this.state;\r\n    let { balance, fetchWalletAction, adpId, fetchSmartMartAction } = this.props;\r\n    let totalBv = getTotalBv(cart);\r\n    let calculatedBv =  totalBv * (calcBvWeightage(totalBv, bvWeightageList)/100)\r\n    \r\n    let body = {\r\n      products: cart,\r\n      totalAmount:getTotal(cart),\r\n      adp_id: adpId,\r\n      calculatedBv,\r\n      totalSmartMartDiscount\r\n    }\r\n\r\n    if (getTotal(cart) > balance) {\r\n      alert(\"You sont have enough funds in wallet\")\r\n      return\r\n    } \r\n\r\n    rePurchase(body).then((response) => {\r\n      fetchWalletAction()\r\n      fetchSmartMartAction()\r\n      toast(\"Order Placed Successfully\");\r\n      this.props.history.push(\"/adp/dashboard\");\r\n\r\n    })\r\n  }\r\n\r\n  calculateSmartMartDiscount = () => {\r\n    let { cart } = this.state;\r\n    let { smartMartBalance } = this.props\r\n    this.setState({\r\n      totalSmartMartDiscount: getTotalDiscount(cart),\r\n      showDiscount: smartMartBalance >= getTotalDiscount(cart) ? true : false \r\n    })\r\n  }\r\n\r\n  getProductTypeApi = () => {\r\n    getProductType().then((response) => {\r\n      let productTypeOptions = [];\r\n\r\n      response.data.results &&\r\n        response.data.results.forEach((elm) => {\r\n          let obj = {\r\n            value: elm.id,\r\n            label: elm.product_type,\r\n          };\r\n          productTypeOptions.push(obj);\r\n        });\r\n      this.setState({\r\n        productTypeOptions,\r\n      });\r\n    });\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      categoryOptions,\r\n      selectedCategory,\r\n      subCategoryOptions,\r\n      selectedSubCategory,\r\n      cityOptions,\r\n      selectedCity,\r\n      productList,\r\n      selectedFranchise,\r\n      franchiseOptions,\r\n      cart,\r\n      bvWeightageList,\r\n      showDiscount,\r\n      totalSmartMartDiscount,\r\n      selectedProductType,\r\n      productTypeOptions\r\n    } = this.state;\r\n\r\n    let { toggleBuyProducts, rePurchase, addAdp } = this.props;\r\n    let totalBv = getTotalBv(cart);\r\n    let bvWeightage = calcBvWeightage(totalBv, bvWeightageList);\r\n    return (\r\n      <Wrapper>\r\n        <h6>Your Cart</h6>\r\n        <Cart\r\n          cartItem={cart}\r\n          deleteItem={this.deleteItemHandler}\r\n          quantityAdded={this.quantityAdded}\r\n          quantityReduced={this.quantityReduced}\r\n          showDiscount={showDiscount}\r\n        />\r\n        <div className=\"row row-cols-1 row-cols-sm-3\">\r\n          \r\n        <div className=\"col\">Total Amount: {showDiscount ? (getTotal(cart) - totalSmartMartDiscount)  :getTotal(cart)}</div>\r\n        <div className=\"col\">Total BV: {totalBv * (bvWeightage/100)}</div>\r\n        <div className=\"col\">BV Weightage: {bvWeightage}</div>\r\n          \r\n        </div>\r\n        \r\n        <br></br>\r\n        <StyledButton \r\n          onClick={rePurchase ? this.rePurchaseCreateOrderApi : this.addAdpCreateOrderApi}\r\n          disabled={cart.length == 0 ? true : false}\r\n          className={cart.length == 0 ? \"disabled\" : \"\"}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >{addAdp ? \"ADD ADP\" : \"PLACE ORDER\"}</StyledButton>\r\n        {\r\n          toggleBuyProducts && <StyledButton \r\n          onClick={toggleBuyProducts}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          className=\"grey\"\r\n        >Back</StyledButton>\r\n        }\r\n        \r\n        <br></br>\r\n        <br></br>\r\n        <BuyProductList\r\n          cityOptions={cityOptions}\r\n          selectedCity={selectedCity}\r\n          categoryOptions={categoryOptions}\r\n          selectedCategory={selectedCategory}\r\n          subCategoryOptions={subCategoryOptions}\r\n          selectedSubCategory={selectedSubCategory}\r\n          handleChange={this.handleChange}\r\n          productList={productList}\r\n          cartAdded={this.cartAdded}\r\n          selectedFranchise={selectedFranchise}\r\n          franchiseOptions={franchiseOptions}\r\n          selectedProductType={selectedProductType}\r\n          productTypeOptions={productTypeOptions}\r\n        />\r\n        \r\n      </Wrapper>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    balance: state.fetchWalletStatus.balance,\r\n    smartMartBalance: state.fetchSmartMartStatus.balance,\r\n    adpData: state.createAdpReducer.adpData,\r\n    adpId: state.updateRepurchaseAdpDetails.adpId,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateAdpData: bindActionCreators(updateAdpData, dispatch),\r\n    fetchWalletAction: bindActionCreators(fetchWalletAction, dispatch),\r\n    fetchSmartMartAction: bindActionCreators(fetchSmartMartAction, dispatch),\r\n  };\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default connector(withRouter(BuyProducts));\r\n\r\n\r\n\r\nfunction getCategory() {\r\n  return axios.get(`${window.API_URL_v2}/list-category`);\r\n}\r\n\r\nfunction getCity() {\r\n  return axios.get(`${window.API_URL_v2}/list-city`);\r\n}\r\n\r\nfunction getProducts(body) {\r\n  return axios.get(`${window.API_URL_v2}/get-all-products`, body);\r\n}\r\n\r\nfunction getSubCategory(categoryId) {\r\n  return axios.get(`${window.API_URL_v2}/list-sub-category`, {\r\n    params: {\r\n      categoryId: categoryId,\r\n    },\r\n  });\r\n}\r\n\r\nfunction getProductType() {\r\n  return axios.get(`${window.API_URL_v2}/get-product-type`);\r\n}\r\n\r\nfunction getFranchise(body) {\r\n  return axios.get(`${window.API_URL_v2}/get-franchise`, body);\r\n}\r\n\r\nfunction addAdp(body) {\r\n  return apiHandler.post(`/add-adp`, body);\r\n}\r\n\r\nfunction rePurchase(body) {\r\n  return apiHandler.post(`/re-purchase`, body);\r\n}\r\n\r\nfunction getTotal (cartArray) {\r\n  let total = 0;\r\n  cartArray && cartArray.forEach((elm) => {\r\n    total = total + (elm.actual_price * elm.quantityAdded)\r\n  })\r\n\r\n  return total;\r\n\r\n}\r\n\r\nfunction getTotalDiscount (cartArray) {\r\n  let total = 0;\r\n  cartArray && cartArray.forEach((elm) => {\r\n    total = total + (elm.vdba * elm.quantityAdded) + (elm.vdba * elm.vdbd)\r\n  })\r\n\r\n  return total;\r\n\r\n}\r\n\r\nfunction getBvWeightage () {\r\n  return apiHandler.get(\"/bv-weightage\")\r\n}\r\n\r\nfunction getTotalBv (products) {\r\n  let totalBv = 0;\r\n  products && products.forEach((elm) => {\r\n    totalBv = totalBv + (elm.bv * elm.quantityAdded)\r\n  })\r\n\r\n  return totalBv\r\n}\r\n\r\nfunction calcBvWeightage (totalBv, bvWeightageList) {\r\n  let bvWeightage = 0;\r\n  bvWeightageList && bvWeightageList.forEach((elm) => {\r\n    if (elm.min_value <= totalBv && ( elm.max_value > totalBv )) {\r\n      bvWeightage = elm.value;\r\n    } else if (elm.min_value <= totalBv && elm.max_value == 0) {\r\n      bvWeightage = elm.value;\r\n\r\n    }\r\n  })\r\n  return bvWeightage\r\n\r\n}","import React from \"react\";\r\nimport PanelHeader from \"components/PanelHeader/PanelHeader\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport AddAdpForm from \"components/Forms/AddAdpForm\";\r\nimport BuyProducts from \"components/Forms/BuyProducts\";\r\n\r\nclass AddADP extends React.Component {\r\n  state = {\r\n    showBuyProducts: false,\r\n  };\r\n\r\n  toggleBuyProducts = () => {\r\n    this.setState({\r\n      showBuyProducts: !this.state.showBuyProducts,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let { showBuyProducts } = this.state;\r\n    return (\r\n      <>\r\n        <PanelHeader size=\"sm\" />\r\n\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col md=\"12\">\r\n\t\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t\t<CardHeader>\r\n                  <h5 className=\"title\">Add ADP {showBuyProducts && \"/ Buy Products\"}</h5>\r\n                </CardHeader>\r\n                {\r\n                  showBuyProducts ? (\r\n                    <BuyProducts \r\n                      toggleBuyProducts={this.toggleBuyProducts}\r\n                      addAdp\r\n                    />\r\n                  ) : (\r\n                    <AddAdpForm \r\n                      toggleBuyProducts={this.toggleBuyProducts}\r\n                    />\r\n                  )\r\n                }\r\n\t\t\t\t\t\t\t\t\r\n                \r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddADP;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\n\r\nconst TransactionListItem = (props) => {\r\n  let { task_date, msg, credit, debit } = props.data;\r\n  return (\r\n    <tr>\r\n      <td>{moment(task_date).format(\"llll\")}</td>\r\n      <td>{msg}</td>\r\n      <td \r\n        align=\"center\"\r\n        className={credit == 0 ? \"debit\": \"credit\"}\r\n      >{credit == 0 ? `-${debit}` : `+${credit}`}</td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default TransactionListItem","import React from \"react\";\r\nimport PanelHeader from \"components/PanelHeader/PanelHeader\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Alert,\r\n} from \"reactstrap\";\r\nimport styled from \"styled-components\";\r\nimport TransactionListItem from \"../components/Atom/TransactionListItem\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { fetchWalletAction } from \"../redux/actions/wallet\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst style = {\r\n  th: {\r\n    fontSize: \"0.8rem !important\",\r\n    fontWeight: \"400 !important\",\r\n  },\r\n\r\n  table: {\r\n    width: \"99%\",\r\n    margin: \"auto\",\r\n    \".debit\": {\r\n      color: \"red\",\r\n    },\r\n    \".credit\": {\r\n      color: \"green\",\r\n    },\r\n  },\r\n\r\n  contentWrapper: {\r\n    padding: \"0.5rem\"\r\n  },\r\n};\r\n\r\nconst StyledTH = styled(\"th\")(style.th);\r\nconst StyledTable = styled(Table)(style.table);\r\nconst ContentWrapper = styled(\"div\")(style.contentWrapper);\r\n\r\nclass WalletStatement extends React.Component {\r\n  state = {};\r\n\r\n  componentDidMount = () => {\r\n    this.props.fetchWalletAction();\r\n  }\r\n  \r\n  render() {\r\n    let { balance, statement } = this.props;\r\n    return (\r\n      <>\r\n        <PanelHeader size=\"sm\" />\r\n        <div className=\"content\">\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <h5 className=\"title\">Wallet Statement</h5>\r\n                </CardHeader>\r\n                <ContentWrapper>\r\n                  {statement && statement.length > 0 ? (\r\n                    <StyledTable responsive striped bordered hover>\r\n                      <thead className=\"text-primary\">\r\n                        <tr>\r\n                          <StyledTH>Date</StyledTH>\r\n                          <StyledTH>Message</StyledTH>\r\n                          <StyledTH>Amount</StyledTH>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {statement &&\r\n                          statement.map((elm, i) => {\r\n                            return <TransactionListItem data={elm} key={i} />;\r\n                          })}\r\n                      </tbody>\r\n                    </StyledTable>\r\n                  ) : (\r\n                    <Alert color=\"warning\">\r\n                      <span>Nothing to show</span>\r\n                    </Alert>\r\n                  )}\r\n                </ContentWrapper>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    balance: state.fetchWalletStatus.balance,\r\n    status: state.fetchWalletStatus.status,\r\n    statement: state.fetchWalletStatus.statement,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchWalletAction: bindActionCreators(fetchWalletAction, dispatch),\r\n  };\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default connector(withRouter(WalletStatement));\r\n","import React from \"react\";\r\nimport { Input, FormGroup } from \"reactstrap\";\r\nimport AsyncSelect from 'react-select/async';\r\nconst style = {\r\n    select: {\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction AsyncSelectInput(props) {\r\n  return (\r\n    <>\r\n      <FormGroup>\r\n      {props.showLabel && <label className={props.className}>{props.label}</label>}\r\n        <AsyncSelect\r\n            classNamePrefix=\"form-control\"\r\n          {...props}\r\n        />\r\n      </FormGroup>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AsyncSelectInput;\r\n","import {\r\n  UPDATE_REPURCHASE_ADP_DETAILS,\r\n} from \"../constants/rePurchase\";\r\n\r\n\r\nexport const updateRepurchaseAdpDetails = data => {\r\n  return {\r\n    type: UPDATE_REPURCHASE_ADP_DETAILS,\r\n    payload: data,\r\n  };\r\n};","export const UPDATE_REPURCHASE_ADP_DETAILS = \"UPDATE_REPURCHASE_ADP_DETAILS\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TextInput from \"components/Input/TextInput\";\r\nimport axios from \"axios\";\r\nimport AsyncSelectInput from \"components/Input/AsyncSelctInput\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { updateRepurchaseAdpDetails } from \"../../redux/actions/rePurchase\";\r\n\r\nconst styles = {\r\n  wrapper: {\r\n    padding: \"1rem\",\r\n  },\r\n  button: {\r\n    background: \"red !important\",\r\n    color: \"white !important\",\r\n    marginRight: \"1rem !important\",\r\n    \"&.disabled\": {\r\n      background: \"grey !important\",\r\n    },\r\n    \"&.grey\": {\r\n      background: \"black !important\",\r\n    },\r\n  },\r\n};\r\n\r\nconst Wrapper = styled(\"div\")(styles.wrapper);\r\nclass SelectAdpRepurchase extends React.Component {\r\n  state = {\r\n    adpOption: [],\r\n  };\r\n\r\n  handleInputChange = (value) => {};\r\n\r\n  HandleSelectChange = () => {};\r\n\r\n  loadOptions = (inputValue, callback) => {\r\n    if (inputValue.length > 3 && inputValue.length < 11) {\r\n      getAdpByPhone(inputValue).then(({ data }) => {\r\n        if (data.result && data.result.length > 0) {\r\n          let adpOption = [];\r\n          data.result.forEach((element) => {\r\n            let obj = {\r\n              value: element.adp_id,\r\n              label: `${element.adp_id} - ${element.firstname} ${element.lastname}`,\r\n              name: `${element.firstname} ${element.lastname}`,\r\n              sponsorId: element.sponsor_id,\r\n              sponsorName: element.sponsor_name,\r\n              mobile: element.mobile,\r\n              pan: element.pan,\r\n            };\r\n            adpOption.push(obj);\r\n          });\r\n          this.setState(\r\n            {\r\n              adpOption,\r\n            },\r\n            () => {\r\n              callback(this.state.adpOption);\r\n            }\r\n          );\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.setLoggedInAdpDetails();\r\n  };\r\n\r\n  setLoggedInAdpDetails = () => {\r\n    let { currentAdp, name, updateRepurchaseAdpDetails } = this.props;\r\n    let adpDetail = {\r\n      adpId: currentAdp,\r\n      adpName: name,\r\n    };\r\n    updateRepurchaseAdpDetails(adpDetail);\r\n  };\r\n\r\n  handleChangeSelect = (selectedOption) => {\r\n    if (!selectedOption) return this.setLoggedInAdpDetails();\r\n    let obj = {\r\n      adpId: selectedOption.value,\r\n      adpName: selectedOption.name,\r\n      sponsorId: selectedOption.sponsorId,\r\n      sponsorName: selectedOption.sponsorName,\r\n      mobile: selectedOption.mobile,\r\n      pan: selectedOption.pan,\r\n    };\r\n    this.props.updateRepurchaseAdpDetails(obj);\r\n  };\r\n\r\n  render() {\r\n    let { adpOption } = this.state;\r\n    let { adpName, adpId, sponsorId, sponsorName, mobile, pan } = this.props;\r\n    return (\r\n      <Wrapper className=\"row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-3 row-cols-lg-4\">\r\n        <div className=\"col\">\r\n          <AsyncSelectInput\r\n            label=\"Phone Number\"\r\n            isClearable\r\n            onChange={this.handleChangeSelect}\r\n            onInputChange={this.handleInputChange}\r\n            isSearchable\r\n            loadOptions={this.loadOptions}\r\n            showLabel\r\n            placeholder=\"Search\"\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          <TextInput\r\n            label=\"ADP ID\"\r\n            type=\"text\"\r\n            value={adpId}\r\n            // onChange={handleChange}\r\n            // onBlur={handleBlur}\r\n            disabled\r\n            showLabel\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          <TextInput\r\n            label=\"ADP Name\"\r\n            type=\"text\"\r\n            value={adpName}\r\n            // onChange={handleChange}\r\n            // onBlur={handleBlur}\r\n            disabled\r\n            showLabel\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col\">\r\n          <TextInput\r\n            label=\"Sponsor ID\"\r\n            type=\"text\"\r\n            value={sponsorId}\r\n            // onChange={handleChange}\r\n            // onBlur={handleBlur}\r\n            disabled\r\n            showLabel\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col\">\r\n          <TextInput\r\n            label=\"Sponsor Name\"\r\n            type=\"text\"\r\n            value={sponsorName}\r\n            // onChange={handleChange}\r\n            // onBlur={handleBlur}\r\n            disabled\r\n            showLabel\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col\">\r\n          <TextInput\r\n            label=\"Mobile\"\r\n            type=\"text\"\r\n            value={mobile}\r\n            // onChange={handleChange}\r\n            // onBlur={handleBlur}\r\n            disabled\r\n            showLabel\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col\">\r\n          <TextInput\r\n            label=\"PAN\"\r\n            type=\"text\"\r\n            value={pan}\r\n            // onChange={handleChange}\r\n            // onBlur={handleBlur}\r\n            disabled\r\n            showLabel\r\n          />\r\n        </div>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    adpId: state.updateRepurchaseAdpDetails.adpId,\r\n    adpName: state.updateRepurchaseAdpDetails.adpName,\r\n    sponsorId: state.updateRepurchaseAdpDetails.sponsorId,\r\n    sponsorName: state.updateRepurchaseAdpDetails.sponsorName,\r\n    mobile: state.updateRepurchaseAdpDetails.mobile,\r\n    pan: state.updateRepurchaseAdpDetails.pan,\r\n    currentAdp: state.updateLoginStatus.adpId,\r\n    name: state.updateLoginStatus.name,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateRepurchaseAdpDetails: bindActionCreators(\r\n      updateRepurchaseAdpDetails,\r\n      dispatch\r\n    ),\r\n  };\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default connector(SelectAdpRepurchase);\r\n\r\nfunction getAdpByPhone(phoneNumber) {\r\n  return axios.get(`${window.API_URL}/get-adp-by-phone`, {\r\n    params: {\r\n      phone: phoneNumber,\r\n    },\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport PanelHeader from \"components/PanelHeader/PanelHeader\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport BuyProducts from \"components/Forms/BuyProducts\";\r\nimport SelectAdpRepurchase from \"components/Molecule/SelectAdpRepurchase\";\r\n\r\nclass RePurchase extends React.Component {\r\n  state = {\r\n  };\r\n\r\n  toggleBuyProducts = () => {\r\n    this.setState({\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let { showBuyProducts } = this.state;\r\n    return (\r\n      <>\r\n        <PanelHeader size=\"sm\" />\r\n\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col md=\"12\">\r\n\t\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t\t<CardHeader>\r\n                  <h5 className=\"title\">Re Purchase</h5>\r\n                </CardHeader>\r\n                    <SelectAdpRepurchase />\r\n                    <hr></hr>\r\n                    <BuyProducts \r\n                      rePurchase\r\n                    />\r\n                    <hr></hr>\r\n                    \r\n\t\t\t\t\t\t\t\t\r\n                \r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RePurchase;\r\n","import React from \"react\";\r\nimport PanelHeader from \"components/PanelHeader/PanelHeader\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Alert,\r\n} from \"reactstrap\";\r\nimport styled from \"styled-components\";\r\nimport TransactionListItem from \"../components/Atom/TransactionListItem\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n// import { fetchWalletAction } from \"../../redux/actions/wallet\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst style = {\r\n  th: {\r\n    fontSize: \"0.8rem !important\",\r\n    fontWeight: \"400 !important\",\r\n  },\r\n\r\n  table: {\r\n    width: \"99%\",\r\n    margin: \"auto\",\r\n    \".debit\": {\r\n      color: \"red\",\r\n    },\r\n    \".credit\": {\r\n      color: \"green\",\r\n    },\r\n  },\r\n\r\n  contentWrapper: {\r\n    padding: \"0.5rem\"\r\n  },\r\n};\r\n\r\nconst StyledTH = styled(\"th\")(style.th);\r\nconst StyledTable = styled(Table)(style.table);\r\nconst ContentWrapper = styled(\"div\")(style.contentWrapper);\r\n\r\nclass SmartMartStatement extends React.Component {\r\n  state = {};\r\n  render() {\r\n    let { balance, statement } = this.props;\r\n    return (\r\n      <>\r\n        <PanelHeader size=\"sm\" />\r\n        <div className=\"content\">\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <h5 className=\"title\">Smart Mart balance Statement</h5>\r\n                </CardHeader>\r\n                <ContentWrapper>\r\n                  {statement && statement.length > 0 ? (\r\n                    <StyledTable responsive striped bordered hover>\r\n                      <thead className=\"text-primary\">\r\n                        <tr>\r\n                          <StyledTH>Date</StyledTH>\r\n                          <StyledTH>Message</StyledTH>\r\n                          <StyledTH>Amount</StyledTH>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {statement &&\r\n                          statement.map((elm, i) => {\r\n                            return <TransactionListItem data={elm} key={i} />;\r\n                          })}\r\n                      </tbody>\r\n                    </StyledTable>\r\n                  ) : (\r\n                    <Alert color=\"warning\">\r\n                      <span>Nothing to show</span>\r\n                    </Alert>\r\n                  )}\r\n                </ContentWrapper>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    balance: state.fetchSmartMartStatus.balance,\r\n    status: state.fetchSmartMartStatus.status,\r\n    statement: state.fetchSmartMartStatus.statement,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // fetchWalletAction: bindActionCreators(fetchWalletAction, dispatch),\r\n  };\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default connector(withRouter(SmartMartStatement));\r\n","import React from \"react\";\r\nimport PanelHeader from \"components/PanelHeader/PanelHeader\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport Tree from \"react-d3-tree\";\r\nimport { apiHandler } from \"config/apiConfig\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nconst containerStyles = {\r\n  width: '100%',\r\n  height: '100vh',\r\n}\r\n\r\n\r\nclass FamilyTree extends React.Component {\r\n  state = {\r\n    treeData: [\r\n      {\r\n        name: this.props.name,\r\n        attributes: {\r\n          ADP_ID: this.props.adpId,\r\n        },\r\n        children: [\r\n          {\r\n            name: \"Level 2: A\",\r\n            attributes: {\r\n              keyA: \"val A\",\r\n              keyB: \"val B\",\r\n              keyC: \"val C\",\r\n            },\r\n          },\r\n          {\r\n            name: \"Level 2: B\",\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.makeCenter();\r\n\r\n    let { treeData } = JSON.parse(JSON.stringify(this.state));\r\n    let { adpId } = this.props;\r\n\r\n    getFrontLineAdp(adpId).then((response) => {\r\n\r\n      let children = [];\r\n      response.data.result &&\r\n        response.data.result.forEach((user) => {\r\n          let obj = {};\r\n          obj.name = `${user.firstname} ${user.lastname}`;\r\n          obj.attributes = {};\r\n          obj.attributes[\"ADP ID\"] = user.adp_id;\r\n\r\n          children.push(obj);\r\n        });\r\n\r\n      treeData[0].children = children;\r\n      this.setState({\r\n        treeData,\r\n      });\r\n    });\r\n  };\r\n\r\n  makeCenter = () => {\r\n    const dimensions = this.treeContainer.getBoundingClientRect();\r\n    this.setState({\r\n      translate: {\r\n        x: dimensions.width / 2,\r\n        y: dimensions.height / 2\r\n      }\r\n    });\r\n  }\r\n  \r\n\r\n  handleNodeClick = (nodeObj) => {\r\n    console.log(nodeObj._children)\r\n    console.log(nodeObj)\r\n    if (!nodeObj._children && nodeObj.depth > 0) {\r\n      this.addChildNode(nodeObj.attributes[\"ADP ID\"], nodeObj.depth)\r\n    }\r\n    \r\n  }\r\n\r\n  addChildNode = (adpId, depth) => {\r\n    let { treeData } = JSON.parse(JSON.stringify(this.state));\r\n    getFrontLineAdp(adpId).then((response) => {\r\n\r\n      let children = [];\r\n      response.data.result &&\r\n        response.data.result.forEach((user) => {\r\n          let obj = {};\r\n          obj.name = `${user.firstname} ${user.lastname}`;\r\n          obj.attributes = {};\r\n          obj.attributes[\"ADP ID\"] = user.adp_id;\r\n\r\n          children.push(obj);\r\n        });\r\n      \r\n      \r\n      treeData[0].children = children;\r\n      this.findAndUpdateNode(adpId, depth, children)\r\n      // this.setState({\r\n      //   treeData,\r\n      // });\r\n    });\r\n  };\r\n  \r\n  findAndUpdateNode = (adpId, depth, children) => {\r\n    debugger\r\n    let { treeData } = JSON.parse(JSON.stringify(this.state));\r\n    let firstLine = treeData[0].children;\r\n    let lineList = []\r\n    for(var i = 0; i < depth; i++) {\r\n      lineList = this.findnode(firstLine, adpId, children);\r\n    }\r\n    console.log(lineList)\r\n    treeData[0].children = lineList;\r\n    let originalTreeData = JSON.stringify(this.state.treeData)\r\n    if (originalTreeData != JSON.stringify(treeData)) {\r\n      this.setState({\r\n        treeData\r\n      })\r\n    }\r\n    \r\n  }\r\n\r\n  findnode = (lineList, adpId, children) => {\r\n    debugger\r\n\r\n    lineList.forEach((elm, i) => {\r\n      if (elm.children) {\r\n        elm.children.filter((child) => {\r\n          if (child.attributes[\"ADP ID\"] == adpId) {\r\n            if (children.length > 0) {\r\n              child.children = children;\r\n            }\r\n            \r\n            return lineList\r\n          } else {\r\n            if (child.children) {\r\n              this.findnode(child.children, adpId, children)\r\n            }\r\n            \r\n          }\r\n        }) \r\n      } else {\r\n        if (elm.attributes[\"ADP ID\"] == adpId) {\r\n          elm.children = children;\r\n          return lineList\r\n        } \r\n      }\r\n    })\r\n\r\n    return lineList\r\n\r\n    \r\n  }\r\n\r\n\r\n  render() {\r\n    let { treeData } = this.state;\r\n    return (\r\n      <>\r\n        <PanelHeader size=\"sm\" />\r\n        <div className=\"content\">\r\n          <Row style={{ height: \"80vh\" }}>\r\n            <Col md=\"12\">\r\n              <Card style={{ height: \"80%\", overflow: \"hidden\" }}>\r\n                <CardHeader>\r\n                  <h5 className=\"title\">Family Tree</h5>\r\n                </CardHeader>\r\n                <hr></hr>\r\n                <div id=\"treeWrapper\"  style={containerStyles} ref={tc => (this.treeContainer = tc)}>\r\n                  <Tree \r\n                    data={treeData} \r\n                    onClick={this.handleNodeClick}\r\n                    orientation={'vertical'}\r\n                    pathFunc=\"step\"\r\n                    shouldCollapseNeighborNodes={true}\r\n                    nodeSize={{x: 250, y: 250}}\r\n                    translate={this.state.translate} \r\n                  />\r\n                </div>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction getFrontLineAdp(sponsorId) {\r\n  return apiHandler.get(\"/get-front-line_adp\", {\r\n    params: {\r\n      sponsorId: sponsorId\r\n    }\r\n  });\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    adpId: state.updateLoginStatus.adpId,\r\n    name: state.updateLoginStatus.name,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // fetchWalletAction: bindActionCreators(fetchWalletAction, dispatch),\r\n  };\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default connector(FamilyTree);\r\n","\nimport Dashboard from \"views/Dashboard.js\";\nimport Notifications from \"views/Notifications.js\";\nimport Icons from \"views/Icons.js\";\nimport Typography from \"views/Typography.js\";\nimport TableList from \"views/TableList.js\";\nimport Maps from \"views/Maps.js\";\nimport Upgrade from \"views/Upgrade.js\";\nimport UserPage from \"views/UserPage.js\";\nimport AddADP from \"views/AddADP\";\nimport WalletStatement from \"views/WalletStatement\";\nimport RePurchase from \"views/RePurchase\";\nimport SmartMartBalanceStatement from \"views/SmartMartBalanceStatement\";\nimport FamilyTree from \"views/FamilyTree\";\n\nvar dashRoutes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"design_app\",\n    component: Dashboard,\n    layout: \"/adp\",\n  },\n  // {\n  //   path: \"/icons\",\n  //   name: \"Icons\",\n  //   icon: \"design_image\",\n  //   component: Icons,\n  //   layout: \"/adp\",\n  // },\n  {\n    path: \"/add-adp\",\n    name: \"Add ADP\",\n    icon: \"location_map-big\",\n    component: AddADP,\n    layout: \"/adp\",\n  },\n  {\n    path: \"/wallet-statement\",\n    name: \"Wallet Statement\",\n    icon: \"business_money-coins\",\n    component: WalletStatement,\n    layout: \"/adp\",\n  },\n  {\n    path: \"/smart-mart-statement\",\n    name: \"Smart Mart Statement\",\n    icon: \"business_money-coins\",\n    component: SmartMartBalanceStatement,\n    layout: \"/adp\",\n  },\n  {\n    path: \"/re-purchase\",\n    name: \"Re Purchase\",\n    icon: \"business_money-coins\",\n    component: RePurchase,\n    layout: \"/adp\",\n  },\n\n  {\n    path: \"/family-tree\",\n    name: \"Tree View\",\n    icon: \"business_money-coins\",\n    component: FamilyTree,\n    layout: \"/adp\",\n  },\n  // {\n  //   path: \"/user-page\",\n  //   name: \"User Profile\",\n  //   icon: \"users_single-02\",\n  //   component: UserPage,\n  //   layout: \"/adp\",\n  // },\n  // {\n  //   path: \"/extended-tables\",\n  //   name: \"Table List\",\n  //   icon: \"files_paper\",\n  //   component: TableList,\n  //   layout: \"/adp\",\n  // },\n  // {\n  //   path: \"/typography\",\n  //   name: \"Typography\",\n  //   icon: \"design-2_ruler-pencil\",\n  //   component: Typography,\n  //   layout: \"/adp\",\n  // },\n  // {\n  //   pro: true,\n  //   path: \"/upgrade\",\n  //   name: \"Upgrade to PRO\",\n  //   icon: \"objects_spaceship\",\n  //   component: Upgrade,\n  //   layout: \"/adp\",\n  // },\n];\nexport default dashRoutes;\n","import React from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { fetchWalletAction } from \"../../redux/actions/wallet\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport styled from \"styled-components\";\r\n\r\nconst style = {\r\n  wrapper: {\r\n    display: 'block'\r\n  },\r\n  label: {\r\n    marginLeft: \"0.5rem\",\r\n\r\n  },\r\n  icon: {\r\n    fontSize: \"1.5rem\",\r\n    verticalAlign: \"middle\"\r\n  }\r\n}\r\n\r\nconst WalletWrapper = styled(\"div\")(style.wrapper)\r\nconst WalletLabel = styled(\"span\")(style.label)\r\nconst WalletIcon = styled(\"i\")(style.icon)\r\n\r\nclass WalletNavItem extends React.Component {\r\n  componentDidMount = () => {\r\n    this.props.fetchWalletAction();\r\n  }\r\n\r\n\r\n  render () {\r\n    let { balance, status } = this.props;\r\n    return (\r\n      <WalletWrapper>\r\n        <WalletIcon className=\"now-ui-icons business_money-coins\" />\r\n        <WalletLabel>Wallet Balance: {balance}</WalletLabel>\r\n      </WalletWrapper>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n      balance: state.fetchWalletStatus.balance,\r\n      status: state.fetchWalletStatus.status,\r\n      statement: state.fetchWalletStatus.statement,\r\n\t  };\r\n  };\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      fetchWalletAction: bindActionCreators(fetchWalletAction, dispatch),\r\n    };\r\n  };\r\n  \r\n  const connector = connect(mapStateToProps, mapDispatchToProps);\r\n  \r\n  export default connector(withRouter(WalletNavItem));\r\n\r\n\r\n ","import React from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { fetchSmartMartAction } from \"../../redux/actions/smartMart\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport styled from \"styled-components\";\r\n\r\nconst style = {\r\n  wrapper: {\r\n    display: 'block',\r\n    marginLeft: \"1rem\"\r\n  },\r\n  label: {\r\n    marginLeft: \"0.5rem\",\r\n\r\n  },\r\n  icon: {\r\n    fontSize: \"1.5rem\",\r\n    verticalAlign: \"middle\"\r\n  }\r\n}\r\n\r\nconst SmartMartWrapper = styled(\"div\")(style.wrapper)\r\nconst SmartMartLabel = styled(\"span\")(style.label)\r\nconst SmartMartIcon = styled(\"i\")(style.icon)\r\n\r\nclass SmartMartNavItem extends React.Component {\r\n  componentDidMount = () => {\r\n    this.props.fetchSmartMartAction();\r\n  }\r\n\r\n\r\n  render () {\r\n    let { balance, status } = this.props;\r\n    return (\r\n      <SmartMartWrapper>\r\n        <SmartMartIcon className=\"now-ui-icons business_money-coins\" />\r\n        <SmartMartLabel>Smart Mart Balance: {balance}</SmartMartLabel>\r\n      </SmartMartWrapper>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n      balance: state.fetchSmartMartStatus.balance,\r\n      status: state.fetchSmartMartStatus.status,\r\n      statement: state.fetchSmartMartStatus.statement,\r\n\t  };\r\n  };\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      fetchSmartMartAction: bindActionCreators(fetchSmartMartAction, dispatch),\r\n    };\r\n  };\r\n  \r\n  const connector = connect(mapStateToProps, mapDispatchToProps);\r\n  \r\n  export default connector(withRouter(SmartMartNavItem));\r\n\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Container,\n  InputGroup,\n  InputGroupText,\n  InputGroupAddon,\n  Input,\n} from \"reactstrap\";\n\nimport routes from \"routes.js\";\nimport WalletNavItem from \"components/Atom/WalletNavItem\";\nimport { apiHandler } from \"config/apiConfig\";\nimport SmartMartNavItem from \"components/Atom/SmartMartNavItem\";\n\n\nclass Header extends React.Component {\n  state = {\n    isOpen: false,\n    dropdownOpen: false,\n    color: \"transparent\",\n  };\n  sidebarToggle = React.createRef();\n  toggle = () => {\n    if (this.state.isOpen) {\n      this.setState({\n        color: \"transparent\",\n      });\n    } else {\n      this.setState({\n        color: \"white\",\n      });\n    }\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n  dropdownToggle = (e) => {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n    });\n  };\n  getBrand = () => {\n    var name;\n    routes.map((prop, key) => {\n      if (prop.collapse) {\n        prop.views.map((prop, key) => {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n          return null;\n        });\n      } else {\n        if (prop.redirect) {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n        } else {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n        }\n      }\n      return null;\n    });\n    return name;\n  };\n  openSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.sidebarToggle.current.classList.toggle(\"toggled\");\n  };\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  updateColor = () => {\n    if (window.innerWidth < 993 && this.state.isOpen) {\n      this.setState({\n        color: \"white\",\n      });\n    } else {\n      this.setState({\n        color: \"transparent\",\n      });\n    }\n  };\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor.bind(this));\n  }\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      this.sidebarToggle.current.classList.toggle(\"toggled\");\n    }\n  }\n  render() {\n    return (\n      // add or remove classes depending if we are on full-screen-maps page or not\n      <Navbar\n        color={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"white\"\n            : this.state.color\n        }\n        expand=\"lg\"\n        className={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"navbar-absolute fixed-top\"\n            : \"navbar-absolute fixed-top \" +\n              (this.state.color === \"transparent\" ? \"navbar-transparent \" : \"\")\n        }\n      >\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div className=\"navbar-toggle\">\n              <button\n                type=\"button\"\n                ref={this.sidebarToggle}\n                className=\"navbar-toggler\"\n                onClick={() => this.openSidebar()}\n              >\n                <span className=\"navbar-toggler-bar bar1\" />\n                <span className=\"navbar-toggler-bar bar2\" />\n                <span className=\"navbar-toggler-bar bar3\" />\n              </button>\n            </div>\n            <NavbarBrand href=\"/\">{this.getBrand()}</NavbarBrand>\n          </div>\n          <WalletNavItem />\n          <SmartMartNavItem />\n          <NavbarToggler onClick={this.toggle}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler>\n         \n          <Collapse\n            isOpen={this.state.isOpen}\n            navbar\n            className=\"justify-content-end\"\n          >\n            \n            <form>\n              <InputGroup className=\"no-border\">\n                <Input placeholder=\"Search...\" />\n                <InputGroupAddon addonType=\"append\">\n                  <InputGroupText>\n                    <i className=\"now-ui-icons ui-1_zoom-bold\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n              </InputGroup>\n            </form>\n            <Nav navbar>\n              <NavItem>\n                <Link to=\"#pablo\" className=\"nav-link\">\n                  <i className=\"now-ui-icons media-2_sound-wave\" />\n                  <p>\n                    <span className=\"d-lg-none d-md-block\">Stats</span>\n                  </p>\n                </Link>\n              </NavItem>\n              <Dropdown\n                nav\n                isOpen={this.state.dropdownOpen}\n                toggle={(e) => this.dropdownToggle(e)}\n              >\n                <DropdownToggle caret nav>\n                  <i className=\"now-ui-icons location_world\" />\n                  <p>\n                    <span className=\"d-lg-none d-md-block\">Actions</span>\n                  </p>\n                </DropdownToggle>\n                <DropdownMenu right>\n                  {/* <DropdownItem tag=\"a\">Action</DropdownItem>\n                  <DropdownItem tag=\"a\">Another Action</DropdownItem> */}\n                  <DropdownItem tag=\"button\" onClick={() => {\n                    logoutApi().then(() => {\n                      window.location.href = `${window.location.origin}/adp`\n                    })\n                  }}>Logout</DropdownItem>\n                </DropdownMenu>\n              </Dropdown>\n              <NavItem>\n                <Link to=\"#pablo\" className=\"nav-link\">\n                  <i className=\"now-ui-icons users_single-02\" />\n                  <p>\n                    <span className=\"d-lg-none d-md-block\">Account</span>\n                  </p>\n                </Link>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n\n\nfunction logoutApi(body) {\n  return apiHandler.post(`/logout`, body).catch((err) => {\n      console.log(err)\n  });\n}","\n/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Nav } from \"reactstrap\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\nimport logo from \"impact1.png\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.sidebar, {\n        suppressScrollX: true,\n        suppressScrollY: false,\n      });\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n  }\n  render() {\n    return (\n      <div className=\"sidebar\" data-color={this.props.backgroundColor}>\n        <div className=\"logo\">\n          <a\n            href=\"#\"\n            className=\"simple-text logo-mini\"\n            target=\"_blank\"\n          >\n            <div className=\"logo-img\">\n              <img src={logo} alt=\"react-logo\" />\n            </div>\n          </a>\n      \n        </div>\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n          <Nav>\n            {this.props.routes.map((prop, key) => {\n              if (prop.redirect) return null;\n              return (\n                <li\n                  className={\n                    this.activeRoute(prop.layout + prop.path) +\n                    (prop.pro ? \" active active-pro\" : \"\")\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.layout + prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                  >\n                    <i className={\"now-ui-icons \" + prop.icon} />\n                    <p>{prop.name}</p>\n                  </NavLink>\n                </li>\n              );\n            })}\n          </Nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","\n/*eslint-disable*/\nimport React from \"react\";\nimport { Container } from \"reactstrap\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        className={\"footer\" + (this.props.default ? \" footer-default\" : \"\")}\n      >\n        {/* <Container fluid={this.props.fluid ? true : false}>\n          <nav>\n            <ul>\n              <li>\n                <a\n                  href=\"https://www.creative-tim.com?ref=nudr-footer\"\n                  target=\"_blank\"\n                >\n                  Creative Tim\n                </a>\n              </li>\n              <li>\n                <a\n                  href=\"https://presentation.creative-tim.com?ref=nudr-footer\"\n                  target=\"_blank\"\n                >\n                  About Us\n                </a>\n              </li>\n              <li>\n                <a\n                  href=\"https://blog.creative-tim.com?ref=nudr-footer\"\n                  target=\"_blank\"\n                >\n                  Blog\n                </a>\n              </li>\n            </ul>\n          </nav>\n          <div className=\"copyright\">\n            &copy; {1900 + new Date().getYear()}, Designed by{\" \"}\n            <a\n              href=\"https://www.invisionapp.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Invision\n            </a>\n            . Coded by{\" \"}\n            <a\n              href=\"https://www.creative-tim.com?ref=nudr-footer\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Creative Tim\n            </a>\n            .\n          </div>\n        </Container> */}\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  default: PropTypes.bool,\n  fluid: PropTypes.bool,\n};\n\nexport default Footer;\n","import { createGlobalStyle } from \"styled-components\";\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    padding: 0;\r\n    margin: 0;\r\n    font-family: 'Montserrat', sans-serif;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  input:-webkit-autofill {\r\n    background-color: red !important;\r\n  }\r\n\r\n  /* Chrome, Safari, Edge, Opera */\r\ninput::-webkit-outer-spin-button,\r\ninput::-webkit-inner-spin-button {\r\n  -webkit-appearance: none;\r\n  margin: 0;\r\n}\r\n\r\n/* Firefox */\r\ninput[type=number] {\r\n  -moz-appearance: textfield;\r\n}\r\n\r\n/* The emerging W3C standard\r\n   that is currently Firefox-only */\r\n* {\r\n  scrollbar-width: thin;\r\n  scrollbar-color: black rgba(0, 0, 0, 0.25882352941176473);;\r\n}\r\n\r\n/* Works on Chrome/Edge/Safari */\r\n*::-webkit-scrollbar {\r\n  width: 12px;\r\n}\r\n*::-webkit-scrollbar-track {\r\n  background: rgba(0, 0, 0, 0.25882352941176473);;\r\n}\r\n*::-webkit-scrollbar-thumb {\r\n  background-color: black;\r\n  // border-radius: 20px;\r\n  border: 3px solid rgba(0, 0, 0, 0.25882352941176473);;\r\n}\r\n\r\n.rdg-cell{\r\n  overflow: visible;\r\n}\r\n\r\n.rdg{\r\n  height: auto !important;\r\n  min-height: 100px;\r\n}\r\n\r\n.react-datepicker-wrapper{\r\n  position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n}\r\n\r\n.react-datepicker-wrapper .react-datepicker__input-container input{\r\n  width: 100%;\r\n  height: 31px;\r\n  border: 0px solid;\r\n}\r\n`\r\n\r\nexport default GlobalStyle;","\nimport React from \"react\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// reactstrap components\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\n// core components\nimport Navbar from \"components/Navbars/Navbar.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\n// import FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\n\nimport routes from \"routes.js\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport GlobalStyle from \"utils/GlobalStyles\";\n\nvar ps;\n\nclass Dashboard extends React.Component {\n  state = {\n    backgroundColor: \"red\",\n  };\n  mainPanel = React.createRef();\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.mainPanel.current);\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n\n    \n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.mainPanel.current.scrollTop = 0;\n    }\n  }\n  handleColorClick = (color) => {\n    this.setState({ backgroundColor: color });\n  };\n  render() {\n    return (\n      <div className=\"wrapper\">\n      {!this.props.authenticated &&\n      <Redirect from=\"/adp\" to=\"/login\" />\n      }\n       <GlobalStyle />\n        <Sidebar\n          {...this.props}\n          routes={routes}\n          backgroundColor={this.state.backgroundColor}\n        />\n        <ToastContainer />\n        <div className=\"main-panel\" ref={this.mainPanel}>\n          <Navbar {...this.props} />\n          <Switch>\n            {routes.map((prop, key) => {\n              return (\n                <Route\n                  path={prop.layout + prop.path}\n                  component={prop.component}\n                  key={key}\n                />\n              );\n            })}\n            <Redirect from=\"/adp\" to=\"/adp/dashboard\" />\n          </Switch>\n          <Footer fluid />\n        </div>\n        {/* <FixedPlugin\n          bgColor={this.state.backgroundColor}\n          handleColorClick={this.handleColorClick}\n        /> */}\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    authenticated: state.updateLoginStatus.authenticated,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // updateAdpData: bindActionCreators(updateAdpData, dispatch),\n    // fetchWalletAction: bindActionCreators(fetchWalletAction, dispatch),\n  };\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport default connector(Dashboard);\n","export const size = { \r\n    mobileS: '320px', \r\n    mobileM: '375px', \r\n    mobileL: '425px', \r\n    tablet: '768px', \r\n    laptop: '1024px',\r\n    laptopL: '1440px', \r\n    desktop: '2560px' \r\n}","import { size } from \"./breakPoints\"; \r\nexport const device = { \r\n    mobileS: `@media (min-width: ${size.mobileS})`, \r\n    mobileM: `@media (min-width: ${size.mobileM})`, \r\n    mobileL: `@media (min-width: ${size.mobileL})`, \r\n    // mobileLPortrait: `@media (min-width: ${size.mobileL}) and (max-height: 375px) and ((orientation: landscape))`, \r\n    tablet: `@media (min-width: ${size.tablet})`, \r\n    laptop: `@media (min-width: ${size.laptop})`, \r\n    laptopL: `@media (min-width: ${size.laptopL})`, \r\n    desktop: `@media (min-width: ${size.desktop})`, \r\n    desktopL: `@media (min-width: ${size.desktop})`\r\n};","import {\r\n    UPDATE_LOGIN_INITIATE,\r\n    UPDATE_LOGIN_FAILED,\r\n    UPDATE_LOGIN_SUCCESS,\r\n    UPDATE_LOGOUT_SUCCESS\r\n} from \"../constants/login\";\r\nimport { apiHandler } from \"config/apiConfig\";\r\n\r\nexport const updateLoginInitiate = data => {\r\n    return {\r\n      type: UPDATE_LOGIN_INITIATE,\r\n    };\r\n  };\r\n  \r\n  export const updateLoginSuccess = data => {\r\n    return {\r\n      type: UPDATE_LOGIN_SUCCESS,\r\n      payload: data\r\n    };\r\n  };\r\n  \r\n  export const updateLoginFailed = data => {\r\n    return {\r\n      type: UPDATE_LOGIN_FAILED,\r\n    };\r\n  };\r\n\r\n  export const updateLogoutSuccess = data => {\r\n    return {\r\n      type: UPDATE_LOGOUT_SUCCESS,\r\n      payload: data\r\n    };\r\n  };\r\n  \r\n\r\n\r\n  export const loginAction = (body, cb) => {\r\n    return dispatch => {\r\n      dispatch(updateLoginInitiate());\r\n      return loginApi(body)\r\n        .then(response => {\r\n            if (response) {\r\n                dispatch(updateLoginSuccess(response));\r\n                cb()\r\n            } else {\r\n                dispatch(updateLoginFailed());\r\n            }\r\n        })\r\n        .catch(error => {\r\n          dispatch(updateLoginFailed());\r\n        });\r\n    };\r\n  };\r\n\r\n\r\n  export const logoutAction = (body) => {\r\n    return dispatch => {\r\n        return logoutApi(body)\r\n        .then(response => {\r\n                dispatch(updateLogoutSuccess(response));\r\n                window.location = \"/login\"\r\n        })\r\n        .catch(error => {\r\n        });\r\n    }\r\n    \r\n};\r\n\r\n  \r\n  function loginApi(body) {\r\n    return apiHandler.post(`/login`, body).catch((err) => {\r\n        console.log(err)\r\n    });\r\n  }\r\n  \r\n\r\n    \r\n  function logoutApi(body) {\r\n    return apiHandler.post(`/logout`, body).catch((err) => {\r\n        console.log(err)\r\n    });\r\n  }\r\n  ","export const UPDATE_LOGIN_INITIATE = \"UPDATE_LOGIN_INITIATE\";\r\nexport const UPDATE_LOGIN_FAILED = \"UPDATE_LOGIN_FAILED\";\r\nexport const UPDATE_LOGIN_SUCCESS = \"UPDATE_LOGIN_SUCCESS\";\r\nexport const UPDATE_LOGOUT_SUCCESS = \"UPDATE_LOGOUT_SUCCESS\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TextInput from \"components/Input/TextInput\";\r\nimport { Button } from \"reactstrap\";\r\nimport Logo from \"../impact1.png\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport GlobalStyle from \"utils/GlobalStyles\";\r\nimport { device } from \"../utils/mediaQueries/device\";\r\nimport { loginAction, updateLoginSuccess } from \"../redux/actions/login\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { apiHandler } from \"config/apiConfig\";\r\n\r\nconst style = {\r\n  loginContainer: {\r\n    height: \"100vh\",\r\n    position: \"relative\",\r\n  },\r\n\r\n  form: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    background: \"rgba(0, 0, 0, 0.4588235294117647)\",\r\n    padding: \"5rem 2rem\",\r\n    width: \"90%\",\r\n    [device.tablet]: {\r\n      maxWidth: \"370px\",\r\n    },\r\n  },\r\n  bg: {\r\n    height: \"100%\",\r\n    backgroundSize: \"cover\",\r\n    background: \"radial-gradient(rgb(245, 255, 0), red)\",\r\n  },\r\n  input: {\r\n    background: \"white\",\r\n  },\r\n  logo: {\r\n    display: \"block\",\r\n  },\r\n\r\n  button: {\r\n    width: \"100%\",\r\n  },\r\n};\r\n\r\nconst LoginContainer = styled(\"div\")(style.loginContainer);\r\nconst LoginFormWrapper = styled(\"div\")(style.form);\r\nconst BackgroundImage = styled(\"div\")(style.bg);\r\nconst Input = styled(TextInput)(style.input);\r\nconst LogoComponent = styled(\"img\")(style.logo);\r\nconst StyledButton = styled(Button)(style.button);\r\n\r\nclass Login extends React.Component {\r\n  state = {\r\n    showForgotForm: false,\r\n    sentOtp: false,\r\n    validating: true,\r\n  };\r\n\r\n  toggleForgot = () => {\r\n    this.setState({\r\n      showForgotForm: !this.state.showForgotForm,\r\n    });\r\n  };\r\n\r\n  handlerLogin = (body) => {\r\n    this.props.loginAction(body, this.navigateToDashboard).then((response) => {\r\n      if (this.props.status === \"success\") this.props.history.push(\"/adp\")\r\n      else alert(\"Please check username and password.\")\r\n    })\r\n  };\r\n\r\n  navigateToDashboard = () => {\r\n    this.props.history.push(\"/adp/dashboard\")\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    if (!this.props.authenticated) {\r\n      validateToken().then((response) => {\r\n        if (response.data.status === \"success\") {\r\n          this.props.updateLoginSuccess(response.data)\r\n          this.props.history.push(\"/adp/dashboard\")\r\n        } else {\r\n          this.setState({\r\n            validating: false,\r\n          })\r\n        }\r\n      })\r\n    }\r\n    \r\n  }\r\n\r\n  render() {\r\n    let { showForgotForm, sentOtp } = this.state;\r\n    return (\r\n      <div className=\"limiter\">\r\n        <GlobalStyle />\r\n        <LoginContainer className=\"container-login100\">\r\n          <BackgroundImage\r\n            className=\"login100-more\"\r\n            // style={{\r\n            //   backgroundImage:\r\n            //     \"url(https://images.unsplash.com/photo-1502945015378-0e284ca1a5be?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80)\",\r\n            // }}\r\n          ></BackgroundImage>\r\n          <LoginFormWrapper className=\"wrap-login100\">\r\n            <LogoComponent src={Logo} />\r\n            <br></br>\r\n\r\n            {showForgotForm ? (\r\n              sentOtp ? (\r\n                <generateNewPassword />\r\n              ) : (\r\n                <ForgotPasswordForm toggleForgot={this.toggleForgot} />\r\n              )\r\n            ) : (\r\n              <LoginForm\r\n                toggleForgot={this.toggleForgot}\r\n                handlerLogin={this.handlerLogin}\r\n              />\r\n            )}\r\n          </LoginFormWrapper>\r\n        </LoginContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    status: state.updateLoginStatus.status,\r\n    authenticated: state.updateLoginStatus.authenticated,\r\n    // password: state.updateLoginStatus.password,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    loginAction: bindActionCreators(loginAction, dispatch),\r\n    updateLoginSuccess: bindActionCreators(updateLoginSuccess, dispatch),\r\n  };\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default withRouter(connector(Login));\r\n\r\nclass LoginForm extends React.Component {\r\n  render() {\r\n    let { handlerLogin, toggleForgot } = this.props;\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          adpId: \"\",\r\n          password: \"\",\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          adpId: Yup.number().typeError('Username must be a number')\r\n            .positive(\"please enter a valid adp ID\")\r\n            .required(\"Required\"),\r\n\r\n          password: Yup.string().required(\"Please enter password\"),\r\n        })}\r\n        onSubmit={async (values) => {\r\n          await new Promise((resolve) => setTimeout(resolve, 500));\r\n          handlerLogin(values)\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          getFieldProps,\r\n          setFieldValue,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n          /* and other goodies */\r\n        }) => (\r\n          <form onSubmit={handleSubmit} className=\"login100-form validate-form\">\r\n            <div\r\n              className=\"wrap-input100 rs1-wrap-input100 validate-input m-b-20\"\r\n              data-validate=\"Type user name\"\r\n            >\r\n              {errors.adpId && touched.adpId && (\r\n                            <div className=\"input-feedback\">{errors.adpId}</div>\r\n                        )}\r\n              <Input\r\n                label=\"Adp ID\"\r\n                id=\"adpId\"\r\n                type=\"text\"\r\n                value={values.adpId}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                className={\r\n                  errors.adpId && touched.adpId\r\n                    ? \"text-input error\"\r\n                    : \"text-input\"\r\n                }\r\n                showLabel={false}\r\n              />\r\n              \r\n              <span className=\"focus-input100\"></span>\r\n            </div>\r\n            <div\r\n              className=\"wrap-input100 rs2-wrap-input100 validate-input m-b-20\"\r\n              data-validate=\"Type password\"\r\n            >\r\n              <Input\r\n                label=\"Password\"\r\n                id=\"password\"\r\n                type=\"password\"\r\n                value={values.password}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                className={\r\n                  errors.password && touched.password\r\n                    ? \"text-input error\"\r\n                    : \"text-input\"\r\n                }\r\n                showLabel={false}\r\n              />\r\n              <span className=\"focus-input100\"></span>\r\n            </div>\r\n\r\n            <div className=\"container-login100-form-btn\">\r\n              <StyledButton\r\n                className=\"login100-form-btn\"\r\n                color=\"danger\"\r\n                type=\"submit\"\r\n                // size=\"lg\"\r\n                disabled={isSubmitting}\r\n              >\r\n                Sign in\r\n              </StyledButton>\r\n            </div>\r\n\r\n            <div className=\"w-full text-center p-t-27 p-b-239\">\r\n              <span className=\"txt1\"></span>\r\n\r\n              <a href=\"#\" className=\"txt2\" onClick={toggleForgot}>\r\n                Forgot password?\r\n              </a>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  }\r\n}\r\n\r\nconst ForgotPasswordForm = (props) => {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        adpId: \"\",\r\n        mobile: \"\",\r\n        email: \"\",\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        adpId: Yup.number()\r\n          .positive(\"please enter number greater than 0\")\r\n          .required(\"Required\"),\r\n\r\n        mobile: Yup.number()\r\n          .required(\"Required\")\r\n          .test(\r\n            \"len\",\r\n            \"Must be exactly 10 digits\",\r\n            (val) => val && val.toString().length === 10\r\n          ),\r\n        email: Yup.string().email(\"Invalid email address\"),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        getFieldProps,\r\n        setFieldValue,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        /* and other goodies */\r\n      }) => (\r\n        <form onSubmit={handleSubmit} className=\"form-group\">\r\n          <div className=\"w-full text-center p-t-27 p-b-239\">\r\n            <Input\r\n              label=\"ADP ID\"\r\n              id=\"adpId\"\r\n              type=\"text\"\r\n              value={values.adpId}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              className={\r\n                errors.adpId && touched.adpId\r\n                  ? \"text-input error\"\r\n                  : \"text-input\"\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <div className=\"w-full text-center p-t-27 p-b-239\">\r\n            <Input\r\n              label=\"Mobile Number\"\r\n              id=\"mobile\"\r\n              type=\"number\"\r\n              value={values.mobile}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              className={\r\n                errors.mobile && touched.mobile\r\n                  ? \"text-input error\"\r\n                  : \"text-input\"\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <div className=\"w-full text-center p-t-27 p-b-239\">\r\n            <Input\r\n              label=\"Email\"\r\n              id=\"email\"\r\n              type=\"text\"\r\n              value={values.email}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              className={\r\n                errors.email && touched.email\r\n                  ? \"text-input error\"\r\n                  : \"text-input\"\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <StyledButton color=\"danger\" type=\"submit\" disabled={isSubmitting}>\r\n            Next\r\n          </StyledButton>\r\n\r\n          <div className=\"w-full text-center p-t-27 p-b-239\">\r\n            <span className=\"txt1\"></span>\r\n\r\n            <a href=\"#\" className=\"txt2\" onClick={props.toggleForgot}>\r\n              Sign in instead?\r\n            </a>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst generateNewPassword = (props) => {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        adpId: \"\",\r\n        otp: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        adpId: Yup.number()\r\n          .positive(\"please enter number greater than 0\")\r\n          .required(\"Required\"),\r\n\r\n        mobile: Yup.number()\r\n          .required(\"Required\")\r\n          .test(\r\n            \"len\",\r\n            \"Must be exactly 10 digits\",\r\n            (val) => val && val.toString().length === 10\r\n          ),\r\n        email: Yup.string().email(\"Invalid email address\"),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        getFieldProps,\r\n        setFieldValue,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        /* and other goodies */\r\n      }) => (\r\n        <form onSubmit={handleSubmit} className=\"form-group\">\r\n          <div className=\"w-full text-center p-t-27 p-b-239\">\r\n            <Input\r\n              label=\"ADP ID\"\r\n              id=\"adpId\"\r\n              type=\"text\"\r\n              value={values.adpId}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              className={\r\n                errors.adpId && touched.adpId\r\n                  ? \"text-input error\"\r\n                  : \"text-input\"\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <div className=\"w-full text-center p-t-27 p-b-239\">\r\n            <Input\r\n              label=\"OTP\"\r\n              id=\"otp\"\r\n              type=\"number\"\r\n              value={values.otp}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              className={\r\n                errors.otp && touched.otp ? \"text-input error\" : \"text-input\"\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <div className=\"w-full text-center p-t-27 p-b-239\">\r\n            <Input\r\n              label=\"Password\"\r\n              id=\"password\"\r\n              type=\"password\"\r\n              value={values.password}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              className={\r\n                errors.password && touched.password\r\n                  ? \"text-input error\"\r\n                  : \"text-input\"\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <div className=\"w-full text-center p-t-27 p-b-239\">\r\n            <Input\r\n              label=\"Confirm Password\"\r\n              id=\"confirmPassword\"\r\n              type=\"confirmPassword\"\r\n              value={values.confirmPassword}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              className={\r\n                errors.confirmPassword && touched.confirmPassword\r\n                  ? \"text-input error\"\r\n                  : \"text-input\"\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <StyledButton color=\"danger\" type=\"submit\" disabled={isSubmitting}>\r\n            Generate Password\r\n          </StyledButton>\r\n\r\n          <div className=\"w-full text-center p-t-27 p-b-239\">\r\n            <span className=\"txt1\"></span>\r\n\r\n            <a href=\"#\" className=\"txt2\" onClick={props.toggleForgot}>\r\n              Sign in instead?\r\n            </a>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\n\r\nfunction validateToken () {\r\n  return apiHandler.post(\"/validateToken\")\r\n}","import {\r\n    UPDATE_LOGIN_INITIATE,\r\n    UPDATE_LOGIN_FAILED,\r\n    UPDATE_LOGIN_SUCCESS,\r\n    UPDATE_LOGOUT_SUCCESS\r\n } from \"../constants/login\";\r\n\r\nconst initialUserData = {\r\n    status: \"logged out\",\r\n    authenticated: false,\r\n    adpId: \"\",\r\n    name: \"\"\r\n    // accessToken: \"\",\r\n}\r\n\r\n\r\nexport const updateLoginStatus = (state = initialUserData, action = {}) => {\r\n\tswitch (action.type) {\r\n\t\tcase UPDATE_LOGIN_INITIATE:\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\tstatus: \"waiting\",\r\n            })\r\n        case UPDATE_LOGIN_SUCCESS:\r\n            return Object.assign({}, state, {\r\n                status: \"success\",\r\n                authenticated: action.payload.authenticated,\r\n                adpId: action.payload.adpId,\r\n                name: action.payload.name,\r\n                // accessToken: action.payload.accessToken,\r\n            })\r\n        case UPDATE_LOGIN_FAILED:\r\n            return Object.assign({}, state, {\r\n                status: \"failed\",\r\n            })\r\n        case UPDATE_LOGOUT_SUCCESS:\r\n            return Object.assign({}, state, {\r\n                status: \"logged out\",\r\n                authenticated: false,\r\n            })\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}","import {\r\n  FETCH_WALLET_INITIATE,\r\n  FETCH_WALLET_FAILED,\r\n  FETCH_WALLET_SUCCESS,\r\n} from \"../constants/wallet\";\r\n\r\nconst initialData = {\r\n  balance: 0,\r\n  statement: [],\r\n  status: \"\",\r\n};\r\n\r\nexport const fetchWalletStatus = (state = initialData, action = {}) => {\r\n  switch (action.type) {\r\n    case FETCH_WALLET_INITIATE:\r\n      return Object.assign({}, state, {\r\n        status: \"waiting\",\r\n      });\r\n    case FETCH_WALLET_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        ...action.payload.data,\r\n      });\r\n    case FETCH_WALLET_FAILED:\r\n      return Object.assign({}, state, {\r\n        status: \"failed\",\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CREATE_ADP_INITIATE,\r\n  CREATE_ADP_FAILED,\r\n  CREATE_ADP_SUCCESS,\r\n  UPDATE_ADP_DATA,\r\n} from \"../constants/adp\";\r\n\r\nconst initialData = {\r\n  adpData: {\r\n    firstname:\"\",\r\n    lastname: \"\",\r\n    sponsor_id: \"\",\r\n    sponsor_name:\"\",\r\n    co_sponsor_id:\"\",\r\n    co_sponsor_name:\"\",\r\n    dob:\"\",\r\n    gender:\"\",\r\n    father_firstname:\"\",\r\n    father_lastname:\"\",\r\n    nominee_firstname:\"\",\r\n    nominee_lastname:\"\",\r\n    nominee_gender:\"\",\r\n    nominee_dob:\"\",\r\n    relation:\"\",\r\n    pan:\"\",\r\n    email:\"\",\r\n    mobile:\"\",\r\n    address_correspondence:\"\",\r\n    landmark:\"\",\r\n    district:\"\",\r\n    state:\"\",\r\n    postal_code:null,\r\n    id_proof:\"\",\r\n    proof_address:\"\",\r\n    bank_name:\"\",\r\n    account_no:\"\",\r\n    branch:\"\",\r\n    ifs_code:\"\",\r\n    account_type:\"\"\r\n  },\r\n  status: \"\",\r\n};\r\n\r\nexport const createAdpReducer = (state = initialData, action = {}) => {\r\n  switch (action.type) {\r\n    case CREATE_ADP_INITIATE:\r\n      return Object.assign({}, state, {\r\n        status: \"waiting\",\r\n      });\r\n    case CREATE_ADP_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        status: \"success\",\r\n      });\r\n    case CREATE_ADP_FAILED:\r\n      return Object.assign({}, state, {\r\n        status: \"failed\",\r\n      });\r\n    \r\n    case UPDATE_ADP_DATA:\r\n      return Object.assign({}, state, {\r\n        status: \"\",\r\n        adpData: action.payload,\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  UPDATE_REPURCHASE_ADP_DETAILS,\r\n} from \"../constants/rePurchase\";\r\n\r\nconst initialData = {\r\n  adpId: \"\",\r\n  adpName: \"\",\r\n  sponsorId: \"\",\r\n  sponsorName: \"\",\r\n  mobile: \"\",\r\n  pan: \"\",\r\n};\r\n\r\nexport const updateRepurchaseAdpDetails = (state = initialData, action = {}) => {\r\n  switch (action.type) {\r\n    case UPDATE_REPURCHASE_ADP_DETAILS:\r\n      return Object.assign({}, state, {\r\n        ...action.payload\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  FETCH_SMART_MART_INITIATE,\r\n  FETCH_SMART_MART_FAILED,\r\n  FETCH_SMART_MART_SUCCESS,\r\n} from \"../constants/smartMart\";\r\n\r\nconst initialData = {\r\n  balance: 0,\r\n  statement: [],\r\n  status: \"\",\r\n};\r\n\r\nexport const fetchSmartMartStatus = (state = initialData, action = {}) => {\r\n  switch (action.type) {\r\n    case FETCH_SMART_MART_INITIATE:\r\n      return Object.assign({}, state, {\r\n        status: \"waiting\",\r\n      });\r\n    case FETCH_SMART_MART_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        ...action.payload.data,\r\n      });\r\n    case FETCH_SMART_MART_FAILED:\r\n      return Object.assign({}, state, {\r\n        status: \"failed\",\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { updateLoginStatus } from \"./login\"\r\nimport { fetchWalletStatus } from \"./wallet\"\r\nimport { createAdpReducer } from \"./addAdp\"\r\nimport { updateRepurchaseAdpDetails } from \"./rePurchase\"\r\nimport { fetchSmartMartStatus } from \"./smartMart\"\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    updateLoginStatus,\r\n    fetchWalletStatus,\r\n    createAdpReducer,\r\n    updateRepurchaseAdpDetails,\r\n    fetchSmartMartStatus\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose  } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers/rootReducer';\r\n// import { persistReducer } from 'redux-persist';\r\n// import storage from 'redux-persist/lib/storage';\r\n\r\n// const persistConfig = {\r\n//     key: 'root',\r\n//     storage,\r\n// }\r\n\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n    }) : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(thunk),\r\n  // other store enhancers if any\r\n);\r\n\r\nconst configureStore = preloadedState => {\r\n    return createStore(\r\n        rootReducer,\r\n        enhancer\r\n    );\r\n};\r\nexport default configureStore;","\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { BrowserRouter, Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"assets/scss/now-ui-dashboard.scss?v1.4.0\";\nimport \"assets/css/demo.css\";\n\nimport AdpLayout from \"layouts/Adp.js\";\nimport Login from \"views/Login\";\n\nimport configureStore from \"./redux/store/configureStore\";\nimport { Provider } from \"react-redux\";\n\n\nconst hist = createBrowserHistory();\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter history={hist} basename=\"/adp\">\n      <Switch>\n     \n        \n        <Route path=\"/adp\" render={(props) => <AdpLayout {...props} />} />\n        <Route path=\"/login\" render={(props) => <Login {...props} />} />\n        <Redirect to=\"/login\" />\n      </Switch>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/impact1.f694e041.png\";","\n// ##############################\n// // // Function that converts a hex color number to a RGB color number\n// #############################\nfunction hexToRGB(hex, alpha) {\n  var r = parseInt(hex.slice(1, 3), 16),\n    g = parseInt(hex.slice(3, 5), 16),\n    b = parseInt(hex.slice(5, 7), 16);\n\n  if (alpha) {\n    return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\n  } else {\n    return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n  }\n}\n\n// ##############################\n// // // general variables for charts\n// #############################\n\nconst chartColor = \"#FFFFFF\";\n\n// General configuration for the charts with Line gradientStroke\nconst gradientChartOptionsConfiguration = {\n  maintainAspectRatio: false,\n  legend: {\n    display: false,\n  },\n  tooltips: {\n    bodySpacing: 4,\n    mode: \"nearest\",\n    intersect: 0,\n    position: \"nearest\",\n    xPadding: 10,\n    yPadding: 10,\n    caretPadding: 10,\n  },\n  responsive: 1,\n  scales: {\n    yAxes: [\n      {\n        display: 0,\n        ticks: {\n          display: false,\n          maxTicksLimit: 7,\n        },\n        gridLines: {\n          zeroLineColor: \"transparent\",\n          drawTicks: false,\n          display: false,\n          drawBorder: false,\n        },\n      },\n    ],\n    xAxes: [\n      {\n        display: 0,\n        ticks: {\n          display: false,\n        },\n        gridLines: {\n          zeroLineColor: \"transparent\",\n          drawTicks: false,\n          display: false,\n          drawBorder: false,\n        },\n      },\n    ],\n  },\n  layout: {\n    padding: { left: 0, right: 0, top: 15, bottom: 15 },\n  },\n};\n\nvar gradientChartOptionsConfigurationWithNumbersAndGrid = {\n  maintainAspectRatio: false,\n  legend: {\n    display: false,\n  },\n  tooltips: {\n    bodySpacing: 4,\n    mode: \"nearest\",\n    intersect: 0,\n    position: \"nearest\",\n    xPadding: 10,\n    yPadding: 10,\n    caretPadding: 10,\n  },\n  responsive: 1,\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          zeroLineColor: \"transparent\",\n          drawBorder: false,\n        },\n        ticks: {\n          maxTicksLimit: 7,\n        },\n      },\n    ],\n    xAxes: [\n      {\n        display: 0,\n        ticks: {\n          display: false,\n        },\n        gridLines: {\n          zeroLineColor: \"transparent\",\n          drawTicks: false,\n          display: false,\n          drawBorder: false,\n        },\n      },\n    ],\n  },\n  layout: {\n    padding: { left: 0, right: 0, top: 15, bottom: 15 },\n  },\n};\n\n// ##############################\n// // // Dashboard view - Panel chart\n// #############################\n\nconst dashboardPanelChart = {\n  data: (canvas) => {\n    const ctx = canvas.getContext(\"2d\");\n    var chartColor = \"#FFFFFF\";\n    var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\n    gradientStroke.addColorStop(0, \"#80b6f4\");\n    gradientStroke.addColorStop(1, chartColor);\n    var gradientFill = ctx.createLinearGradient(0, 200, 0, 50);\n    gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\n    gradientFill.addColorStop(1, \"rgba(255, 255, 255, 0.14)\");\n\n    return {\n      labels: [\n        \"JAN\",\n        \"FEB\",\n        \"MAR\",\n        \"APR\",\n        \"MAY\",\n        \"JUN\",\n        \"JUL\",\n        \"AUG\",\n        \"SEP\",\n        \"OCT\",\n        \"NOV\",\n        \"DEC\",\n      ],\n      datasets: [\n        {\n          label: \"Data\",\n          borderColor: chartColor,\n          pointBorderColor: chartColor,\n          pointBackgroundColor: \"#2c2c2c\",\n          pointHoverBackgroundColor: \"#2c2c2c\",\n          pointHoverBorderColor: chartColor,\n          pointBorderWidth: 1,\n          pointHoverRadius: 7,\n          pointHoverBorderWidth: 2,\n          pointRadius: 5,\n          fill: true,\n          backgroundColor: gradientFill,\n          borderWidth: 2,\n          data: [50, 150, 100, 190, 130, 90, 150, 160, 120, 140, 190, 95],\n        },\n      ],\n    };\n  },\n  options: {\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 0,\n      },\n    },\n    maintainAspectRatio: false,\n    tooltips: {\n      backgroundColor: \"#fff\",\n      titleFontColor: \"#333\",\n      bodyFontColor: \"#666\",\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\",\n    },\n    legend: {\n      position: \"bottom\",\n      fillStyle: \"#FFF\",\n      display: false,\n    },\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            fontColor: \"rgba(255,255,255,0.4)\",\n            fontStyle: \"bold\",\n            beginAtZero: true,\n            maxTicksLimit: 5,\n            padding: 10,\n          },\n          gridLines: {\n            drawTicks: true,\n            drawBorder: false,\n            display: true,\n            color: \"rgba(255,255,255,0.1)\",\n            zeroLineColor: \"transparent\",\n          },\n        },\n      ],\n      xAxes: [\n        {\n          gridLines: {\n            display: false,\n            color: \"rgba(255,255,255,0.1)\",\n          },\n          ticks: {\n            padding: 10,\n            fontColor: \"rgba(255,255,255,0.4)\",\n            fontStyle: \"bold\",\n          },\n        },\n      ],\n    },\n  },\n};\n\n// ##############################\n// // // Dashboard view - Shipped Products - Card\n// #############################\n\nconst dashboardShippedProductsChart = {\n  data: (canvas) => {\n    var ctx = canvas.getContext(\"2d\");\n    var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\n    gradientStroke.addColorStop(0, \"#80b6f4\");\n    gradientStroke.addColorStop(1, chartColor);\n    var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\n    gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\n    gradientFill.addColorStop(1, \"rgba(249, 99, 59, 0.40)\");\n    return {\n      labels: [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"Jun\",\n        \"Jul\",\n        \"Aug\",\n        \"Sep\",\n        \"Oct\",\n        \"Nov\",\n        \"Dec\",\n      ],\n      datasets: [\n        {\n          label: \"Active Users\",\n          borderColor: \"#f96332\",\n          pointBorderColor: \"#FFF\",\n          pointBackgroundColor: \"#f96332\",\n          pointBorderWidth: 2,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 1,\n          pointRadius: 4,\n          fill: true,\n          backgroundColor: gradientFill,\n          borderWidth: 2,\n          data: [542, 480, 430, 550, 530, 453, 380, 434, 568, 610, 700, 630],\n        },\n      ],\n    };\n  },\n  options: gradientChartOptionsConfiguration,\n};\n\n// ##############################\n// // // Dashboard view - All Products - Card\n// #############################\n\nconst dashboardAllProductsChart = {\n  data: (canvas) => {\n    var ctx = canvas.getContext(\"2d\");\n    var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\n    gradientStroke.addColorStop(0, \"#18ce0f\");\n    gradientStroke.addColorStop(1, chartColor);\n    var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\n    gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\n    gradientFill.addColorStop(1, hexToRGB(\"#18ce0f\", 0.4));\n    return {\n      labels: [\"12pm,\", \"3pm\", \"6pm\", \"9pm\", \"12am\", \"3am\", \"6am\", \"9am\"],\n      datasets: [\n        {\n          label: \"Email Stats\",\n          borderColor: \"#18ce0f\",\n          pointBorderColor: \"#FFF\",\n          pointBackgroundColor: \"#18ce0f\",\n          pointBorderWidth: 2,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 1,\n          pointRadius: 4,\n          fill: true,\n          backgroundColor: gradientFill,\n          borderWidth: 2,\n          data: [40, 500, 650, 700, 1200, 1250, 1300, 1900],\n        },\n      ],\n    };\n  },\n  options: gradientChartOptionsConfigurationWithNumbersAndGrid,\n};\n\n// ##############################\n// // // Dashboard view - Bar Chart - Card\n// #############################\n\nconst dashboard24HoursPerformanceChart = {\n  data: (canvas) => {\n    var ctx = canvas.getContext(\"2d\");\n    var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\n    gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\n    gradientFill.addColorStop(1, hexToRGB(\"#2CA8FF\", 0.6));\n    return {\n      labels: [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\",\n      ],\n      datasets: [\n        {\n          label: \"Active Countries\",\n          backgroundColor: gradientFill,\n          borderColor: \"#2CA8FF\",\n          pointBorderColor: \"#FFF\",\n          pointBackgroundColor: \"#2CA8FF\",\n          pointBorderWidth: 2,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 1,\n          pointRadius: 4,\n          fill: true,\n          borderWidth: 1,\n          data: [80, 99, 86, 96, 123, 85, 100, 75, 88, 90, 123, 155],\n        },\n      ],\n    };\n  },\n  options: {\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n    },\n    tooltips: {\n      bodySpacing: 4,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\",\n      xPadding: 10,\n      yPadding: 10,\n      caretPadding: 10,\n    },\n    responsive: 1,\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            maxTicksLimit: 7,\n          },\n          gridLines: {\n            zeroLineColor: \"transparent\",\n            drawBorder: false,\n          },\n        },\n      ],\n      xAxes: [\n        {\n          display: 0,\n          ticks: {\n            display: false,\n          },\n          gridLines: {\n            zeroLineColor: \"transparent\",\n            drawTicks: false,\n            display: false,\n            drawBorder: false,\n          },\n        },\n      ],\n    },\n    layout: {\n      padding: { left: 0, right: 0, top: 15, bottom: 15 },\n    },\n  },\n};\n\nmodule.exports = {\n  dashboardPanelChart, // Chart for Dashboard view - Will be rendered in panel\n  dashboardShippedProductsChart, // Chart for Dashboard view - Shipped Products Card\n  dashboardAllProductsChart, // Chart for Dashboard view - All products Card\n  dashboard24HoursPerformanceChart, // Chart for Dashboard view - 24 Hours Performance Card\n};\n","module.exports = __webpack_public_path__ + \"static/media/bg5.056eb058.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mike.aab414f7.jpg\";"],"sourceRoot":""}