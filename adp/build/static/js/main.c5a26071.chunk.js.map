{"version":3,"sources":["components/PanelHeader/PanelHeader.js","config/apiConfig.js","components/Molecule/DashboardSummaryCard.js","components/Molecule/DashboardDefitiateCard.js","views/Dashboard.js","variables/icons.js","views/Notifications.js","views/Icons.js","views/Typography.js","variables/general.js","views/TableList.js","views/Maps.js","views/UserPage.js","components/Input/TextInput.js","components/Input/SelectInput.js","redux/actions/addAdp.js","redux/constants/adp.js","components/Forms/AddAdpForm.js","components/Molecule/Cart.js","components/Molecule/ProductCard.js","components/Organism/BuyProductList.js","redux/actions/wallet.js","redux/constants/wallet.js","redux/actions/smartMart.js","redux/constants/smartMart.js","components/Forms/BuyProducts.js","views/AddADP.js","components/Atom/TransactionListItem.js","views/WalletStatement.js","components/Input/AsyncSelctInput.js","redux/actions/rePurchase.js","redux/constants/rePurchase.js","components/Molecule/SelectAdpRepurchase.js","views/RePurchase.js","views/SmartMartBalanceStatement.js","views/FamilyTree.js","views/Voucher.js","components/Molecule/CardDetails.js","routes.js","views/ADPStatement.js","views/OnePlusCard.js","components/Atom/WalletNavItem.js","components/Atom/SmartMartNavItem.js","components/Atom/ADPDetails.js","components/Navbars/Navbar.js","components/Sidebar/Sidebar.js","components/Footer/Footer.js","utils/GlobalStyles.js","layouts/Adp.js","utils/mediaQueries/breakPoints.js","utils/mediaQueries/device.js","redux/actions/login.js","redux/constants/login.js","views/Login.js","redux/reducers/login.js","redux/reducers/wallet.js","redux/reducers/addAdp.js","redux/reducers/rePurchase.js","redux/reducers/smartMart.js","redux/reducers/rootReducer.js","redux/store/configureStore.js","index.js","impact1.png","variables/charts.js","assets/img/bg5.jpg","assets/img/mike.jpg"],"names":["PanelHeader","className","undefined","this","props","size","content","React","Component","apiHandler","axios","create","baseURL","defaults","withCredentials","DashboardSummaryCard","state","pbv","totalPbv","gbv","totalGbv","coSponsorIncome","total_retail_profit","zone","bv","bvTillDate","componentDidMount","getPbvDetails","getGbvDetails","fetchCoSponsorIncome","fetchRetailProfit","fetchZone","getBvDetails","getPbv","then","response","data","results","length","setState","current_month_pbv","getGbv","getCoSponsorIncome","co_sponsor_income","getRetailProfit","getZone","name","getBv","Card","CardHeader","CardTitle","tag","CardBody","CardFooter","get","DashboardDefitiateCard","deficitZone","deficitValue","showDeficitZone","showSprintDeficit","sprintDeficit","sprintDeficitColor","frontLines","cardOverflow","totalOnePlusCards","leadersLine1Deficit","leadersLine2Deficit","leadersLine3Deficit","getDeficitZone","getNoFrontLines","fetchBlueCardOverflow","fetchTop3frontlines","fetchTotalOnePlusCards","fetchDeficitZone","console","log","updateSprintDeficit","getBlueCardOverflow","overflow","getTotalOnePlusCards","noCards","getTop3frontlines","line1Amt","line2Amt","line3Amt","line1Deficit","line2Deficit","line3Deficit","a","reamingAmt","championDeficit","champDeficitColor","displayChampionDeficit","championDifference","style","color","Dashboard","dashboardPanelChart","options","Row","Col","xs","md","icons","thead","tbody","MapWrapper","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","lat","lng","defaultOptions","scrollwheel","styles","featureType","elementType","stylers","lightness","weight","visibility","saturation","position","TextInput","FormGroup","showLabel","label","Input","type","placeholder","SelectInput","classNamePrefix","updateAdpData","payload","ifsc","require","Wrapper","styled","padding","genderOption","value","AddAdpForm","toggleBuyProducts","initialValues","firstname","lastname","sponsor_id","sponsor_name","co_sponsor_id","co_sponsor_name","dob","gender","father_firstname","father_lastname","nominee_firstname","nominee_lastname","nominee_gender","nominee_dob","relation","pan","email","mobile","address_correspondence","landmark","district","postal_code","id_proof","proof_address","bank_name","account_no","branch","ifs_code","account_type","validationSchema","Yup","shape","required","positive","test","val","toString","nullable","onSubmit","values","setSubmitting","setTimeout","errors","touched","handleChange","getFieldProps","setFieldValue","handleBlur","handleSubmit","isSubmitting","class","id","onChange","onBlur","e","getAdpName","target","catch","err","status","alert","result","disabled","ifscCode","validate","fetchDetails","fetchIfscDetails","BANKCODE","BRANCH","BANK","Button","connector","connect","adpData","createAdpReducer","dispatch","bindActionCreators","withRouter","adp_id","params","button","background","th","fontSize","fontWeight","cartInput","width","height","borderRadius","textAlign","addRemoveButton","border","marginTop","StyledButton","StyledTH","StyledTextInput","StyledAddRemoveButton","cart","Table","responsive","striped","bordered","hover","align","showDiscount","cartItem","map","row","key","product","component","scope","price","display","alignItems","outline","minWidth","variant","onClick","quantityReduced","quantityAdded","Number","discount","after_discount","vdba","vdbd","retail_profit","fullWidth","deleteItem","margin","boxShadow","transition","transform","left","right","bottom","borderCollapse","borderRight","font","borderColor","borderBottomRightRadius","borderTopRightRadius","borderBottomLeftRadius","borderTopLeftRadius","clear","marginBottom","maxHeight","StyledCard","StyledButtonContainer","InputLabel","CardActions","StyledInputGroup","InputGroup","StyledAddCartButton","StyledCardContent","CardContent","StyledSelect","Select","StyledProductName","ProductCard","quantity","productOptions","selectedProductOption","handleQuantityChange","productOptionsDetails","details","forEach","elm","i","unit_quantity","unit","push","selectedOption","dataToggle","dataPlacement","title","actual_price","currency","vdbc","Grid","container","spacing","item","InputGroupAddon","addonType","inputProps","newProduct","cartAdded","BuyProductList","productTypeOptions","selectedProductType","cityOptions","selectedCity","franchiseOptions","selectedFranchise","categoryOptions","selectedCategory","isDisabled","subCategoryOptions","selectedSubCategory","productList","Math","random","fetchWalletAction","error","fetchSmartMartAction","marginRight","BuyProducts","bvWeightageList","totalSmartMartDiscount","previousBv","balance","subCategoryApiCall","categoryId","getSubCategory","obj","sub_category","getProducts","city","subCategoryId","productType","getCity","getFranchise","franchise_name","franchiseId","localCart","quantityFlag","calculateSmartMartDiscount","deleteItemHandler","index","splice","addAdpCreateOrderApi","totalBv","getTotalBv","calculatedBv","calcBvWeightage","body","products","totalAmount","getTotal","addAdp","toast","history","rePurchaseCreateOrderApi","adpId","rePurchase","smartMartBalance","getTotalDiscount","getProductTypeApi","getProductType","product_type","getWalletBalance","category","prevBVToConsider","bvWeightage","Cart","fetchWalletStatus","fetchSmartMartStatus","updateRepurchaseAdpDetails","post","cartArray","total","min_value","max_value","AddADP","showBuyProducts","TransactionListItem","task_date","msg","credit","debit","moment","format","StyledTable","ContentWrapper","WalletStatement","statement","Alert","AsyncSelectInput","SelectAdpRepurchase","adpOption","loadOptions","inputValue","callback","getAdpByPhone","element","sponsorId","sponsorName","setLoggedInAdpDetails","currentAdp","adpName","handleChangeSelect","isClearable","isSearchable","updateLoginStatus","phoneNumber","phone","RePurchase","SmartMartStatement","containerStyles","FamilyTree","treeData","attributes","children","isSprinter","sprintsUnder","getTreeData","makeCenter","JSON","parse","stringify","getSprinterData","includes","sprintersUnder","noVouchers","getFrontLineAdp","user","sprinterFrontLines","sprintsFrontLines","dimensions","treeContainer","getBoundingClientRect","translate","x","y","handleNodeClick","nodeObj","_children","depth","addChildNode","findAndUpdateNode","firstLine","lineList","findnode","filter","child","ref","tc","orientation","pathFunc","shouldCollapseNeighborNodes","nodeSize","Voucher","useState","vouchers","setVouchers","useEffect","fetchVouchers","res","minHeight","voucher","voucherCode","expiryDate","voucherType","amount","CardDetails","card","cycles","setCycles","fetchCycles","tableRows","cycle","cycleId","cardIncome","Date","date","toLocaleDateString","expired_on","Container","card_type","qty","created_on","dashRoutes","path","icon","layout","SmartMartBalanceStatement","dropdownOpen","setDropdownOpen","cycleHistory","setCycleHistory","aDPData","setADPData","statementData","setStatementData","selectedCycle","setSelectedCycle","adpStatementColor","setAdpStatementColor","adpCommision","setAdpCommision","fetchADPData","fetchCycleHistory","fetchStatementData","adpDetails","zone_value","childBVTotal","comissionTotal","Dropdown","isOpen","toggle","prevState","DropdownToggle","caret","DropdownMenu","DropdownItem","toDate","childeDetails","difference","commision","co_sponsor_royality","champion_earnings","oneplus_earnings","leaders_earnings","cards","setCards","modelOpen","setModelOpen","selectedCard","setSelectedCard","fetchCards","toLocaleString","valid_till","expiry_cycle","openDetails","Modal","ModalHeader","ModalBody","marginLeft","verticalAlign","WalletWrapper","WalletLabel","WalletIcon","WalletNavItem","walletBalance","SmartMartWrapper","SmartMartLabel","SmartMartIcon","SmartMartNavItem","ADPDetails","ADPIdWrapper","ADPNameWrapper","ADPDetailsLabel","ADPDetailsIcon","useSelector","Header","sidebarToggle","createRef","dropdownToggle","getBrand","routes","prop","collapse","views","location","pathname","redirect","openSidebar","document","documentElement","classList","current","updateColor","window","innerWidth","addEventListener","bind","indexOf","Navbar","expand","fluid","NavbarBrand","href","NavbarToggler","Collapse","navbar","InputGroupText","Nav","NavItem","to","nav","origin","ps","Footer","default","Sidebar","activeRoute","routeName","navigator","platform","PerfectScrollbar","refs","sidebar","suppressScrollX","suppressScrollY","destroy","data-color","backgroundColor","src","logo","alt","pro","activeClassName","GlobalStyle","createGlobalStyle","currUrl","mainPanel","handleColorClick","action","scrollTop","scrollingElement","authenticated","from","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","updateLoginSuccess","loginAction","cb","loginApi","loginContainer","form","top","maxWidth","bg","backgroundSize","input","LoginContainer","LoginFormWrapper","BackgroundImage","LogoComponent","Login","showForgotForm","sentOtp","validating","toggleForgot","handlerLogin","navigateToDashboard","validateToken","Logo","LoginForm","password","typeError","Promise","resolve","data-validate","ForgotPasswordForm","initialUserData","initialData","rootReducer","combineReducers","Object","assign","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","configureStore","preloadedState","createStore","hist","createBrowserHistory","store","ReactDOM","render","basename","Adp","getElementById","module","exports","hexToRGB","hex","alpha","r","parseInt","slice","g","b","dashboardShippedProductsChart","canvas","ctx","getContext","gradientStroke","createLinearGradient","addColorStop","gradientFill","labels","datasets","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","fill","borderWidth","maintainAspectRatio","legend","tooltips","bodySpacing","mode","intersect","xPadding","yPadding","caretPadding","scales","yAxes","ticks","maxTicksLimit","gridLines","zeroLineColor","drawTicks","drawBorder","xAxes","dashboardAllProductsChart","dashboard24HoursPerformanceChart","pointHoverBackgroundColor","pointHoverBorderColor","titleFontColor","bodyFontColor","fillStyle","fontColor","fontStyle","beginAtZero"],"mappings":"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D,sBAAoB7D,KAC1B8D,QAASD,sBAAoBC,YAInC,yBAAKjG,UAAU,WACb,kBAACkG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GACf,kBAAC,EAAD,OAEF,kBAACF,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GACf,kBAAC,EAAD,QA8DJ,mC,GAjFc/F,IAAMC,W,6DCkEf+F,ICpFahG,IAAMC,UDnBpB,CACZ,6BACA,2BACA,wBACA,wBACA,yBACA,sBACA,sBACA,qBACA,iBACA,gBACA,wBACA,mBACA,wBACA,wBACA,iBACA,uBACA,kBACA,aACA,wBACA,eACA,iBACA,kBACA,gBACA,iBACA,wBACA,sBACA,YACA,cACA,uBACA,mBACA,cACA,iBACA,oBACA,sBACA,mBACA,eACA,iBACA,gBACA,uBACA,sBACA,uBACA,yBACA,kBACA,qBACA,kBACA,gBACA,iBACA,iBACA,oBACA,qBACA,sBACA,4BACA,iBACA,oBACA,gBACA,kBACA,kBACA,kBACA,eACA,uBACA,uBACA,yBACA,gBACA,uBACA,eACA,iBACA,yBACA,kBACA,cACA,cACA,cACA,UACA,kBACA,oBACA,kBACA,YACA,kBACA,kBACA,4BACA,8BACA,cACA,kBACA,eACA,aACA,mBACA,wBACA,YACA,wBACA,kBACA,qBACA,qBACA,iBACA,kBACA,oBACA,YACA,mBACA,kBACA,gBACA,kBACA,oB,IE1FkBD,IAAMC,UCFDD,IAAMC,U,QCgBzBgG,GAAQ,CAAC,OAAQ,UAAW,OAAQ,UACpCC,GAAQ,CACZ,CACExG,UAAW,gBACXmC,KAAM,CAAC,cAAe,QAAS,eAAgB,YAEjD,CACEnC,UAAW,GACXmC,KAAM,CAAC,iBAAkB,aAAW,cAAe,YAErD,CACEnC,UAAW,aACXmC,KAAM,CAAC,iBAAkB,cAAe,UAAW,YAErD,CACEnC,UAAW,GACXmC,KAAM,CAAC,gBAAiB,eAAgB,gBAAiB,YAE3D,CACEnC,UAAW,eACXmC,KAAM,CAAC,eAAgB,SAAU,4BAA0B,YAE7D,CAAEnC,UAAW,GAAImC,KAAM,CAAC,eAAgB,QAAS,aAAc,YAC/D,CACEnC,UAAW,gBACXmC,KAAM,CAAC,aAAc,WAAY,aAAc,a,IC/BvB7B,IAAMC,U,QCH5BkG,GAAaC,wBACjBC,0BAAc,SAACxG,GAAD,OACZ,kBAAC,aAAD,CACEyG,YAAa,GACbC,cAAe,CAAEC,IAAK,UAAWC,KAAM,WACvCC,eAAgB,CACdC,aAAa,EACbC,OAAQ,CACN,CACEC,YAAa,QACbC,YAAa,WACbC,QAAS,CAAC,CAAEvB,MAAO,WAAa,CAAEwB,UAAW,MAE/C,CACEH,YAAa,YACbC,YAAa,WACbC,QAAS,CAAC,CAAEvB,MAAO,WAAa,CAAEwB,UAAW,MAE/C,CACEH,YAAa,eACbC,YAAa,gBACbC,QAAS,CAAC,CAAEvB,MAAO,WAAa,CAAEwB,UAAW,MAE/C,CACEH,YAAa,eACbC,YAAa,kBACbC,QAAS,CAAC,CAAEvB,MAAO,WAAa,CAAEwB,UAAW,IAAM,CAAEC,OAAQ,MAE/D,CACEJ,YAAa,gBACbC,YAAa,WACbC,QAAS,CAAC,CAAEvB,MAAO,WAAa,CAAEwB,UAAW,MAE/C,CACEH,YAAa,aACbC,YAAa,WACbC,QAAS,CAAC,CAAEvB,MAAO,WAAa,CAAEwB,UAAW,MAE/C,CACEH,YAAa,MACbC,YAAa,WACbC,QAAS,CAAC,CAAEvB,MAAO,WAAa,CAAEwB,UAAW,MAE/C,CACEH,YAAa,WACbC,YAAa,WACbC,QAAS,CAAC,CAAEvB,MAAO,WAAa,CAAEwB,UAAW,MAE/C,CACEF,YAAa,qBACbC,QAAS,CACP,CAAEG,WAAY,MACd,CAAE1B,MAAO,WACT,CAAEwB,UAAW,MAGjB,CACEF,YAAa,mBACbC,QAAS,CACP,CAAEI,WAAY,IACd,CAAE3B,MAAO,WACT,CAAEwB,UAAW,MAGjB,CAAEF,YAAa,cAAeC,QAAS,CAAC,CAAEG,WAAY,SACtD,CACEL,YAAa,UACbC,YAAa,WACbC,QAAS,CAAC,CAAEvB,MAAO,WAAa,CAAEwB,UAAW,MAE/C,CACEH,YAAa,iBACbC,YAAa,gBACbC,QAAS,CAAC,CAAEvB,MAAO,WAAa,CAAEwB,UAAW,MAE/C,CACEH,YAAa,iBACbC,YAAa,kBACbC,QAAS,CAAC,CAAEvB,MAAO,WAAa,CAAEwB,UAAW,IAAM,CAAEC,OAAQ,UAKnE,kBAAC,UAAD,CAAQG,SAAU,CAAEZ,IAAK,UAAWC,KAAM,kB,IAKpBzG,IAAMC,U,6BCrFfD,IAAMC,U,iBCEVoH,OAhBf,SAAoBxH,GAChB,OACI,oCACI,kBAACyH,GAAA,EAAD,KACKzH,EAAM0H,WAAa,2BAAO7H,UAAWG,EAAMH,WAAYG,EAAM2H,OAC9D,kBAACC,EAAA,EAAD,iBACQ5H,EADR,CAEI6H,KAAM7H,EAAM6H,KAAO7H,EAAM6H,KAAO,OAChCC,YAAa9H,EAAM2H,Y,kBCaxBI,OAdf,SAAqB/H,GACnB,OACE,oCACE,kBAACyH,GAAA,EAAD,KACCzH,EAAM0H,WAAa,2BAAO7H,UAAWG,EAAMH,WAAYG,EAAM2H,OAC5D,kBAAC,KAAD,eACIK,gBAAgB,gBACdhI,O,kBCQDiI,GAAgB,SAAAjG,GAC3B,MAAO,CACL6F,KC1B2B,kBD2B3BK,QAASlG,IENTmG,GAAOC,EAAQ,KAQbC,GAAUC,aAAO,MAAPA,CALL,CACPC,QAAS,SAMPC,GAAe,CACnB,CACEC,MAAO,OACPd,MAAO,QAET,CACEc,MAAO,SACPd,MAAO,UAET,CACEc,MAAO,SACPd,MAAO,WAGLe,G,4MACJ9H,MAAQ,G,uDAEE,IAAD,EACoCb,KAAKC,MAA1CiI,EADC,EACDA,cAAeU,EADd,EACcA,kBAiCrB,OACE,kBAACN,GAAD,KACE,kBAAC,KAAD,CACEO,cAnCQ,CACZC,UAAW,GACXC,SAAU,GACVC,WAAY,GACZC,aAAc,GACdC,cAAe,GACfC,gBAAiB,GACjBC,IAAK,GACLC,OAAQ,GACRC,iBAAkB,GAClBC,gBAAiB,GACjBC,kBAAmB,GACnBC,iBAAkB,GAClBC,eAAgB,GAChBC,YAAa,GACbC,SAAU,GACVC,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRC,uBAAwB,GACxBC,SAAU,GACVC,SAAU,GACVrJ,MAAO,GACPsJ,YAAa,KACbC,SAAU,GACVC,cAAe,GACfC,UAAW,GACXC,WAAY,GACZC,OAAQ,GACRC,SAAU,GACVC,aAAc,IAMVC,iBAAkBC,OAAaC,MAAM,CACnC/B,UAAW8B,OAAaE,SAAS,YACjC9B,WAAY4B,OACTG,SAAS,sCACTD,SAAS,YACZ5B,cAAe0B,OACZG,SAAS,sCACTD,SAAS,YACZf,OAAQa,OACLE,SAAS,YACTE,KACC,MACA,6BACA,SAACC,GAAD,OAASA,GAAiC,KAA1BA,EAAIC,WAAW/I,UAEnC2H,MAAOc,OAAad,MAAM,yBAC1BV,IAAKwB,OAAWO,aAElBC,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBC,YAAW,WAGTD,GAAc,GAEdpD,EAAcmD,GACdzC,MACC,QAGJ,gBACCyC,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,cACAC,EAND,EAMCA,cACAC,EAPD,EAOCA,WACAC,EARD,EAQCA,aACAC,EATD,EASCA,aATD,OAYC,0BAAMX,SAAUU,EAAchM,UAAU,cACtC,yBAAKkM,MAAM,0EACT,yBAAKA,MAAM,OACT,kBAAC,GAAD,CACEpE,MAAM,aACNqE,GAAG,aACHnE,KAAK,SACLY,MAAO2C,EAAOrC,WACdkD,SAAUR,EACVS,OAAQ,SAACC,GAEPC,GAAWD,EAAEE,OAAO5D,OACjB6D,OAAM,SAACC,GACsB,MAAxBA,EAAIxK,SAASyK,SACfC,MAAM,2BACNd,EAAc,aAAc,QAG/B7J,MAAK,SAACC,GACLA,GACEA,EAASC,MACT2J,EAAc,eAAgB5J,EAASC,KAAK0K,YAGpD7M,UACE0L,EAAOxC,YAAcyC,EAAQzC,WACzB,mBACA,aAENrB,WAAS,KAOb,yBAAKqE,MAAM,OACT,kBAAC,GAAD,CACEpE,MAAM,eACNqE,GAAG,eACHnE,KAAK,OACLY,MAAO2C,EAAOpC,aACdiD,SAAUR,EACVS,OAAQN,EACRe,UAAQ,EACR9M,UACE0L,EAAOvC,cAAgBwC,EAAQxC,aAC3B,mBACA,aAENtB,WAAS,KAOb,yBAAKqE,MAAM,OACT,kBAAC,GAAD,CACEpE,MAAM,eACNqE,GAAG,gBACHnE,KAAK,SACLY,MAAO2C,EAAOnC,cACdgD,SAAUR,EACVS,OAAQ,SAACC,GAEPC,GAAWD,EAAEE,OAAO5D,OACjB6D,OAAM,SAACC,GACsB,MAAxBA,EAAIxK,SAASyK,SACfC,MAAM,8BACNd,EAAc,gBAAiB,QAGlC7J,MAAK,SAACC,GACLA,GACEA,EAASC,MACT2J,EACE,kBACA5J,EAASC,KAAK0K,YAIxB7M,UACE0L,EAAOtC,eAAiBuC,EAAQvC,cAC5B,mBACA,aAENvB,WAAS,KAOb,yBAAKqE,MAAM,OACT,kBAAC,GAAD,CACEpE,MAAM,kBACNqE,GAAG,kBACHnE,KAAK,OACLY,MAAO2C,EAAOlC,gBACd+C,SAAUR,EACVS,OAAQN,EACRe,UAAQ,EACR9M,UACE0L,EAAOrC,iBAAmBsC,EAAQtC,gBAC9B,mBACA,aAENxB,WAAS,KAMb,yBAAKqE,MAAM,OACT,kBAAC,GAAD,CACEpE,MAAM,aACNqE,GAAG,YACHnE,KAAK,OACLY,MAAO2C,EAAOvC,UACdoD,SAAUR,EACVS,OAAQN,EACR/L,UACE0L,EAAO1C,WAAa2C,EAAQ3C,UACxB,mBACA,aAENnB,WAAS,KAOb,yBAAKqE,MAAM,OACT,kBAAC,GAAD,CACEpE,MAAM,YACNqE,GAAG,WACHnE,KAAK,OACLY,MAAO2C,EAAOtC,SACdmD,SAAUR,EACVS,OAAQN,EACR/L,UACE0L,EAAOzC,UAAY0C,EAAQ1C,SACvB,mBACA,aAENpB,WAAS,KAOb,yBAAKqE,MAAM,OAsBT,kBAAC,GAAD,CACEpE,MAAM,MACNqE,GAAG,MACHnE,KAAK,OACLY,MAAO2C,EAAOjC,IACd8C,SAAUR,EACVS,OAAQN,EACR/L,UACE0L,EAAOpC,KAAOqC,EAAQrC,IAClB,mBACA,aAENzB,WAAS,KAOb,yBAAKqE,MAAM,OACT,kBAAC,GAAD,eACEpE,MAAM,SACNqE,GAAG,SACHvD,MAAO2C,EAAOhC,OACd8C,OAAQN,EACRK,SAAUR,GACNC,EAAc,UANpB,CAOE7L,UACE0L,EAAOnC,QAAUoC,EAAQpC,OACrB,mBACA,aAENtD,QAAS0C,GACTd,WAAS,MAQb,yBAAKqE,MAAM,OACT,kBAAC,GAAD,CACEpE,MAAM,oBACNqE,GAAG,mBACHnE,KAAK,OACLY,MAAO2C,EAAO/B,iBACd4C,SAAUR,EACVS,OAAQN,EACR/L,UACE0L,EAAOlC,kBAAoBmC,EAAQnC,iBAC/B,mBACA,aAEN3B,WAAS,KAOb,yBAAKqE,MAAM,OACT,kBAAC,GAAD,CACEpE,MAAM,mBACNqE,GAAG,kBACHnE,KAAK,OACLY,MAAO2C,EAAO9B,gBACd2C,SAAUR,EACVS,OAAQN,EACR/L,UACE0L,EAAOjC,iBAAmBkC,EAAQlC,gBAC9B,mBACA,aAEN5B,WAAS,KAOb,yBAAKqE,MAAM,OACT,kBAAC,GAAD,CACEpE,MAAM,qBACNqE,GAAG,oBACHnE,KAAK,OACLY,MAAO2C,EAAO7B,kBACd0C,SAAUR,EACVS,OAAQN,EACR/L,UACE0L,EAAOhC,mBAAqBiC,EAAQjC,kBAChC,mBACA,aAEN7B,WAAS,KAOb,yBAAKqE,MAAM,OACT,kBAAC,GAAD,CACEpE,MAAM,oBACNqE,GAAG,mBACHnE,KAAK,OACLY,MAAO2C,EAAO5B,iBACdyC,SAAUR,EACVS,OAAQN,EACR/L,UACE0L,EAAO/B,kBAAoBgC,EAAQhC,iBAC/B,mBACA,aAEN9B,WAAS,KAOb,yBAAKqE,MAAM,OACT,kBAAC,GAAD,eACEpE,MAAM,iBACNqE,GAAG,iBACHvD,MAAO2C,EAAO3B,eACdyC,OAAQN,EACRK,SAAUR,GACNC,EAAc,kBANpB,CAOE7L,UACE0L,EAAO9B,gBAAkB+B,EAAQ/B,eAC7B,mBACA,aAEN3D,QAAS0C,GACTd,WAAS,MAOb,yBAAKqE,MAAM,OAsBT,kBAAC,GAAD,CACEpE,MAAM,cACNqE,GAAG,cACHnE,KAAK,OACLY,MAAO2C,EAAO1B,YACduC,SAAUR,EACVS,OAAQN,EACR/L,UACE0L,EAAO7B,aAAe8B,EAAQ9B,YAC1B,mBACA,aAENhC,WAAS,KAOb,yBAAKqE,MAAM,OACT,kBAAC,GAAD,CACEpE,MAAM,mBACNqE,GAAG,WACHnE,KAAK,OACLY,MAAO2C,EAAOzB,SACdsC,SAAUR,EACVS,OAAQN,EACR/L,UACE0L,EAAO5B,UAAY6B,EAAQ7B,SACvB,mBACA,aAENjC,WAAS,KAOb,yBAAKqE,MAAM,OACT,kBAAC,GAAD,CACEpE,MAAM,MACNqE,GAAG,MACHnE,KAAK,OACLY,MAAO2C,EAAOxB,IACdqC,SAAUR,EACVS,OAAQN,EACR/L,UACE0L,EAAO3B,KAAO4B,EAAQ5B,IAClB,mBACA,aAENlC,WAAS,KAOb,yBAAKqE,MAAM,OACT,kBAAC,GAAD,CACEpE,MAAM,QACNqE,GAAG,QACHnE,KAAK,QACLY,MAAO2C,EAAOvB,MACdoC,SAAUR,EACVS,OAAQN,EACR/L,UACE0L,EAAO1B,OAAS2B,EAAQ3B,MACpB,mBACA,aAENnC,WAAS,KAOb,yBAAKqE,MAAM,OACT,kBAAC,GAAD,CACEpE,MAAM,SACNqE,GAAG,SACHnE,KAAK,SACLY,MAAO2C,EAAOtB,OACdmC,SAAUR,EACVS,OAAQN,EACR/L,UACE0L,EAAOzB,QAAU0B,EAAQ1B,OACrB,mBACA,aAENpC,WAAS,KAOb,yBAAKqE,MAAM,OACT,kBAAC,GAAD,CACEpE,MAAM,UACNqE,GAAG,yBACHnE,KAAK,OACLY,MAAO2C,EAAOrB,uBACdkC,SAAUR,EACVS,OAAQN,EACR/L,UACE0L,EAAOxB,wBACPyB,EAAQzB,uBACJ,mBACA,aAENrC,WAAS,KAOb,yBAAKqE,MAAM,OACT,kBAAC,GAAD,CACEpE,MAAM,WACNqE,GAAG,WACHnE,KAAK,OACLY,MAAO2C,EAAOpB,SACdiC,SAAUR,EACVS,OAAQN,EACR/L,UACE0L,EAAOvB,UAAYwB,EAAQxB,SACvB,mBACA,aAENtC,WAAS,KAOb,yBAAKqE,MAAM,OACT,kBAAC,GAAD,CACEpE,MAAM,OACNqE,GAAG,WACHnE,KAAK,OACLY,MAAO2C,EAAOnB,SACdgC,SAAUR,EACVS,OAAQN,EACR/L,UACE0L,EAAOtB,UAAYuB,EAAQvB,SACvB,mBACA,aAENvC,WAAS,KAOb,yBAAKqE,MAAM,OACT,kBAAC,GAAD,CACEpE,MAAM,QACNqE,GAAG,QACHnE,KAAK,OACLY,MAAO2C,EAAOxK,MACdqL,SAAUR,EACVS,OAAQN,EACR/L,UACE0L,EAAO3K,OAAS4K,EAAQ5K,MACpB,mBACA,aAEN8G,WAAS,KAOb,yBAAKqE,MAAM,OACT,kBAAC,GAAD,CACEpE,MAAM,cACNqE,GAAG,cACHnE,KAAK,SACLY,MAAO2C,EAAOlB,YACd+B,SAAUR,EACVS,OAAQN,EACR/L,UACE0L,EAAOrB,aAAesB,EAAQtB,YAC1B,mBACA,aAENxC,WAAS,KAOb,yBAAKqE,MAAM,OACT,kBAAC,GAAD,CACEpE,MAAM,WACNqE,GAAG,WACHnE,KAAK,OACLY,MAAO2C,EAAOjB,SACd8B,SAAUR,EACVS,OAAQN,EACR/L,UACE0L,EAAOpB,UAAYqB,EAAQrB,SACvB,mBACA,aAENzC,WAAS,KAOb,yBAAKqE,MAAM,OACT,kBAAC,GAAD,CACEpE,MAAM,gBACNqE,GAAG,gBACHnE,KAAK,OACLY,MAAO2C,EAAOhB,cACd6B,SAAUR,EACVS,OAAQN,EACR/L,UACE0L,EAAOnB,eAAiBoB,EAAQpB,cAC5B,mBACA,aAEN1C,WAAS,KAOb,yBAAKqE,MAAM,OACT,kBAAC,GAAD,CACEpE,MAAM,YACNqE,GAAG,YACHnE,KAAK,OACLY,MAAO2C,EAAOf,UACd4B,SAAUR,EACVS,OAAQN,EACR/L,UACE0L,EAAOlB,WAAamB,EAAQnB,UACxB,mBACA,aAEN3C,WAAS,EACTiF,UAAQ,KAOZ,yBAAKZ,MAAM,OACT,kBAAC,GAAD,CACEpE,MAAM,iBACNqE,GAAG,aACHnE,KAAK,OACLY,MAAO2C,EAAOd,WACd2B,SAAUR,EACVS,OAAQN,EACR/L,UACE0L,EAAOjB,YAAckB,EAAQlB,WACzB,mBACA,aAEN5C,WAAS,KAOb,yBAAKqE,MAAM,OACT,kBAAC,GAAD,CACEpE,MAAM,SACNqE,GAAG,SACHnE,KAAK,OACLY,MAAO2C,EAAOb,OACd0B,SAAUR,EACVS,OAAQN,EACR/L,UACE0L,EAAOhB,QAAUiB,EAAQjB,OACrB,mBACA,aAEN7C,WAAS,EACTiF,UAAQ,KAOZ,yBAAKZ,MAAM,OACT,kBAAC,GAAD,CACEpE,MAAM,OACNqE,GAAG,WACHnE,KAAK,OACLY,MAAO2C,EAAOZ,SACdyB,SAAUR,EAEV5L,UACE0L,EAAOf,UAAYgB,EAAQhB,SACvB,mBACA,aAEN9C,WAAS,EACTwE,OAAQ,SAACC,GAEP,IAAIS,EAAWT,EAAEE,OAAO5D,MACxBN,GAAK0E,SAASD,GA6EpC,SAA0BA,GACxB,OAAOzE,GAAK2E,aAAaF,GA7EDG,CAAiBH,GAAU9K,MAAK,SAACC,GAC/B,IAAIwI,EAAM,UAAMxI,EAASiL,SAAf,cAA6BjL,EAASkL,QAEhDtB,EAAc,YAAa5J,EAASmL,MACpCvB,EAAc,SAAUpB,MAE1BkC,MAAM,yBAQhB,yBAAKV,MAAM,OACT,kBAAC,GAAD,CACEpE,MAAM,eACNqE,GAAG,eACHnE,KAAK,OACLY,MAAO2C,EAAOX,aACdwB,SAAUR,EACVS,OAAQN,EACR/L,UACE0L,EAAOd,cAAgBe,EAAQf,aAC3B,mBACA,aAEN/C,WAAS,MAQf,kBAACyF,GAAA,EAAD,CACExH,MAAM,SACNkC,KAAK,SACL5H,KAAK,KACLJ,UAAU,aACV8M,SAAUb,GALZ,iB,GAzwBW3L,IAAMC,WAwyBhBgN,GAFGC,cAZM,SAACzM,GACvB,MAAO,CACL0M,QAAS1M,EAAM2M,iBAAiBD,YAIT,SAACE,GAC1B,MAAO,CACLvF,cAAewF,aAAmBxF,GAAeuF,MAMtCJ,CAAUM,YAAWhF,KAEpC,SAAS0D,GAAWuB,GAClB,OAAOtN,EAAW6C,IAAI,eAAgB,CAAE0K,OAAQ,CAAED,Y,0BCz0B9CjI,GAAQ,CACVmI,OAAQ,CACJC,WAAY,iBACZnI,MAAO,oBAEXoI,GAAI,CACFC,SAAU,oBACVC,WAAY,kBAEdC,WAAS,IACPC,MAAO,kBACP5F,QAAS,eACT6F,OAAQ,kBACRC,aAAc,OACdC,UAAW,UALJ,wBAMA,QANA,yBAOC,QAPD,yBAQC,SARD,IAUTC,gBAAiB,CACfJ,MAAO,OACPC,OAAQ,OACRC,aAAc,OACdG,OAAQ,EACR,EAAK,CACHC,UAAW,SAObC,GAAepG,aAAO6E,KAAP7E,CAAe5C,GAAMmI,QACpCc,GAAWrG,aAAO,KAAPA,CAAa5C,GAAMqI,IAC9Ba,GAAkBtG,aAAOd,GAAPc,CAAkB5C,GAAMwI,WAC1CW,GAAwBvG,aAAOoG,GAAPpG,CAAqB5C,GAAM6I,iBAgF1CO,GA9EF,SAAC9O,GAEV,OACQ,kBAAC+O,GAAA,EAAD,CAAOC,YAAU,EAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,GAEhC,2BAAOtP,UAAU,gBACd,4BACK,kBAAC8O,GAAD,qBACA,kBAACA,GAAD,CAAUS,MAAM,SAAhB,SACA,kBAACT,GAAD,CAAUS,MAAM,UAAhB,YACA,kBAACT,GAAD,CAAUS,MAAM,SAAhB,eACA,kBAACT,GAAD,CAAUS,MAAM,SAAhB,YACA,kBAACT,GAAD,CAAUS,MAAM,SAAhB,kBACA,kBAACT,GAAD,CAAUS,MAAM,SAAhB,aACA,kBAACT,GAAD,CAAUS,MAAM,SAAhB,MACCpP,EAAMqP,cAAgB,kBAACV,GAAD,CAAUS,MAAM,SAAhB,uBACvB,kBAACT,GAAD,CAAUS,MAAM,SAAhB,iBACA,kBAACT,GAAD,CAAUS,MAAM,SAAhB,YAGR,+BAECpP,EAAMsP,SAASC,KAAI,SAACC,GAAD,OACZ,wBAAIC,IAAKD,EAAIE,SACT,wBAAIC,UAAU,KAAKC,MAAM,OACpBJ,EAAIE,SAET,wBAAIN,MAAM,SAASI,EAAIK,OACvB,wBAAIT,MAAM,QAAQ1J,MAAO,CAACoK,QAAQ,OAAQC,WAAY,QACpD,yBAAKrK,MAAO,CAACoK,QAAQ,OAAQC,WAAY,MAAOtB,UAAW,QACzD,kBAACI,GAAD,CACMnJ,MAAO,CAAC6C,QAAQ,IAAKyH,QAAQ,OAAQC,SAAS,QAC9CC,QAAQ,YACRvK,MAAM,UACNwK,QAAS,kBAAMnQ,EAAMoQ,gBAAgBZ,KAErC,uBAAG3P,UAAU,qCAEjB,kBAAC+O,GAAD,CACI5C,GAAG,eAEHW,UAAQ,EACRhH,MAAO,QACP8C,MAAO+G,EAAIa,gBAGf,kBAACxB,GAAD,CACInJ,MAAO,CAAC6C,QAAQ,IAAKyH,QAAQ,OAASC,SAAS,QAC/CC,QAAQ,YACRvK,MAAM,UACNwK,QAAS,kBAAKnQ,EAAMqQ,cAAcb,KAElC,uBAAG3P,UAAU,oCAKvB,wBAAIuP,MAAM,SAASkB,OAAOd,EAAIa,eAAeC,OAAOd,EAAIK,QACxD,wBAAIT,MAAM,SAASI,EAAIe,UACvB,wBAAInB,MAAM,SAASkB,OAAOd,EAAIgB,gBAAgBF,OAAOd,EAAIa,gBACzD,wBAAIjB,MAAM,SAASkB,OAAOd,EAAIgB,gBAAgBF,OAAOd,EAAIa,gBACzD,wBAAIjB,MAAM,SAASI,EAAIpO,IACtBpB,EAAMqP,cAAgB,wBAAID,MAAM,SAASI,EAAIiB,KAAOjB,EAAIkB,MACzD,wBAAItB,MAAM,SAASI,EAAImB,eACvB,wBAAIvB,MAAM,SACN,kBAACV,GAAD,CAAczO,KAAK,QAAQ2Q,WAAS,EAC5BV,QAAQ,YACRvK,MAAM,MACNwK,QAAS,kBAAMnQ,EAAM6Q,WAAWrB,KAHxC,kB,2ECzG9B9J,GACE,CACJyI,MAAO,QACPC,OAAQ,QACR0B,QAAS,eACTgB,OAAQ,cACRC,UAAW,kBACXC,WAAY,OACZC,UAAW,WACXzC,OAAQ,oBACR9J,SAAU,qBACV,UAAW,CACTqM,UAAW,kBACXE,UAAW,cACXD,WAAY,SAdZtL,GAiBI,CACNoI,WAAY,iBACZnI,MAAO,mBACP,aAAc,CACZmI,WAAY,oBArBZpI,GAwBG,CACL+I,UAAW,QAzBT/I,GA4Ba,CAEfwL,KAAM,IACNC,MAAO,IACPC,OAAQ,QAhCN1L,GAkCQ,CACV6B,SAAU,WACVuI,QAAS,QACTuB,eAAgB,WAEhB,qBAAsB,CACpBC,YAAa,EACb/I,QAAS,QACT6F,OAAQ,OACRJ,SAAU,OACVrI,MAAO,OACP4L,KAAM,iCACNpD,MAAO,MACPqD,YAAa,WACb1B,QAAS,eACT,oBAAqB,CACnBvH,QAAS,SACTkJ,wBAAyB,EACzBC,qBAAsB,IAG1B,gBAAiB,CACfvD,MAAO,MACP2B,QAAS,eACTvH,QAAS,QACT+F,UAAW,SACXD,aAAc,UACdsD,uBAAwB,EACxBC,oBAAqB,IA9DrBlM,GAkEW,CACb0I,OAAQ,QAnEN1I,GAsES,CACX0I,OAAQ,QACRE,UAAW,SACX/F,QAAS,QAzEP7C,GA2EI,CACNmM,MAAO,OACP1D,MAAO,MACP2C,OAAQ,QA9ENpL,GAgFS,CACXC,MAAO,MACPsI,WAAY,MACZ6D,aAAc,OACd9D,SAAU,OACV8B,QAAS,cACT,qBAAsB,IACtB,qBAAsB,WACtBiC,UAAW,OACXrN,SAAU,UAIRsN,GAAa1J,aAAO1F,IAAP0F,CAAa5C,IAC1BgJ,GAAepG,aAAO6E,KAAP7E,CAAe5C,IAE9BuM,IADc3J,aAAO4J,KAAP5J,CAAmB5C,IACT4C,aAAO6J,KAAP7J,CAAoB5C,KAC5C0M,GAAmB9J,aAAO+J,IAAP/J,CAAmB5C,IACtC4M,GAAsBhK,aAAOoG,GAAPpG,CAAqB5C,IAC3C6M,GAAoBjK,aAAOkK,KAAPlK,CAAoB5C,IACxC+M,GAAenK,aAAOoK,KAAPpK,CAAe5C,IAC9BiN,GAAoBrK,aAAO,MAAPA,CAAc5C,IAkIzBkN,G,4MAhIbhS,MAAQ,CACNiS,SAAU,EACVC,eAAgB,GAChBC,sBAAuB,I,EAGzBC,qBAAuB,SAACvK,GACtB,EAAKtG,SAAS,CACZ0Q,SAAUpK,K,EAIdnH,kBAAoB,WAClB,IAAI2R,EAAwB,EAAKjT,MAAM0P,QAAQwD,QAC3CJ,EAAiB,GACjBC,EAAwB,GAC5BE,GACEA,EAAsBE,SAAQ,SAACC,EAAKC,GAClCD,EAAIzL,MAAJ,UAAeyL,EAAIE,cAAnB,YAAoCF,EAAIG,MACxCH,EAAI3K,MAAQ2K,EAAIpH,GAChB8G,EAAeU,KAAKJ,MAEpBN,GAAkBA,EAAe5Q,OAAS,IAC5C6Q,EAAwBD,EAAe,IAEzC,EAAK3Q,SAAS,CACZ2Q,iBACAC,2B,EAIJtH,aAAe,SAACgI,GACd,EAAKtR,SAAS,CACZ4Q,sBAAuBU,K,uDAIjB,IAAD,OACHzT,EAAQD,KAAKC,MADV,EAEyCD,KAAKa,MAA/CmS,EAFC,EAEDA,sBAAuBD,EAFtB,EAEsBA,eAE7B,OACE,kBAACd,GAAD,CAAY9B,QAAQ,YAClB,kBAACqC,GAAD,KACE,kBAACI,GAAD,CACEe,WAAW,UACXC,cAAc,SACdC,MAAO5T,EAAM0P,QAAQA,SAEpB1P,EAAM0P,QAAQA,SAEjB,kBAAC,KAAD,CAAYQ,QAAQ,QAAQP,UAAU,KAAtC,qBACqBoD,EAAsBlD,MACzC,6BAFF,cAGckD,EAAsBxC,SAClC,6BAJF,gBAKgBwC,EAAsBc,aACpC,6BANF,QAOQd,EAAsB3R,GAC5B,8BACE2R,EAAsBrC,MAAQqC,EAAsBtC,OACtDsC,EAAsBrC,KAAOqC,EAAsBtC,MAAQ,IACzD,0BACEiD,WAAW,UACXC,cAAc,SACdC,MAAM,6BAHR,gBAIWb,EAAsBe,SAJjC,YAKEf,EAAsBrC,KAAOqC,EAAsBtC,OAGrD,0BACEiD,WAAW,UACXC,cAAc,SACdC,MAAM,8BAHR,gBAIWb,EAAsBe,SAJjC,YAI6Cf,EAAsBgB,SAIzE,kBAACtB,GAAD,CACE3M,QAASgN,EACTrK,MAAOsK,EACP9G,SAAUlM,KAAK0L,eAEjB,kBAACwG,GAAD,KACE,kBAAC+B,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,GAAA,EAAD,CAAMG,MAAI,EAAClO,GAAI,GACb,kBAACmM,GAAD,KACE,kBAACgC,EAAA,EAAD,CAAiBC,UAAU,SAA3B,OAIA,kBAACzM,EAAA,EAAD,CACEoE,GAAG,WACHvD,MAAO1I,KAAKa,MAAMiS,SAClB5G,SAAU,SAACE,GACT,EAAK6G,qBAAqB7G,EAAEE,OAAO5D,QAErC6L,WAAY,CAAE5O,MAAO,CAAE4I,UAAW,eAMxC,kBAAC0F,GAAA,EAAD,CAAMG,MAAI,EAAClO,GAAI,GACb,kBAACqM,GAAD,CACErS,KAAK,QACL2Q,WAAS,EACTV,QAAQ,YACRvK,MAAM,UACNwK,QAAS,WACP,IAAIoE,EAAU,0CACTvU,EAAM0P,SACNqD,GAFS,IAGZ1C,cAAe,EAAKzP,MAAMiS,WAE5B7S,EAAMwU,UAAUD,KAXpB,e,GAzGYpU,IAAMC,WC9BjBqU,GAlFQ,SAACzU,GAEpB,OACI,6BACI,yBAAKH,UAAU,4DACX,yBAAKA,UAAU,OACX,kBAAC,KAAD,CACIiI,YAAY,eACZhC,QAAS9F,EAAM0U,mBACfjM,MAAOzI,EAAM2U,oBACb1I,SAAU,SAACxD,GACPzI,EAAMyL,aAAa,sBAAuBhD,OAItD,6BAEA,yBAAK5I,UAAU,OACX,kBAAC,KAAD,CACIiI,YAAY,OACZhC,QAAS9F,EAAM4U,YACfnM,MAAOzI,EAAM6U,aACb5I,SAAU,SAACxD,GACPzI,EAAMyL,aAAa,eAAgBhD,OAI/C,6BACA,yBAAK5I,UAAU,OACX,kBAAC,KAAD,CACIiI,YAAY,YACZhC,QAAS9F,EAAM8U,iBACfrM,MAAOzI,EAAM+U,kBACb9I,SAAU,SAACxD,GACPzI,EAAMyL,aAAa,oBAAqBhD,OAIpD,6BACA,yBAAK5I,UAAU,OACX,kBAAC,KAAD,CACIiI,YAAY,WACZhC,QAAS9F,EAAMgV,gBACfvM,MAAOzI,EAAMiV,iBACbC,gBAAyCpV,IAA7BE,EAAM6U,aAAalN,MAC/BsE,SAAU,SAACxD,GACPzI,EAAMyL,aAAa,mBAAoBhD,OAKnD,6BACA,yBAAK5I,UAAU,OACX,kBAAC,KAAD,CACIiI,YAAY,eACZhC,QAAS9F,EAAMmV,mBACf1M,MAAOzI,EAAMoV,oBACbF,gBAA6CpV,IAAjCE,EAAMiV,iBAAiBtN,MACnCsE,SAAU,SAACxD,GACPzI,EAAMyL,aAAa,sBAAuBhD,OAKtD,8BAEJ,6BACA,yBAAK5I,UAAU,eAEVG,EAAMqV,YAAY9F,KAAI,SAACG,EAAS2D,GAC7B,OACY,kBAAC,GAAD,CAAa5D,IAAK4D,EAAIiC,KAAKC,SAAU7F,QAASA,EAAS8E,UAAWxU,EAAMwU,kBClD3FgB,GAAoB,WAC/B,OAAO,SAAAhI,GAEL,OADAA,EApBK,CACL3F,KCTiC,0BD6C5BxH,EAAW6C,IAAX,WAA0BoJ,OAAM,SAACC,GACpCjI,QAAQC,IAAIgI,MAhBXzK,MAAK,SAAAC,GAEEyL,EADAzL,EAjBL,CACL8F,KCbgC,uBDchCK,QAgBsCnG,GAXjC,CACL8F,KCrB+B,2BDoC5ByE,OAAM,SAAAmJ,GACLjI,EAjBC,CACL3F,KCrB+B,6B,cCyBtB6N,GAAuB,WAClC,OAAO,SAAAlI,GAEL,OADAA,EApBK,CACL3F,KCTqC,8BD6ChCxH,EAAW6C,IAAX,uBAAsCoJ,OAAM,SAACC,GAChDjI,QAAQC,IAAIgI,MAhBXzK,MAAK,SAAAC,GAEEyL,EADAzL,EAjBL,CACL8F,KCboC,2BDcpCK,QAgByCnG,GAXpC,CACL8F,KCrBmC,+BDoChCyE,OAAM,SAAAmJ,GACLjI,EAjBC,CACL3F,KCrBmC,iCCcvC,IAAMd,GACK,CACPwB,QAAS,QAFPxB,GAII,CACN+G,WAAY,iBACZnI,MAAO,mBACPgQ,YAAa,kBACb,aAAc,CACZ7H,WAAY,mBAEd,SAAU,CACRA,WAAY,qBAKZzF,GAAUC,aAAO,MAAPA,CAAcvB,IACxB2H,GAAepG,aAAO6E,KAAP7E,CAAevB,IAE9B6O,G,4MACJhV,MAAQ,CACNqU,iBAAkB,GAClBD,gBAAiB,GACjBG,mBAAoB,GACpBC,oBAAqB,GACrBR,YAAa,GACbC,aAAc,GACdQ,YAAa,GACbvG,KAAM,GACNnB,OAAQ,GACRmH,iBAAkB,GAClBC,kBAAmB,GACnBc,gBAAiB,GACjBC,uBAAwB,EACxBC,WAAY,EACZC,QAAS,EACT3G,cAAc,EACdsF,oBAAqB,GACrBD,mBAAoB,I,EAyDtBuB,mBAAqB,SAACC,GACpBC,GAAeD,GAAYpU,MAAK,SAACC,GAC/B,IAAIoT,EAAqB,GAEzBpT,EAASC,KAAKC,SACZF,EAASC,KAAKC,QAAQkR,SAAQ,SAACC,GAC7B,IAAIgD,EAAM,CACR3N,MAAO2K,EAAIpH,GACXrE,MAAOyL,EAAIiD,cAEblB,EAAmB3B,KAAK4C,MAE5B,EAAKjU,SAAS,CACZgT,2B,EAKN1J,aAAe,SAAC5D,EAAMY,GACpB,EAAKtG,SAAL,gBAEK0F,EAAOY,IAEV,WACE,GAAa,qBAATZ,EACF,EAAK1F,SACH,CACEiT,oBAAqB,KAEvB,WACE,EAAKa,mBAAmBxN,EAAMA,eAG7B,GAAa,wBAATZ,EAAgC,CASzCyO,GARW,CACT1I,OAAQ,CACN2I,KAAM,EAAK3V,MAAMiU,aAAapM,MAC9ByN,WAAY,EAAKtV,MAAMqU,iBAAiBxM,MACxC+N,cAAe,EAAK5V,MAAMwU,oBAAoB3M,MAC9CgO,YAAa,EAAK7V,MAAM+T,oBAAoBlM,SAG9B3G,MAAK,SAACC,GACtB,EAAKI,SAAS,CACZkT,YAAatT,EAASC,KAAKC,kBAG1B,GAAa,iBAAT4F,EAAyB,CAClC6O,KAAU5U,MAAK,SAACC,GACd,IAAI6S,EAAc,GAElB7S,EAASC,KAAKC,SACZF,EAASC,KAAKC,QAAQkR,SAAQ,SAACC,GAC7B,IAAIgD,EAAM,CACR3N,MAAO2K,EAAIpH,GACXrE,MAAOyL,EAAImD,MAEb3B,EAAYpB,KAAK4C,MAErB,EAAKjU,SAAS,CACZyS,mBAYJ0B,GARW,CACT1I,OAAQ,CACN2I,KAAM,EAAK3V,MAAMiU,aAAapM,MAC9ByN,WAAY,EAAKtV,MAAMqU,iBAAiBxM,MACxC+N,cAAe,EAAK5V,MAAMwU,oBAAoB3M,MAC9CgO,YAAa,EAAK7V,MAAM+T,oBAAoBlM,SAG9B3G,MAAK,SAACC,GACtB,EAAKI,SAAS,CACZkT,YAAatT,EAASC,KAAKC,aAI/B0U,GAAa,CACX/I,OAAQ,CAAE2I,KAAM,EAAK3V,MAAMiU,aAAapM,SACvC3G,MAAK,SAACC,GACP,IAAI+S,EAAmB,GAEvB/S,EAASC,KAAKC,SACZF,EAASC,KAAKC,QAAQkR,SAAQ,SAACC,GAC7B,IAAIgD,EAAM,CACR3N,MAAO2K,EAAIpH,GACXrE,MAAOyL,EAAIwD,gBAEb9B,EAAiBtB,KAAK4C,MAE1B,EAAKjU,SAAS,CACZ2S,6BAGC,GAAa,sBAATjN,EAA8B,CAUvCyO,GATW,CACT1I,OAAQ,CACN2I,KAAM,EAAK3V,MAAMiU,aAAapM,MAC9ByN,WAAY,EAAKtV,MAAMqU,iBAAiBxM,MACxC+N,cAAe,EAAK5V,MAAMwU,oBAAoB3M,MAC9CoO,YAAa,EAAKjW,MAAMmU,kBAAkBtM,MAC1CgO,YAAa,EAAK7V,MAAM+T,oBAAoBlM,SAG9B3G,MAAK,SAACC,GACtB,EAAKI,SAAS,CACZkT,YAAatT,EAASC,KAAKC,kB,EAQvCuS,UAAY,SAAC9E,GAGX,IAFA,IAAIoH,EAAS,aAAO,EAAKlW,MAAMkO,MAC3BiI,EAAe,EACV1D,EAAI,EAAGA,EAAIyD,EAAU5U,OAAQmR,IAChCyD,EAAUzD,GAAGrH,KAAO0D,EAAQ1D,KAC9B8K,EAAUzD,GAAGhD,cACXC,OAAOwG,EAAUzD,GAAGhD,eAAiBC,OAAOZ,EAAQW,eACtD0G,EAAe,GAGC,GAAhBA,GACFD,EAAUtD,KAAK9D,GAGjB,EAAKvN,SAAS,CAAE2M,KAAMgI,IAAa,WACjC,EAAKE,iC,EAITC,kBAAoB,SAAC3H,GAGnB,IAFA,IAAIwH,EAAS,aAAO,EAAKlW,MAAMkO,MAC3BoI,EAAQ,EACH7D,EAAI,EAAGA,EAAIyD,EAAU5U,OAAQmR,IAChCyD,EAAUzD,GAAGrH,KAAOsD,EAAStD,KAC/BkL,EAAQ7D,GAGZyD,EAAUK,OAAOD,EAAO,GACxB,EAAK/U,SAAS,CAAE2M,KAAMgI,IAAa,WACjC,EAAKE,iC,EAIT3G,cAAgB,SAACf,GAGf,IAFA,IAAIwH,EAAS,aAAO,EAAKlW,MAAMkO,MAEtBuE,EAAI,EAAGA,EAAIyD,EAAU5U,OAAQmR,IAChCyD,EAAUzD,GAAGrH,KAAOsD,EAAStD,KAC/B8K,EAAUzD,GAAGhD,cACXC,OAAOwG,EAAUzD,GAAGhD,eAAiBC,OAAO,IAIlD,EAAKnO,SAAS,CAAE2M,KAAMgI,IAAa,WACjC,EAAKE,iC,EAIT5G,gBAAkB,SAACd,GAGjB,IAFA,IAAIwH,EAAS,aAAO,EAAKlW,MAAMkO,MAEtBuE,EAAI,EAAGA,EAAIyD,EAAU5U,OAAQmR,IAChCyD,EAAUzD,GAAGrH,KAAOsD,EAAStD,IAC3B8K,EAAUzD,GAAGhD,cAAgB,IAC/ByG,EAAUzD,GAAGhD,cACXC,OAAOwG,EAAUzD,GAAGhD,eAAiBC,OAAO,IAKpD,EAAKnO,SAAS,CAAE2M,KAAMgI,IAAa,WACjC,EAAKE,iC,EAITI,qBAAuB,WAAO,IAAD,EAC6B,EAAKxW,MAAvDkO,EADqB,EACrBA,KAAM+G,EADe,EACfA,gBAAiBC,EADF,EACEA,uBADF,EAOvB,EAAK9V,MAJPsN,EAHyB,EAGzBA,QACAkI,EAJyB,EAIzBA,kBACAvN,EALyB,EAKzBA,cACAyN,EANyB,EAMzBA,qBAEE2B,EAAUC,GAAWxI,GAErByI,EACFF,GAAWG,GAAgBH,EAASxB,GAAmB,KACrD4B,EAAO,CACTnK,QAASA,EACToK,SAAU5I,EACV6I,YAAaC,GAAS9I,GACtByI,eACAzB,0BAEE8B,GAAS9I,GAAQ,EAAKlO,MAAMoV,QAC9BvJ,MAAM,wCAGRoL,GAAOJ,GAAM3V,MAAK,SAACC,GACjByT,IACAE,IACAoC,aAAM,eACN,EAAK9X,MAAM+X,QAAQvE,KAAK,kBACxBvL,EAAc,CAAEqF,QAAS,S,EAI7B0K,yBAA2B,WAAO,IAAD,EAM3B,EAAKpX,MAJPkO,EAF6B,EAE7BA,KACA+G,EAH6B,EAG7BA,gBACAC,EAJ6B,EAI7BA,uBACAC,EAL6B,EAK7BA,WAL6B,EAO0B,EAAK/V,MAAxDwV,EAPyB,EAOzBA,kBAAmByC,EAPM,EAONA,MAAOvC,EAPD,EAOCA,qBAC5B2B,EAAUC,GAAWxI,GACrByI,EACFF,GAAWG,GAAgBzB,EAAasB,EAASxB,GAAmB,KAElE4B,EAAO,CACTC,SAAU5I,EACV6I,YAAaC,GAAS9I,GACtBnB,OAAQsK,EACRV,eACAzB,0BAGE8B,GAAS9I,GAAQ,EAAKlO,MAAMoV,QAC9BvJ,MAAM,wCAIRyL,GAAWT,GAAM3V,MAAK,SAACC,GACrByT,IACAE,IACAoC,aAAM,6BACN,EAAK9X,MAAM+X,QAAQvE,KAAK,sB,EAI5BwD,2BAA6B,WAAO,IAC5BlI,EAAS,EAAKlO,MAAdkO,KACAqJ,EAAqB,EAAKnY,MAA1BmY,iBACN,EAAKhW,SAAS,CACZ2T,uBAAwBsC,GAAiBtJ,GACzCO,aAAc8I,GAAoBC,GAAiBtJ,M,EAIvDuJ,kBAAoB,WAClBC,KAAiBxW,MAAK,SAACC,GACrB,IAAI2S,EAAqB,GAEzB3S,EAASC,KAAKC,SACZF,EAASC,KAAKC,QAAQkR,SAAQ,SAACC,GAC7B,IAAIgD,EAAM,CACR3N,MAAO2K,EAAIpH,GACXrE,MAAOyL,EAAImF,cAEb7D,EAAmBlB,KAAK4C,MAE5B,EAAKjU,SAAS,CACZuS,2B,EAKN8D,iB,sBAAmB,4BAAApT,EAAA,sEACM/E,EAAW6C,IAAI,mBADrB,OACXnB,EADW,OAEjB,EAAKI,SAAS,CACZ6T,QAASjU,EAASC,KAAKgU,UAHR,2C,kEAtUE,IAAD,OAClBjW,KAAKyY,mBAscAlY,IAAM4C,IAAN,kBApcSpB,MAAK,SAACC,GAClB,IAAIiT,EAAkB,GAEtBjT,EAASC,KAAKC,SACZF,EAASC,KAAKC,QAAQkR,SAAQ,SAACC,GAC7B,IAAIgD,EAAM,CACR3N,MAAO2K,EAAIpH,GACXrE,MAAOyL,EAAIqF,UAEbzD,EAAgBxB,KAAK4C,MAEzB,EAAKjU,SAAS,CACZ6S,uBAIJ0B,KAAU5U,MAAK,SAACC,GACd,IAAI6S,EAAc,GAElB7S,EAASC,KAAKC,SACZF,EAASC,KAAKC,QAAQkR,SAAQ,SAACC,GAC7B,IAAIgD,EAAM,CACR3N,MAAO2K,EAAIpH,GACXrE,MAAOyL,EAAImD,MAEb3B,EAAYpB,KAAK4C,MAErB,EAAKjU,SAAS,CACZyS,mBAoeCvU,EAAW6C,IAAI,OAheJpB,MAAK,SAACC,GAChBA,GAAYA,EAASC,MACvB,EAAKG,SAAS,CACZ4T,WAAYhU,EAASC,KAAKX,gBAyd3BhB,EAAW6C,IAAI,iBApdHpB,MAAK,SAACC,GACjBA,GAAYA,EAASC,MACvB,EAAKG,SAAS,CACZ0T,gBAAiB9T,EAASC,KAAKC,aAKrClC,KAAKsY,sB,+BA0RG,IAAD,EAkBHtY,KAAKa,MAhBPoU,EAFK,EAELA,gBACAC,EAHK,EAGLA,iBACAE,EAJK,EAILA,mBACAC,EALK,EAKLA,oBACAR,EANK,EAMLA,YACAC,EAPK,EAOLA,aACAQ,EARK,EAQLA,YACAN,EATK,EASLA,kBACAD,EAVK,EAULA,iBACAhG,EAXK,EAWLA,KACA+G,EAZK,EAYLA,gBACAxG,EAbK,EAaLA,aACAyG,EAdK,EAcLA,uBACAnB,EAfK,EAeLA,oBACAD,EAhBK,EAgBLA,mBACAqB,EAjBK,EAiBLA,WAjBK,EAoByChW,KAAKC,MAA/C2I,EApBC,EAoBDA,kBAAmBuP,EApBlB,EAoBkBA,WAAYL,EApB9B,EAoB8BA,OACjCR,EAAUC,GAAWxI,GACnB4J,EAAmBR,EAAanC,EAAa,EAC/C4C,EAAcnB,GAChBkB,EAAmBrB,EACnBxB,GAEF,OACE,kBAAC,GAAD,KACE,yCACA,kBAAC+C,GAAD,CACEtJ,SAAUR,EACV+B,WAAY9Q,KAAKkX,kBACjB5G,cAAetQ,KAAKsQ,cACpBD,gBAAiBrQ,KAAKqQ,gBACtBf,aAAcA,IAEhB,yBAAKxP,UAAU,gCACb,yBAAKA,UAAU,OAAf,gBACgB,IACbwP,EACGuI,GAAS9I,GAAQgH,EACjB8B,GAAS9I,IAEf,yBAAKjP,UAAU,OAAf,aACa6Y,EAAmBrB,GAAWsB,EAAc,MAEzD,yBAAK9Y,UAAU,OAAf,gBACgBwX,GAAWsB,EAAc,MAEzC,yBAAK9Y,UAAU,OAAf,iBAAoC8Y,IAGtC,6BACA,kBAAC,GAAD,CACExI,QACE+H,EACInY,KAAKiY,yBACLjY,KAAKqX,qBAEXzK,SAAyB,GAAfmC,EAAK5M,OACfrC,UAA0B,GAAfiP,EAAK5M,OAAc,WAAa,GAC3CgO,QAAQ,YACRvK,MAAM,WAELkS,EAAS,UAAY,eAEvBlP,GACC,kBAAC,GAAD,CACEwH,QAASxH,EACTuH,QAAQ,YACRvK,MAAM,YACN9F,UAAU,QAJZ,QAUF,6BACA,6BACA,kBAAC,GAAD,CACE+U,YAAaA,EACbC,aAAcA,EACdG,gBAAiBA,EACjBC,iBAAkBA,EAClBE,mBAAoBA,EACpBC,oBAAqBA,EACrB3J,aAAc1L,KAAK0L,aACnB4J,YAAaA,EACbb,UAAWzU,KAAKyU,UAChBO,kBAAmBA,EACnBD,iBAAkBA,EAClBH,oBAAqBA,EACrBD,mBAAoBA,S,GAhcJvU,IAAMC,WA0djBgN,GAFGC,cAjBM,SAACzM,GACvB,MAAO,CACLoV,QAASpV,EAAMiY,kBAAkB7C,QACjCmC,iBAAkBvX,EAAMkY,qBAAqB9C,QAC7C1I,QAAS1M,EAAM2M,iBAAiBD,QAChC2K,MAAOrX,EAAMmY,2BAA2Bd,UAIjB,SAACzK,GAC1B,MAAO,CACLvF,cAAewF,aAAmBxF,GAAeuF,GACjDgI,kBAAmB/H,aAAmB+H,GAAmBhI,GACzDkI,qBAAsBjI,aAAmBiI,GAAsBlI,MAMpDJ,CAAUM,YAAWkI,KAMpC,SAASc,KACP,OAAOpW,IAAM4C,IAAN,cAGT,SAASoT,GAAYmB,GACnB,OAAOnX,IAAM4C,IAAN,oBAA+BuU,GAGxC,SAAStB,GAAeD,GACtB,OAAO5V,IAAM4C,IAAN,qBAAgC,CACrC0K,OAAQ,CACNsI,WAAYA,KAKlB,SAASoC,KACP,OAAOhY,IAAM4C,IAAN,qBAGT,SAASyT,GAAac,GACpB,OAAOnX,IAAM4C,IAAN,iBAA4BuU,GAGrC,SAASI,GAAOJ,GACd,OAAOpX,EAAW2Y,KAAX,WAA4BvB,GAGrC,SAASS,GAAWT,GAClB,OAAOpX,EAAW2Y,KAAX,eAAgCvB,GAGzC,SAASG,GAASqB,GAChB,IAAIC,EAAQ,EAMZ,OALAD,GACEA,EAAU9F,SAAQ,SAACC,GACjB8F,GAAgB9F,EAAIS,aAAeT,EAAI/C,iBAGpC6I,EAGT,SAASd,GAAiBa,GACxB,IAAIC,EAAQ,EAMZ,OALAD,GACEA,EAAU9F,SAAQ,SAACC,GACjB8F,EAAQA,EAAQ9F,EAAI3C,KAAO2C,EAAI/C,cAAgB+C,EAAI3C,KAAO2C,EAAI1C,QAG3DwI,EAWT,SAAS5B,GAAWI,GAClB,IAAIL,EAAU,EAMd,OALAK,GACEA,EAASvE,SAAQ,SAACC,GAChBiE,GAAoBjE,EAAIhS,GAAKgS,EAAI/C,iBAG9BgH,EAGT,SAASG,GAAgBH,EAASxB,GAChC,IAAI8C,EAAc,EASlB,OARA9C,GACEA,EAAgB1C,SAAQ,SAACC,IACnBA,EAAI+F,WAAa9B,GAAWjE,EAAIgG,UAAY/B,GAErCjE,EAAI+F,WAAa9B,GAA4B,GAAjBjE,EAAIgG,aADzCT,EAAcvF,EAAI3K,UAKjBkQ,E,ICzhBMU,G,4MAzCbzY,MAAQ,CACN0Y,iBAAiB,G,EAGnB3Q,kBAAoB,WAClB,EAAKxG,SAAS,CACZmX,iBAAkB,EAAK1Y,MAAM0Y,mB,uDAIvB,IACFA,EAAoBvZ,KAAKa,MAAzB0Y,gBACN,OACE,oCACE,kBAAC,EAAD,CAAarZ,KAAK,OAClB,yBAAKJ,UAAU,WACb,kBAACkG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKE,GAAG,MACN,kBAAC,KAAD,KACE,kBAACrD,EAAA,EAAD,KACE,wBAAIhD,UAAU,SAAd,WACWyZ,GAAmB,mBAG/BA,EACC,kBAAC,GAAD,CACE3Q,kBAAmB5I,KAAK4I,kBACxBkP,QAAM,IAGR,kBAAC,GAAD,CAAYlP,kBAAmB5I,KAAK4I,6B,GA/BjCxI,IAAMC,W,qBCEZmZ,GAda,SAACvZ,GAAW,IAAD,EACGA,EAAMgC,KAAxCwX,EAD+B,EAC/BA,UAAWC,EADoB,EACpBA,IAAKC,EADe,EACfA,OAAQC,EADO,EACPA,MAC9B,OACE,4BACE,4BAAKC,KAAOJ,GAAWK,OAAO,SAC9B,4BAAKJ,GACL,wBACErK,MAAM,SACNvP,UAAqB,GAAV6Z,EAAc,QAAS,UACxB,GAAVA,EAAA,WAAkBC,GAAlB,WAAgCD,MCUlChU,GACA,CACFsI,SAAU,oBACVC,WAAY,kBAHVvI,GAMG,CACLyI,MAAO,MACP2C,OAAQ,OACR,SAAU,CACRnL,MAAO,OAET,UAAW,CACTA,MAAO,UAbPD,GAiBY,CACd6C,QAAS,UAIPoG,GAAWrG,aAAO,KAAPA,CAAa5C,IACxBoU,GAAcxR,aAAOyG,KAAPzG,CAAc5C,IAC5BqU,GAAiBzR,aAAO,MAAPA,CAAc5C,IAE/BsU,G,4MACJpZ,MAAQ,G,EAERU,kBAAoB,WAClB,EAAKtB,MAAMwV,qB,uDAGH,IAAD,EACsBzV,KAAKC,MAAnBia,GADR,EACDjE,QADC,EACQiE,WACf,OACE,oCACE,kBAAC,EAAD,CAAaha,KAAK,OAClB,yBAAKJ,UAAU,WACb,kBAACkG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKE,GAAG,MACN,kBAAC,KAAD,KACE,kBAACrD,EAAA,EAAD,KACE,wBAAIhD,UAAU,SAAd,qBAEF,kBAACka,GAAD,KACGE,GAAaA,EAAU/X,OAAS,EAC/B,kBAAC4X,GAAD,CAAa9K,YAAU,EAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,GAC5C,2BAAOtP,UAAU,gBACf,4BACE,kBAAC,GAAD,aACA,kBAAC,GAAD,gBACA,kBAAC,GAAD,iBAGJ,+BACGoa,GACCA,EAAU1K,KAAI,SAAC6D,EAAKC,GAClB,OAAO,kBAAC,GAAD,CAAqBrR,KAAMoR,EAAK3D,IAAK4D,SAKpD,kBAAC6G,GAAA,EAAD,CAAOvU,MAAM,WACX,4D,GAtCQxF,IAAMC,WAmErBgN,GAFGC,cAdM,SAACzM,GACvB,MAAO,CACLoV,QAASpV,EAAMiY,kBAAkB7C,QACjCxJ,OAAQ5L,EAAMiY,kBAAkBrM,OAChCyN,UAAWrZ,EAAMiY,kBAAkBoB,cAIZ,SAACzM,GAC1B,MAAO,CACLgI,kBAAmB/H,aAAmB+H,GAAmBhI,MAM9CJ,CAAUM,YAAWsM,K,UC3FrBG,OAdf,SAA0Bna,GACxB,OACE,oCACE,kBAACyH,GAAA,EAAD,KACCzH,EAAM0H,WAAa,2BAAO7H,UAAWG,EAAMH,WAAYG,EAAM2H,OAC5D,kBAAC,KAAD,eACIK,gBAAgB,gBACdhI,OCbD+Y,GAA6B,SAAA/W,GACxC,MAAO,CACL6F,KCPyC,gCDQzCK,QAASlG,IEkBPqG,GAAUC,aAAO,MAAPA,CAhBL,CACPC,QAAS,SAgBP6R,G,4MACJxZ,MAAQ,CACNyZ,UAAW,I,EAOb5O,aAAe,SAACgI,GACdnP,QAAQC,IAAR,mBAAgCkP,I,EAGlC6G,YAAc,SAACC,EAAYC,GACrBD,EAAWrY,OAAS,GAAKqY,EAAWrY,OAAS,IAC/CuY,GAAcF,GAAYzY,MAAK,YAAe,IAAZE,EAAW,EAAXA,KAChC,GAAIA,EAAK0K,QAAU1K,EAAK0K,OAAOxK,OAAS,EAAG,CACzC,IAAImY,EAAY,GAChBrY,EAAK0K,OAAOyG,SAAQ,SAACuH,GACnB,IAAItE,EAAM,CACR3N,MAAOiS,EAAQ/M,OACfhG,MAAM,GAAD,OAAK+S,EAAQ/M,OAAb,cAAyB+M,EAAQ7R,UAAjC,YAA8C6R,EAAQ5R,UAC3DpG,KAAK,GAAD,OAAKgY,EAAQ7R,UAAb,YAA0B6R,EAAQ5R,UACtC6R,UAAWD,EAAQ3R,WACnB6R,YAAaF,EAAQ1R,aACrBc,OAAQ4Q,EAAQ5Q,OAChBF,IAAK8Q,EAAQ9Q,KAEfyQ,EAAU7G,KAAK4C,MAEjB,EAAKjU,SACH,CACEkY,cAEF,WACEG,EAAS,EAAK5Z,MAAMyZ,mB,EAQhC/Y,kBAAoB,WAClB,EAAKuZ,yB,EAGPA,sBAAwB,WAAO,IAAD,EAC2B,EAAK7a,MAAtD8a,EADsB,EACtBA,WAAYpY,EADU,EACVA,MAKlBqW,EAN4B,EACJA,4BACR,CACdd,MAAO6C,EACPC,QAASrY,K,EAKbsY,mBAAqB,SAACvH,GACpB,IAAKA,EAAgB,OAAO,EAAKoH,wBACjC,IAAIzE,EAAM,CACR6B,MAAOxE,EAAehL,MACtBsS,QAAStH,EAAe/Q,KACxBiY,UAAWlH,EAAekH,UAC1BC,YAAanH,EAAemH,YAC5B9Q,OAAQ2J,EAAe3J,OACvBF,IAAK6J,EAAe7J,KAEtB,EAAK5J,MAAM+Y,2BAA2B3C,I,uDAIlBrW,KAAKa,MAAnByZ,UADE,IAAD,EAEuDta,KAAKC,MAA7D+a,EAFC,EAEDA,QAAS9C,EAFR,EAEQA,MAAO0C,EAFf,EAEeA,UAAWC,EAF1B,EAE0BA,YAAa9Q,EAFvC,EAEuCA,OAAQF,EAF/C,EAE+CA,IACtD,OACE,kBAAC,GAAD,CAAS/J,UAAU,0EACjB,yBAAKA,UAAU,OACb,kBAAC,GAAD,CACE8H,MAAM,eACNsT,aAAW,EAEXC,cAAY,EACZjP,SAAUlM,KAAKib,mBACfV,YAAava,KAAKua,YAClB5S,WAAS,EACTI,YAAY,YAGhB,yBAAKjI,UAAU,OACb,kBAAC,GAAD,CACE8H,MAAM,SACNE,KAAK,OACLY,MAAOwP,EAGPtL,UAAQ,EACRjF,WAAS,KAGb,yBAAK7H,UAAU,OACb,kBAAC,GAAD,CACE8H,MAAM,WACNE,KAAK,OACLY,MAAOsS,EAGPpO,UAAQ,EACRjF,WAAS,KAIb,yBAAK7H,UAAU,OACb,kBAAC,GAAD,CACE8H,MAAM,aACNE,KAAK,OACLY,MAAOkS,EAGPhO,UAAQ,EACRjF,WAAS,KAIb,yBAAK7H,UAAU,OACb,kBAAC,GAAD,CACE8H,MAAM,eACNE,KAAK,OACLY,MAAOmS,EAGPjO,UAAQ,EACRjF,WAAS,KAIb,yBAAK7H,UAAU,OACb,kBAAC,GAAD,CACE8H,MAAM,SACNE,KAAK,OACLY,MAAOqB,EAGP6C,UAAQ,EACRjF,WAAS,KAIb,yBAAK7H,UAAU,OACb,kBAAC,GAAD,CACE8H,MAAM,MACNE,KAAK,OACLY,MAAOmB,EAGP+C,UAAQ,EACRjF,WAAS,U,GAzJavH,IAAMC,WAyLzBgN,GAFGC,cAtBM,SAACzM,GACvB,MAAO,CACLqX,MAAOrX,EAAMmY,2BAA2Bd,MACxC8C,QAASna,EAAMmY,2BAA2BgC,QAC1CJ,UAAW/Z,EAAMmY,2BAA2B4B,UAC5CC,YAAaha,EAAMmY,2BAA2B6B,YAC9C9Q,OAAQlJ,EAAMmY,2BAA2BjP,OACzCF,IAAKhJ,EAAMmY,2BAA2BnP,IACtCkR,WAAYla,EAAMua,kBAAkBlD,MACpCvV,KAAM9B,EAAMua,kBAAkBzY,SAIP,SAAC8K,GAC1B,MAAO,CACLuL,2BAA4BtL,aAC1BsL,GACAvL,MAOSJ,CAAUgN,IAEzB,SAASK,GAAcW,GACrB,OAAO9a,IAAM4C,IAAN,wBAAmC,CACxC0K,OAAQ,CACNyN,MAAOD,K,IClKEE,G,4MAtCb1a,MAAQ,G,EAGR+H,kBAAoB,WAClB,EAAKxG,SAAS,K,uDAKYpC,KAAKa,MAAzB0Y,gBACN,OACE,oCACE,kBAAC,EAAD,CAAarZ,KAAK,OACtB,yBAAKJ,UAAU,WACd,kBAACkG,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAKE,GAAG,MACP,kBAAC,KAAD,KACC,kBAACrD,EAAA,EAAD,KACU,wBAAIhD,UAAU,SAAd,gBAEE,kBAAC,GAAD,MACA,6BACA,kBAAC,GAAD,CACEqY,YAAU,IAEZ,sC,GA1BK/X,IAAMC,WCMzBsF,GACA,CACFsI,SAAU,oBACVC,WAAY,kBAHVvI,GAMG,CACLyI,MAAO,MACP2C,OAAQ,OACR,SAAU,CACRnL,MAAO,OAET,UAAW,CACTA,MAAO,UAbPD,GAiBY,CACd6C,QAAS,UAIPoG,GAAWrG,aAAO,KAAPA,CAAa5C,IACxBoU,GAAcxR,aAAOyG,KAAPzG,CAAc5C,IAC5BqU,GAAiBzR,aAAO,MAAPA,CAAc5C,IAE/B6V,G,4MACJ3a,MAAQ,G,uDACE,IAAD,EACsBb,KAAKC,MAAnBia,GADR,EACDjE,QADC,EACQiE,WACf,OACE,oCACE,kBAAC,EAAD,CAAaha,KAAK,OAClB,yBAAKJ,UAAU,WACb,kBAACkG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKE,GAAG,MACN,kBAAC,KAAD,KACE,kBAACrD,EAAA,EAAD,KACE,wBAAIhD,UAAU,SAAd,iCAEF,kBAAC,GAAD,KACGoa,GAAaA,EAAU/X,OAAS,EAC/B,kBAAC,GAAD,CAAa8M,YAAU,EAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,GAC5C,2BAAOtP,UAAU,gBACf,4BACE,kBAAC,GAAD,aACA,kBAAC,GAAD,gBACA,kBAAC,GAAD,iBAGJ,+BACGoa,GACCA,EAAU1K,KAAI,SAAC6D,EAAKC,GAClB,OAAO,kBAAC,GAAD,CAAqBrR,KAAMoR,EAAK3D,IAAK4D,SAKpD,kBAAC6G,GAAA,EAAD,CAAOvU,MAAM,WACX,4D,GAjCWxF,IAAMC,WA8DxBgN,GAFGC,cAdM,SAACzM,GACvB,MAAO,CACLoV,QAASpV,EAAMkY,qBAAqB9C,QACpCxJ,OAAQ5L,EAAMkY,qBAAqBtM,OACnCyN,UAAWrZ,EAAMkY,qBAAqBmB,cAIf,SAACzM,GAC1B,MAAO,KAOMJ,CAAUM,YAAW6N,K,qBC5F9BC,GAAkB,CACtBrN,MAAO,OACPC,OAAQ,SAGJqN,G,4MACJ7a,MAAQ,CACN8a,SAAU,CACR,CACEhZ,KAAM,EAAK1C,MAAM0C,KACjBiZ,WAAY,CACV,SAAU,EAAK3b,MAAMiY,OAEvB2D,SAAU,KAGdC,YAAY,EACZC,aAAc,I,EAGhBxa,kBAAoB,WAClB,EAAKya,e,EAGPA,Y,sBAAc,gCAAA3W,EAAA,6DACZ,EAAK4W,aADO,EAGOC,KAAKC,MAAMD,KAAKE,UAAU,EAAKvb,QAA5C8a,EAHM,EAGNA,SACAzD,EAAU,EAAKjY,MAAfiY,MAJM,SAMN,EAAKmE,kBANC,OAOR,EAAKxb,MAAMkb,aAAaO,SAASpE,EAAMhN,YACzCyQ,EAAS,GAAGhZ,MAAQ,YACX,EAAK9B,MAAM0b,eAAeD,SAASpE,EAAMhN,cAClDyQ,EAAS,GAAGhZ,MAAZ,sBAAmC,EAAK9B,MAAM2b,WAA9C,OAEFC,GAAgBvE,GAAOnW,MAAK,SAACC,GAC3B,IAAI6Z,EAAW,GACf7Z,EAASC,KAAK0K,QACZ3K,EAASC,KAAK0K,OAAOyG,SAAQ,SAACsJ,GAC5B,IAAIrG,EAAM,GACVA,EAAI1T,KAAJ,UAAc+Z,EAAK5T,UAAnB,YAAgC4T,EAAK3T,UACjC,EAAKlI,MAAM8b,mBAAmBL,SAASI,EAAK9O,OAAO1C,YACrDmL,EAAI1T,MAAQ,kBAEZ,EAAK9B,MAAM+b,kBAAkBN,SAASI,EAAK9O,OAAO1C,cAElDmL,EAAI1T,MAAQ,iBAEd0T,EAAIuF,WAAa,GACjBvF,EAAIuF,WAAW,UAAYc,EAAK9O,OAEhCiO,EAASpI,KAAK4C,MAGlBsF,EAAS,GAAGE,SAAWA,EACvB,EAAKzZ,SAAS,CACZuZ,gBAjCQ,2C,EAsCdU,gB,sBAAkB,wCAAAhX,EAAA,sEACO/E,EAAW6C,IAAI,sBADtB,OACVnB,EADU,SAQZA,EAASC,KALX8Z,EAHc,EAGdA,aACAQ,EAJc,EAIdA,eACAK,EALc,EAKdA,kBACAD,EANc,EAMdA,mBACAH,EAPc,EAOdA,WAEF,EAAKpa,SAAS,CACZ2Z,eACAQ,iBACAK,oBACAD,qBACAH,eAdc,2C,EAkBlBP,WAAa,WACX,IAAMY,EAAa,EAAKC,cAAcC,wBACtC,EAAK3a,SAAS,CACZ4a,UAAW,CACTC,EAAGJ,EAAWzO,MAAQ,EACtB8O,EAAGL,EAAWxO,OAAS,M,EAK7B8O,gBAAkB,SAACC,IACZA,EAAQC,WAAaD,EAAQE,MAAQ,GACxC,EAAKC,aAAaH,EAAQxB,WAAW,UAAWwB,EAAQE,Q,EAI5DC,aAAe,SAACrF,EAAOoF,GAAW,IAC1B3B,EAAaO,KAAKC,MAAMD,KAAKE,UAAU,EAAKvb,QAA5C8a,SACNc,GAAgBvE,GAAOnW,MAAK,SAACC,GAC3B,IAAI6Z,EAAW,GACf7Z,EAASC,KAAK0K,QACZ3K,EAASC,KAAK0K,OAAOyG,SAAQ,SAACsJ,GAC5B,IAAIrG,EAAM,GACVA,EAAI1T,KAAJ,UAAc+Z,EAAK5T,UAAnB,YAAgC4T,EAAK3T,UACjC,EAAKlI,MAAM0b,eAAeD,SAASI,EAAK9O,OAAO1C,YACjDmL,EAAI1T,MAAQ,cACH,EAAK9B,MAAMkb,aAAaO,SAASI,EAAK9O,OAAO1C,cACtDmL,EAAI1T,MAAQ,aAEd0T,EAAIuF,WAAa,GACjBvF,EAAIuF,WAAW,UAAYc,EAAK9O,OAChCiO,EAASpI,KAAK4C,MAGlBsF,EAAS,GAAGE,SAAWA,EACvB,EAAK2B,kBAAkBtF,EAAOoF,EAAOzB,O,EAOzC2B,kBAAoB,SAACtF,EAAOoF,EAAOzB,GAIjC,IAJ+C,IACzCF,EAAaO,KAAKC,MAAMD,KAAKE,UAAU,EAAKvb,QAA5C8a,SACF8B,EAAY9B,EAAS,GAAGE,SACxB6B,EAAW,GACNpK,EAAI,EAAGA,EAAIgK,EAAOhK,IACzBoK,EAAW,EAAKC,SAASF,EAAWvF,EAAO2D,GAE7CtX,QAAQC,IAAIkZ,GACZ/B,EAAS,GAAGE,SAAW6B,EACAxB,KAAKE,UAAU,EAAKvb,MAAM8a,WACzBO,KAAKE,UAAUT,IACrC,EAAKvZ,SAAS,CACZuZ,c,EAKNgC,SAAW,SAACD,EAAUxF,EAAO2D,GAwB3B,OAvBA6B,EAAStK,SAAQ,SAACC,EAAKC,GACrB,GAAID,EAAIwI,SACNxI,EAAIwI,SAAS+B,QAAO,SAACC,GACnB,GAAIA,EAAMjC,WAAW,WAAa1D,EAKhC,OAJI2D,EAAS1Z,OAAS,IACpB0b,EAAMhC,SAAWA,GAGZ6B,EAEHG,EAAMhC,UACR,EAAK8B,SAASE,EAAMhC,SAAU3D,EAAO2D,WAK3C,GAAIxI,EAAIuI,WAAW,WAAa1D,EAE9B,OADA7E,EAAIwI,SAAWA,EACR6B,KAKNA,G,uDAGC,IAAD,OACD/B,EAAa3b,KAAKa,MAAlB8a,SACN,OACE,oCACE,kBAAC,EAAD,CAAazb,KAAK,OAClB,yBAAKJ,UAAU,WACb,kBAACkG,EAAA,EAAD,CAAKL,MAAO,CAAE0I,OAAQ,SACpB,kBAACpI,EAAA,EAAD,CAAKE,GAAG,MACN,kBAAC,KAAD,CAAMR,MAAO,CAAE0I,OAAQ,MAAO1J,SAAU,WACtC,kBAAC7B,EAAA,EAAD,KACE,wBAAIhD,UAAU,SAAd,gBAEF,6BACA,yBACEmM,GAAG,cACHtG,MAAO8V,GACPqC,IAAK,SAACC,GAAD,OAAS,EAAKjB,cAAgBiB,IAEnC,kBAAC,KAAD,CACE9b,KAAM0Z,EACNvL,QAASpQ,KAAKmd,gBACda,YAAa,WACbC,SAAS,OACTC,6BAA6B,EAC7BC,SAAU,CAAElB,EAAG,IAAKC,EAAG,KACvBF,UAAWhd,KAAKa,MAAMmc,sB,GA1LjB5c,IAAMC,WAsM/B,SAASoc,GAAgB7B,GACvB,OAAOta,EAAW6C,IAAI,sBAAuB,CAC3C0K,OAAQ,CACN+M,UAAWA,KAKjB,IAeevN,GAFGC,cAbM,SAACzM,GACvB,MAAO,CACLqX,MAAOrX,EAAMua,kBAAkBlD,MAC/BvV,KAAM9B,EAAMua,kBAAkBzY,SAIP,SAAC8K,GAC1B,MAAO,KAOMJ,CAAUqO,I,SCnLV0C,GA5DC,WAAO,IAAD,EACYC,mBAAS,IADrB,oBACbC,EADa,KACHC,EADG,KAEpBC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAa,uCAAG,4BAAApZ,EAAA,+EAEA/E,EAAW6C,IAAX,qBAFA,OAEZub,EAFY,OAGlBH,EAAYG,EAAIzc,MAHE,gDAKlBsC,QAAQC,IAAR,MALkB,yDAAH,qDAQnB,OACE,oCACE,kBAAC,EAAD,CAAatE,KAAK,OAClB,yBAAKJ,UAAU,WACb,kBAACkG,EAAA,EAAD,CAAKL,MAAO,CAAE0I,OAAQ,SACpB,kBAACpI,EAAA,EAAD,CAAKE,GAAG,MACN,kBAAC,KAAD,CAAMR,MAAO,CAAEgZ,UAAW,MAAOha,SAAU,WACzC,kBAAC7B,EAAA,EAAD,KACE,wBAAIhD,UAAU,SAAd,aAEF,6BACCwe,GAAYA,EAASnc,OACpB,kBAAC6M,GAAA,EAAD,KACE,+BACE,4BACE,iCACA,4CACA,2CACA,4CACA,sCACA,+BAGJ,+BACGsP,EAAS9O,KAAI,SAACoP,EAASzH,GAAV,OACZ,4BACE,wBAAItH,MAAM,OAAOsH,EAAQ,GACzB,4BAAKyH,EAAQC,aACb,4BAAKD,EAAQE,YACb,4BAAKF,EAAQG,aACb,4BAAKH,EAAQI,cAMrB,4D,8BCmCDC,GAvFK,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACJb,mBAAS,IADL,oBACzBc,EADyB,KACjBC,EADiB,KAEhCZ,qBAAU,WACRa,MACC,IACH,IAAMA,EAAW,uCAAG,4BAAAha,EAAA,+EAEE/E,EAAW6C,IAAX,+BAAuC+b,EAAKjT,KAF9C,OAEVyS,EAFU,OAGhBU,EAAUV,EAAIzc,MAHE,gDAKhBsC,QAAQC,IAAR,MALgB,yDAAH,qDAQX8a,EAAYH,EAAO3P,KAAI,SAAC+P,GAAD,OAC3B,wBAAI7P,IAAK6P,EAAMC,SACb,4BAAKD,EAAMC,SACX,4BAAKD,EAAME,YACX,4BAAK,IAAIC,KAAKH,EAAMI,MAAMC,0BAGxBd,EAAaI,EAAKW,WACpB,IAAIH,KAAKR,EAAKW,YAAYD,qBAC1B,KAEJ,OACE,kBAACE,EAAA,EAAD,KACE,kBAAC9Z,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,CAAKE,GAAG,IAAIpG,UAAU,QACpB,kBAACmG,EAAA,EAAD,CAAKC,GAAG,KACN,kBAACF,EAAA,EAAD,CAAKE,GAAG,KACN,kBAACD,EAAA,EAAD,kBACA,kBAACA,EAAA,EAAD,UAAQiZ,EAAKa,aAGjB,kBAAC9Z,EAAA,EAAD,CAAKC,GAAG,KACN,kBAACF,EAAA,EAAD,CAAKE,GAAG,KACN,kBAACD,EAAA,EAAD,gBACA,kBAACA,EAAA,EAAD,UAAQiZ,EAAKjT,OAInB,kBAACjG,EAAA,EAAD,CAAKE,GAAG,IAAIpG,UAAU,QACpB,kBAACmG,EAAA,EAAD,CAAKC,GAAG,KACN,kBAACF,EAAA,EAAD,CAAKE,GAAG,KACN,kBAACD,EAAA,EAAD,iBACA,kBAACA,EAAA,EAAD,UAAQiZ,EAAKc,OAGjB,kBAAC/Z,EAAA,EAAD,CAAKC,GAAG,KACN,kBAACF,EAAA,EAAD,CAAKE,GAAG,KACN,kBAACD,EAAA,EAAD,uBACA,kBAACA,EAAA,EAAD,UAAQ6Y,MAId,kBAAC9Y,EAAA,EAAD,CAAKE,GAAG,KACN,kBAACD,EAAA,EAAD,CAAKC,GAAG,KACN,kBAACF,EAAA,EAAD,CAAKE,GAAG,KACN,kBAACD,EAAA,EAAD,sBACA,kBAACA,EAAA,EAAD,UAAQ,IAAIyZ,KAAKR,EAAKe,YAAYL,wBAGtC,kBAAC3Z,EAAA,EAAD,CAAKC,GAAG,SAId,6BACA,kBAACF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACG,IACD,kBAAC+I,GAAA,EAAD,KACE,+BACE,4BACE,wBAAIa,MAAM,OAAV,YACA,wBAAIA,MAAM,OAAV,eACA,wBAAIA,MAAM,OAAV,UAGJ,+BAAQyP,QCoCLY,GAtGE,CACf,CACEC,KAAM,aACNxd,KAAM,YACNyd,KAAM,aACNxQ,UAAW/J,GACXwa,OAAQ,QASV,CACEF,KAAM,WACNxd,KAAM,UACNyd,KAAM,mBACNxQ,UAAW0J,GACX+G,OAAQ,QAEV,CACEF,KAAM,oBACNxd,KAAM,mBACNyd,KAAM,uBACNxQ,UAAWqK,GACXoG,OAAQ,QAEV,CACEF,KAAM,wBACNxd,KAAM,uBACNyd,KAAM,uBACNxQ,UAAW0Q,GACXD,OAAQ,QAEV,CACEF,KAAM,iBACNxd,KAAM,gBACNyd,KAAM,uBACNxQ,UC1CiB,WAAO,IAAD,EACeyO,oBAAS,GADxB,oBAClBkC,EADkB,KACJC,EADI,OAEenC,mBAAS,IAFxB,oBAElBoC,EAFkB,KAEJC,EAFI,OAGKrC,mBAAS,MAHd,oBAGlBsC,EAHkB,KAGTC,EAHS,OAIiBvC,mBAAS,MAJ1B,oBAIlBwC,EAJkB,KAIHC,EAJG,OAKiBzC,mBAAS,MAL1B,oBAKlB0C,EALkB,KAKHC,EALG,OAMyB3C,mBAAS,OANlC,oBAMlB4C,EANkB,KAMCC,EAND,OAOe7C,mBAAS,GAPxB,oBAOlB8C,EAPkB,KAOJC,EAPI,KASzB5C,qBAAU,WACR6C,IACAC,MACC,IAEH,IAAMA,EAAiB,uCAAG,4BAAAjc,EAAA,+EAEJ/E,EAAW6C,IAAX,mBAFI,OAEhBub,EAFgB,OAGtBgC,EAAgBhC,EAAIzc,MAHE,gDAKtBsC,QAAQC,IAAR,MALsB,yDAAH,qDASjB6c,EAAY,uCAAG,4BAAAhc,EAAA,+EAEC/E,EAAW6C,IAAX,gBAFD,OAEXub,EAFW,OAGjBkC,EAAWlC,EAAIzc,MAHE,gDAKjBsC,QAAQC,IAAR,MALiB,yDAAH,qDASZ+c,EAAkB,uCAAG,WAAOtV,GAAP,eAAA5G,EAAA,+EAEL/E,EAAW6C,IAAX,qBAA6B8I,IAFxB,OAEjByS,EAFiB,OAGvBna,QAAQC,IAAIka,EAAIzc,MAChB6e,EAAiBpC,EAAIzc,MACjByc,EAAIzc,KAAKuf,WAAWngB,IACtB6f,EAAqB,SAEvBE,EACG1C,EAAIzc,KAAKuf,WAAWngB,GAAKqd,EAAIzc,KAAKuf,WAAWC,WAAc,KATvC,kDAYvBld,QAAQC,IAAR,MAZuB,0DAAH,sDAsBpBkd,EAAe,EACfC,EAAiB,EAGrB,OACE,oCACE,kBAAC,EAAD,CAAazhB,KAAK,OAClB,yBAAKJ,UAAU,WACb,kBAACkG,EAAA,EAAD,CAAKL,MAAO,CAAE0I,OAAQ,SACpB,kBAACpI,EAAA,EAAD,CAAKE,GAAG,MACN,kBAAC,KAAD,CAAMR,MAAO,CAAEgZ,UAAW,MAAOha,SAAU,WACzC,kBAAC7B,EAAA,EAAD,KACE,wBAAIhD,UAAU,SAAd,kBAEF,6BACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,kBAAC8hB,EAAA,EAAD,CAAUC,OAAQtB,EAAcuB,OAvBjC,kBAAMtB,GAAgB,SAACuB,GAAD,OAAgBA,MAuBW7hB,KAAK,MACnD,kBAAC8hB,EAAA,EAAD,CAAgBC,OAAK,GAArB,gBACA,kBAACC,EAAA,EAAD,KACGzB,EAAajR,KAAI,SAAC4E,GAAD,OAChB,kBAAC+N,EAAA,EAAD,CACEzS,IAAK0E,EAAKnI,GACVmE,QAAS,kBA3B/B4Q,EADmBzB,EA4B8BnL,QA1BjDmN,EAAmBhC,EAAMtT,IAFP,IAACsT,IA8BInL,EAAKgO,eAOjBvB,EACC,oCACE,yBAAK/gB,UAAU,mCACb,yBAAKA,UAAU,SAAf,YACY+gB,EAAcW,WAAW5T,QAErC,yBAAK9N,UAAU,SAAf,cACc6gB,EAAQ7X,UADtB,IACkC6X,EAAQ5X,WAG5C,yBAAKjJ,UAAU,mCACb,yBAAKA,UAAU,SAAf,gBACgB6gB,EAAQ3X,YAExB,yBAAKlJ,UAAU,SAAf,gBACgBihB,EAAcqB,SAGhC,yBAAKtiB,UAAU,mCACb,yBAAKA,UAAU,SAAf,cAAmC6gB,EAAQ9W,KAC3C,yBAAK/J,UAAU,SAAf,YAAiC6gB,EAAQ5W,SAE3C,yBAAKjK,UAAU,mCACb,yBAAKA,UAAU,SAAf,UAA+B6gB,EAAQrW,WACvC,yBAAKxK,UAAU,SAAf,gBAAqC6gB,EAAQyB,SAE/C,yBAAKtiB,UAAU,8BACb,yBAAKA,UAAU,SAAf,UAA+B6gB,EAAQlW,UACvC,yBAAK3K,UAAU,SAAf,YAAiC6gB,EAAQnW,SAE3C,yBAAK1K,UAAU,8BACb,yBAAKA,UAAU,UACb,8BAEF,yBAAKA,UAAU,gCAAf,qCACqC,IAClC+gB,EAAcW,WAAWC,WAF5B,iBAIA,yBAAK3hB,UAAU,UACb,2BAAOA,UAAU,0BACf,4BACE,wBAAI+P,MAAM,OAAV,UACA,wBAAIA,MAAM,OAAV,YACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,MACA,wBAAIA,MAAM,OAAV,cACA,wBAAIA,MAAM,OAAV,eAEF,+BACE,wBAAIH,IAAKmR,EAAcW,WAAW5T,QAChC,4BACE,0BAAMjI,MAAO,CAAEC,MAAOqb,IACnBJ,EAAcW,WAAW5T,SAG9B,4BACE,0BAAMjI,MAAO,CAAEC,MAAOqb,IACnBN,EAAQ7X,UAAY,IAAM6X,EAAQ5X,WAGvC,4BACE,0BAAMpD,MAAO,CAAEC,MAAOqb,IACnBJ,EAAcW,WAAWC,WAD5B,MAIF,4BACE,0BAAM9b,MAAO,CAAEC,MAAOqb,IACnBJ,EAAcW,WAAWngB,KAG9B,4BACE,0BAAMsE,MAAO,CAAEC,MAAOqb,IACnBJ,EAAcW,WAAWC,WAD5B,MAIF,4BACE,0BAAM9b,MAAO,CAAEC,MAAOqb,IACnBE,KAINN,EAAcwB,cAAc7S,KAAI,SAACqO,GAChC6D,GAAgB7D,EAAMxc,GACtB,IAAMihB,EACJzB,EAAcW,WAAWC,WACzB5D,EAAM4D,WACFc,EAAY1E,EAAMxc,IAAMihB,EAAa,KAE3C,OADAX,GAAkBY,EAEhB,wBAAI7S,IAAKmO,EAAMjQ,QACb,4BAAKiQ,EAAMjQ,QACX,4BACGiQ,EAAM/U,UAAY,IAAM+U,EAAM9U,UAEjC,4BAAK8U,EAAM4D,WAAX,KACA,4BAAK5D,EAAMxc,IACX,4BAAKihB,EAAL,KACA,4BAAKC,OAIX,4BACE,qCACA,6BACA,6BACA,4BAAKb,GACL,6BACA,4BAAKP,EAAeQ,OAK5B,yBAAK7hB,UAAU,UACb,8BAEF,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,OAAf,iBACA,yBAAKA,UAAU,OAAf,KACKqhB,EAAeQ,EADpB,SAKJ,yBAAK7hB,UAAU,iBACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,OAAf,uBACA,yBAAKA,UAAU,OAAf,KACK+gB,EAAcW,WAAWgB,oBAAqB,IADnD,QAMJ,yBAAK1iB,UAAU,iBACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,OAAf,iBACA,yBAAKA,UAAU,OAAf,KACK+gB,EAAcW,WAAWiB,kBAD9B,SAKJ,yBAAK3iB,UAAU,iBACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,OAAf,mBACA,yBAAKA,UAAU,OAAf,KACK+gB,EAAcW,WAAWkB,iBAD9B,SAKJ,yBAAK5iB,UAAU,iBACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,OAAf,gBACA,yBAAKA,UAAU,OAAf,KACK+gB,EAAcW,WAAWmB,iBAD9B,SAKJ,yBAAK7iB,UAAU,iBACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,QACf,yBAAKA,UAAU,WAIrB,yBAAKA,UAAU,YACb,yBAAKA,UAAU,UACb,+BAGJ,yBAAKA,UAAU,YACb,yBAAKA,UAAU,wBAAf,SACS,IACN+gB,EAAcW,WAAWgB,oBACxB3B,EAAcW,WAAWiB,kBACzB5B,EAAcW,WAAWkB,iBACzB7B,EAAcW,WAAWmB,iBACzBxB,EACAQ,EAAgB,IAPpB,UAeR,2CDrOZtB,OAAQ,QAEV,CACEF,KAAM,eACNxd,KAAM,cACNyd,KAAM,uBACNxQ,UAAW2L,GACX8E,OAAQ,QAGV,CACEF,KAAM,eACNxd,KAAM,YACNyd,KAAM,uBACNxQ,UAAW8L,GACX2E,OAAQ,QAEV,CACEF,KAAM,WACNxd,KAAM,UACNyd,KAAM,uBACNxQ,UAAWwO,GACXiC,OAAQ,QAEV,CACEF,KAAM,QACNxd,KAAM,OACNyd,KAAM,uBACNxQ,UErEgB,WAAO,IAAD,EACEyO,mBAAS,IADX,oBACjBuE,EADiB,KACVC,EADU,OAEUxE,oBAAS,GAFnB,oBAEjByE,EAFiB,KAENC,EAFM,OAGgB1E,mBAAS,MAHzB,oBAGjB2E,EAHiB,KAGHC,EAHG,KAIxBzE,qBAAU,WACR0E,MACC,IAEH,IAOMA,EAAU,uCAAG,4BAAA7d,EAAA,+EAEG/E,EAAW6C,IAAX,kBAFH,OAETub,EAFS,OAGfmE,EAASnE,EAAIzc,MAHE,gDAKfsC,QAAQC,IAAR,MALe,yDAAH,qDAQhB,OACE,oCACE,kBAAC,EAAD,CAAatE,KAAK,OAClB,yBAAKJ,UAAU,WACb,kBAACkG,EAAA,EAAD,CAAKL,MAAO,CAAE0I,OAAQ,SACpB,kBAACpI,EAAA,EAAD,CAAKE,GAAG,MACN,kBAAC,KAAD,CAAMR,MAAO,CAAEgZ,UAAW,MAAOha,SAAU,WACzC,kBAAC7B,EAAA,EAAD,KACE,wBAAIhD,UAAU,SAAd,UAEF,6BACC8iB,GAASA,EAAMzgB,OACd,kBAAC6M,GAAA,EAAD,KACE,+BACE,4BACE,iCACA,oCACA,wCACA,2CACA,gDACA,sCACA,+BAGJ,+BACG4T,EAAMpT,KAAI,SAAC0P,EAAM/H,GAAP,OACT,wBAAIzH,IAAKyH,GACP,wBAAItH,MAAM,OAAOsH,EAAQ,GACzB,4BAAK+H,EAAKa,WACV,4BAAKb,EAAKc,KACV,4BAAK,IAAIN,KAAKR,EAAKe,YAAYkD,kBAC/B,4BACGjE,EAAKkE,WAAa,EACflE,EAAKkE,WAAa,UAClB,MAEN,4BAAKlE,EAAKmE,aAAe,WAAa,UACtC,4BACE,kBAACjW,GAAA,EAAD,CAAQgD,QAAS,kBArDrB,SAAC8O,GACnB+D,EAAgB/D,GAChB6D,GAAa,GAmDgCO,CAAYpE,KAAnC,kBASV,0DAMV,kBAACqE,GAAA,EAAD,CAAO1B,OAAQiB,EAAWhB,OA/DX,kBAAMiB,GAAa,IA+DY7iB,KAAK,MACjD,kBAACsjB,GAAA,EAAD,qBACA,kBAACC,GAAA,EAAD,KACE,kBAAC,GAAD,CAAavE,KAAM8D,QFTzB3C,OAAQ,SGnFN1a,GACK,CACPoK,QAAS,QACT2T,WAAY,QAHV/d,GAKG,CACL+d,WAAY,UANV/d,GAQE,CACJsI,SAAU,SACV0V,cAAe,UAIbC,GAAgBrb,aAAO,MAAPA,CAAc5C,IAC9Bke,GAActb,aAAO,OAAPA,CAAe5C,IAC7Bme,GAAavb,aAAO,IAAPA,CAAY5C,IAchBoe,G,uKAXH,IACFC,EAAkBhkB,KAAKC,MAAvB+jB,cACN,OACE,kBAACJ,GAAD,KACE,kBAACE,GAAD,CAAYhkB,UAAU,sCACtB,kBAAC+jB,GAAD,wBAA8BG,Q,GANV5jB,IAAMC,WCd5BsF,GACK,CACPoK,QAAS,QACTrB,UAAW,OACXgV,WAAY,QAJV/d,GAMG,CACL+d,WAAY,UAPV/d,GASE,CACJsI,SAAU,SACV0V,cAAe,UAIbM,GAAmB1b,aAAO,MAAPA,CAAc5C,IACjCue,GAAiB3b,aAAO,OAAPA,CAAe5C,IAChCwe,GAAgB5b,aAAO,IAAPA,CAAY5C,IAE5Bye,G,4MACJ7iB,kBAAoB,WAClB,EAAKtB,MAAM0V,wB,uDAGH,IAAD,EACmB3V,KAAKC,MAAzBgW,EADC,EACDA,QADC,EACQxJ,OACf,OACE,kBAACwX,GAAD,KACE,kBAACE,GAAD,CAAerkB,UAAU,sCACzB,kBAACokB,GAAD,4BAAqCjO,Q,GAVd7V,IAAMC,WAgCtBgN,GAFGC,cAdM,SAACzM,GACvB,MAAO,CACLoV,QAASpV,EAAMkY,qBAAqB9C,QACpCxJ,OAAQ5L,EAAMkY,qBAAqBtM,OACnCyN,UAAWrZ,EAAMkY,qBAAqBmB,cAIf,SAACzM,GAC1B,MAAO,CACLkI,qBAAsBjI,aAAmBiI,GAAsBlI,MAMpDJ,CAAUM,YAAWyW,KCjBrBC,GArCI,WACjB,IAAM1e,EACO,CACToK,QAAS,SAFPpK,EAIS,CACXoK,QAAS,QACTrB,UAAW,QANT/I,EAQG,CACL+d,WAAY,UATV/d,EAWE,CACJsI,SAAU,SACV0V,cAAe,UAGbW,EAAe/b,aAAO,MAAPA,CAAc5C,GAC7B4e,EAAiBhc,aAAO,MAAPA,CAAc5C,GAC/B6e,EAAkBjc,aAAO,OAAPA,CAAe5C,GACjC8e,EAAiBlc,aAAO,IAAPA,CAAY5C,GApBZ,EAsBC+e,cAAY,SAAC7jB,GAAD,OAAWA,EAAMua,qBAA7ClD,EAtBe,EAsBfA,MAAOvV,EAtBQ,EAsBRA,KACf,OACE,6BACE,kBAAC2hB,EAAD,KACE,kBAACG,EAAD,CAAgB3kB,UAAU,sCAC1B,kBAAC0kB,EAAD,gBAA0BtM,IAE5B,kBAACqM,EAAD,KACE,kBAACE,EAAD,CAAgB3kB,UAAU,sCAC1B,kBAAC0kB,EAAD,kBAA4B7hB,MCqLrBgiB,G,4MA7Lb9jB,MAAQ,CACNghB,QAAQ,EACRtB,cAAc,EACd3a,MAAO,e,EAETgf,cAAgBxkB,IAAMykB,Y,EACtB/C,OAAS,WACH,EAAKjhB,MAAMghB,OACb,EAAKzf,SAAS,CACZwD,MAAO,gBAGT,EAAKxD,SAAS,CACZwD,MAAO,UAGX,EAAKxD,SAAS,CACZyf,QAAS,EAAKhhB,MAAMghB,U,EAGxBiD,eAAiB,SAAC1Y,GAChB,EAAKhK,SAAS,CACZme,cAAe,EAAK1f,MAAM0f,gB,EAG9BwE,SAAW,WACT,IAAIpiB,EAsBJ,OArBAqiB,GAAOxV,KAAI,SAACyV,EAAMvV,GAmBhB,OAlBIuV,EAAKC,SACPD,EAAKE,MAAM3V,KAAI,SAACyV,EAAMvV,GAIpB,OAHIuV,EAAK9E,OAAS,EAAKlgB,MAAMmlB,SAASC,WACpC1iB,EAAOsiB,EAAKtiB,MAEP,SAGLsiB,EAAKK,SACHL,EAAK9E,OAAS,EAAKlgB,MAAMmlB,SAASC,WACpC1iB,EAAOsiB,EAAKtiB,OAQX,QAEFA,G,EAET4iB,YAAc,WACZC,SAASC,gBAAgBC,UAAU5D,OAAO,YAC1C,EAAK8C,cAAce,QAAQD,UAAU5D,OAAO,Y,EAG9C8D,YAAc,WACRC,OAAOC,WAAa,KAAO,EAAKjlB,MAAMghB,OACxC,EAAKzf,SAAS,CACZwD,MAAO,UAGT,EAAKxD,SAAS,CACZwD,MAAO,iB,kEAKXigB,OAAOE,iBAAiB,SAAU/lB,KAAK4lB,YAAYI,KAAKhmB,S,yCAEvCoM,GAEfyZ,OAAOC,WAAa,KACpB1Z,EAAE4L,QAAQoN,SAASC,WAAajZ,EAAEgZ,SAASC,WACiB,IAA5DG,SAASC,gBAAgB3lB,UAAUmmB,QAAQ,cAE3CT,SAASC,gBAAgBC,UAAU5D,OAAO,YAC1C9hB,KAAK4kB,cAAce,QAAQD,UAAU5D,OAAO,c,+BAGtC,IAAD,OACP,OAEE,kBAACoE,EAAA,EAAD,CACEtgB,OACgE,IAA9D5F,KAAKC,MAAMmlB,SAASC,SAASY,QAAQ,oBACjC,QACAjmB,KAAKa,MAAM+E,MAEjBugB,OAAO,KACPrmB,WACgE,IAA9DE,KAAKC,MAAMmlB,SAASC,SAASY,QAAQ,oBACjC,4BACA,8BACsB,gBAArBjmB,KAAKa,MAAM+E,MAA0B,sBAAwB,KAGpE,kBAACka,EAAA,EAAD,CAAWsG,OAAK,GACd,yBAAKtmB,UAAU,kBACb,yBAAKA,UAAU,iBACb,4BACEgI,KAAK,SACLgW,IAAK9d,KAAK4kB,cACV9kB,UAAU,iBACVsQ,QAAS,kBAAM,EAAKmV,gBAEpB,0BAAMzlB,UAAU,4BAChB,0BAAMA,UAAU,4BAChB,0BAAMA,UAAU,8BAGpB,kBAACumB,EAAA,EAAD,CAAaC,KAAK,KAAKtmB,KAAK+kB,aAE9B,kBAAC,GAAD,MACA,6BACE,kBAAC,GAAD,CAAef,cAAehkB,KAAKC,MAAM+jB,gBACzC,kBAAC,GAAD,OAEF,kBAACuC,EAAA,EAAD,CAAenW,QAASpQ,KAAK8hB,QAC3B,0BAAMhiB,UAAU,oCAChB,0BAAMA,UAAU,oCAChB,0BAAMA,UAAU,qCAGlB,kBAAC0mB,EAAA,EAAD,CACE3E,OAAQ7hB,KAAKa,MAAMghB,OACnB4E,QAAM,EACN3mB,UAAU,uBAEV,8BACE,kBAACwS,EAAA,EAAD,CAAYxS,UAAU,aACpB,kBAAC+H,EAAA,EAAD,CAAOE,YAAY,cACnB,kBAACsM,EAAA,EAAD,CAAiBC,UAAU,UACzB,kBAACoS,EAAA,EAAD,KACE,uBAAG5mB,UAAU,oCAKrB,kBAAC6mB,EAAA,EAAD,CAAKF,QAAM,GACT,kBAACG,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMC,GAAG,SAAS/mB,UAAU,YAC1B,uBAAGA,UAAU,oCACb,2BACE,0BAAMA,UAAU,wBAAhB,YAIN,kBAAC8hB,EAAA,EAAD,CACEkF,KAAG,EACHjF,OAAQ7hB,KAAKa,MAAM0f,aACnBuB,OAAQ,SAAC1V,GAAD,OAAO,EAAK0Y,eAAe1Y,KAEnC,kBAAC4V,EAAA,EAAD,CAAgBC,OAAK,EAAC6E,KAAG,GACvB,uBAAGhnB,UAAU,gCACb,2BACE,0BAAMA,UAAU,wBAAhB,aAGJ,kBAACoiB,EAAA,EAAD,CAAc9Q,OAAK,GAGjB,kBAAC+Q,EAAA,EAAD,CACEnf,IAAI,SACJoN,QAAS,WA4B7B,IAAmBsH,EACVpX,EAAW2Y,KAAX,UAA2BvB,GAAMnL,OAAM,SAACC,GAC7CjI,QAAQC,IAAIgI,MA7BkBzK,MAAK,WACf8jB,OAAOT,SAASkB,KAAhB,UAA0BT,OAAOT,SAAS2B,OAA1C,aAJN,YAYJ,kBAACH,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMC,GAAG,SAAS/mB,UAAU,YAC1B,uBAAGA,UAAU,iCACb,2BACE,0BAAMA,UAAU,wBAAhB,sB,GAlLCM,IAAMC,W,IChBvB2mB,GC8DWC,G,uKA/DX,OACE,4BACEnnB,UAAW,UAAYE,KAAKC,MAAMinB,QAAU,kBAAoB,U,GAJnD9mB,IAAMC,W,qBDwEZ8mB,G,kDAlEb,WAAYlnB,GAAQ,IAAD,8BACjB,cAAMA,IACDmnB,YAAYpB,KAAjB,iBAFiB,E,wDAKPqB,GACV,OAAOrnB,KAAKC,MAAMmlB,SAASC,SAASY,QAAQoB,IAAc,EAAI,SAAW,K,0CAGrEC,UAAUC,SAAStB,QAAQ,QAAU,IACvCe,GAAK,IAAIQ,IAAiBxnB,KAAKynB,KAAKC,QAAS,CAC3CC,iBAAiB,EACjBC,iBAAiB,O,6CAKjBN,UAAUC,SAAStB,QAAQ,QAAU,GACvCe,GAAGa,Y,+BAGG,IAAD,OACP,OACE,yBAAK/nB,UAAU,UAAUgoB,aAAY9nB,KAAKC,MAAM8nB,iBAC9C,yBAAKjoB,UAAU,QACb,uBACEwmB,KAAK,IACLxmB,UAAU,wBACVwM,OAAO,UAEP,yBAAKxM,UAAU,YACb,yBAAKkoB,IAAKC,KAAMC,IAAI,kBAK1B,yBAAKpoB,UAAU,kBAAkBge,IAAI,WACnC,kBAAC6I,EAAA,EAAD,KACG3mB,KAAKC,MAAM+kB,OAAOxV,KAAI,SAACyV,EAAMvV,GAC5B,OAAIuV,EAAKK,SAAiB,KAExB,wBACExlB,UACE,EAAKsnB,YAAYnC,EAAK5E,OAAS4E,EAAK9E,OACnC8E,EAAKkD,IAAM,qBAAuB,IAErCzY,IAAKA,GAEL,kBAAC,IAAD,CACEmX,GAAI5B,EAAK5E,OAAS4E,EAAK9E,KACvBrgB,UAAU,WACVsoB,gBAAgB,UAEhB,uBAAGtoB,UAAW,gBAAkBmlB,EAAK7E,OACrC,2BAAI6E,EAAKtiB,kB,GAvDPvC,IAAMC,W,+zCEX5B,ICoBI2mB,GDgDWqB,GApEKC,aAAH,MCsBXziB,G,4MACJhF,MAAQ,CACNknB,gBAAiB,MACjB/D,cAAe,EACfuE,QAAS,I,EAEXC,UAAYpoB,IAAMykB,Y,EA4BlB4D,iBAAmB,SAAC7iB,GAClB,EAAKxD,SAAS,CAAE2lB,gBAAiBniB,K,EAGnC6S,iB,sBAAmB,4BAAApT,EAAA,sEACM/E,EAAW6C,IAAI,mBADrB,OACXnB,EADW,OAEjB,EAAKI,SAAS,CACZ4hB,cAAehiB,EAASC,KAAKgU,UAHd,2C,kEA9BbqR,UAAUC,SAAStB,QAAQ,QAAU,IACvCe,GAAK,IAAIQ,IAAiBxnB,KAAKwoB,UAAU7C,SACzCH,SAAS9N,KAAKgO,UAAU5D,OAAO,yBAE7B9hB,KAAKa,MAAM0nB,UAAY1C,OAAOT,SAASkB,OACzCtmB,KAAKoC,SAAS,CAAEmmB,QAAS1C,OAAOT,SAASkB,OACzCtmB,KAAKyY,sB,6CAIH6O,UAAUC,SAAStB,QAAQ,QAAU,IACvCe,GAAGa,UACHrC,SAAS9N,KAAKgO,UAAU5D,OAAO,2B,yCAGhB1V,GACQ,SAArBA,EAAE4L,QAAQ0Q,SACZlD,SAASC,gBAAgBkD,UAAY,EACrCnD,SAASoD,iBAAiBD,UAAY,EACtC3oB,KAAKwoB,UAAU7C,QAAQgD,UAAY,GAEjC3oB,KAAKa,MAAM0nB,UAAY1C,OAAOT,SAASkB,OACzCtmB,KAAKoC,SAAS,CAAEmmB,QAAS1C,OAAOT,SAASkB,OACzCtmB,KAAKyY,sB,+BAcP,OACE,yBAAK3Y,UAAU,YACXE,KAAKC,MAAM4oB,eAAiB,kBAAC,IAAD,CAAUC,KAAK,OAAOjC,GAAG,WACvD,kBAAC,GAAD,MACA,kBAAC,GAAD,iBACM7mB,KAAKC,MADX,CAEE+kB,OAAQA,GACR+C,gBAAiB/nB,KAAKa,MAAMknB,mBAE9B,kBAAC,KAAD,MACA,yBAAKjoB,UAAU,aAAage,IAAK9d,KAAKwoB,WACpC,kBAAC,GAAD,iBAAYxoB,KAAKC,MAAjB,CAAwB+jB,cAAehkB,KAAKa,MAAMmjB,iBAClD,kBAAC,IAAD,KACGgB,GAAOxV,KAAI,SAACyV,EAAMvV,GACjB,OACE,kBAAC,IAAD,CACEyQ,KAAM8E,EAAK5E,OAAS4E,EAAK9E,KACzBvQ,UAAWqV,EAAKrV,UAChBF,IAAKA,OAIX,kBAAC,IAAD,CAAUoZ,KAAK,OAAOjC,GAAG,oBAE3B,kBAAC,GAAD,CAAQT,OAAK,U,GArEChmB,IAAMC,WA+FfgN,GAFGC,cAbM,SAACzM,GACvB,MAAO,CACLgoB,cAAehoB,EAAMua,kBAAkByN,kBAIhB,SAACpb,GAC1B,MAAO,KAQMJ,CAAUxH,ICtHZ3F,GAEA,QAFAA,GAGA,QAHAA,GAID,QAJCA,GAKD,SALCA,GAMA,SANAA,GAOA,SCNA6oB,GAAS,CAClBC,QAAQ,sBAAD,ODDE,QCCF,KACPC,QAAQ,sBAAD,OAAwB/oB,GAAxB,KACPgpB,QAAQ,sBAAD,OAAwBhpB,GAAxB,KAEPipB,OAAO,sBAAD,OAAwBjpB,GAAxB,KACNkpB,OAAO,sBAAD,OAAwBlpB,GAAxB,KACNmpB,QAAQ,sBAAD,OAAwBnpB,GAAxB,KACPopB,QAAQ,sBAAD,OAAwBppB,GAAxB,KACPqpB,SAAS,sBAAD,OAAwBrpB,GAAxB,MCICspB,GAAqB,SAACvnB,GACjC,MAAO,CACL6F,KCdgC,uBDehCK,QAASlG,IAiBAwnB,GAAc,SAAC/R,EAAMgS,GAChC,OAAO,SAACjc,GAEN,OADAA,EA3BK,CACL3F,KCViC,0BD+DrC,SAAkB4P,GAChB,OAAOpX,EAAW2Y,KAAX,SAA0BvB,GAAMnL,OAAM,SAACC,GAC5CjI,QAAQC,IAAIgI,MA5BLmd,CAASjS,GACb3V,MAAK,SAACC,GACDA,GACFyL,EAAS+b,GAAmBxnB,IAC5B0nB,KAEAjc,EArBD,CACL3F,KCtB+B,2BD6C5ByE,OAAM,SAACmJ,GACNjI,EAzBC,CACL3F,KCtB+B,6BCcnC,IAAMnC,GAAQ,CACZikB,eAAgB,CACdvb,OAAQ,QACR7G,SAAU,YAGZqiB,KAAK,cACHriB,SAAU,WACVsiB,IAAK,MACL3Y,KAAM,MACND,UAAW,wBACXnD,WAAY,oCACZvF,QAAS,YACT4F,MAAO,OACN2a,GAAOI,OAAS,CACfY,SAAU,UAGdC,GAAI,CACF3b,OAAQ,OACR4b,eAAgB,QAChBlc,WAAY,0CAEdmc,MAAO,CACLnc,WAAY,SAEdka,KAAM,CACJlY,QAAS,SAGXjC,OAAQ,CACNM,MAAO,SAIL+b,GAAiB5hB,aAAO,MAAPA,CAAc5C,GAAMikB,gBACrCQ,GAAmB7hB,aAAO,MAAPA,CAAc5C,GAAMkkB,MACvCQ,GAAkB9hB,aAAO,MAAPA,CAAc5C,GAAMqkB,IACtCniB,GAAQU,aAAOd,GAAPc,CAAkB5C,GAAMukB,OAChCI,GAAgB/hB,aAAO,MAAPA,CAAc5C,GAAMsiB,MACpCtZ,GAAepG,aAAO6E,KAAP7E,CAAe5C,GAAMmI,QAEpCyc,G,4MACJ1pB,MAAQ,CACN2pB,gBAAgB,EAChBC,SAAS,EACTC,YAAY,G,EAGdC,aAAe,WACb,EAAKvoB,SAAS,CACZooB,gBAAiB,EAAK3pB,MAAM2pB,kB,EAIhCI,aAAe,SAAClT,GACd,EAAKzX,MAAMwpB,YAAY/R,EAAM,EAAKmT,qBAAqB9oB,MAAK,SAACC,GACjC,YAAtB,EAAK/B,MAAMwM,OAAsB,EAAKxM,MAAM+X,QAAQvE,KAAK,QACxD/G,MAAM,2C,EAIfme,oBAAsB,WACpB,EAAK5qB,MAAM+X,QAAQvE,KAAK,mB,EAG1BlS,kBAAoB,WACb,EAAKtB,MAAM4oB,eACdiC,KAAgB/oB,MAAK,SAACC,GACS,YAAzBA,EAASC,KAAKwK,QAChB,EAAKxM,MAAMupB,mBAAmBxnB,EAASC,MACvC,EAAKhC,MAAM+X,QAAQvE,KAAK,mBAExB,EAAKrR,SAAS,CACZsoB,YAAY,Q,uDAQZ,IAAD,EAC2B1qB,KAAKa,MAAjC2pB,EADC,EACDA,eAAgBC,EADf,EACeA,QACtB,OACE,yBAAK3qB,UAAU,WACb,kBAAC,GAAD,MACA,kBAACqqB,GAAD,CAAgBrqB,UAAU,sBACxB,kBAACuqB,GAAD,CACEvqB,UAAU,kBAMZ,kBAACsqB,GAAD,CAAkBtqB,UAAU,iBAC1B,kBAACwqB,GAAD,CAAetC,IAAK+C,OACpB,6BAECP,EACCC,EACE,8CAEA,kBAAC,GAAD,CAAoBE,aAAc3qB,KAAK2qB,eAGzC,kBAAC,GAAD,CACEA,aAAc3qB,KAAK2qB,aACnBC,aAAc5qB,KAAK4qB,sB,GAlEfxqB,IAAMC,WA2FpBgN,GAAYC,cAfM,SAACzM,GACvB,MAAO,CACL4L,OAAQ5L,EAAMua,kBAAkB3O,OAChCoc,cAAehoB,EAAMua,kBAAkByN,kBAKhB,SAACpb,GAC1B,MAAO,CACLgc,YAAa/b,aAAmB+b,GAAahc,GAC7C+b,mBAAoB9b,aAAmB8b,GAAoB/b,OAMhDE,eAAWN,GAAUkd,KAE9BS,G,uKACM,IAAD,EAC8BhrB,KAAKC,MAApC2qB,EADC,EACDA,aAAcD,EADb,EACaA,aACpB,OACE,kBAAC,KAAD,CACE9hB,cAAe,CACbqP,MAAO,GACP+S,SAAU,IAEZtgB,iBAAkBC,OAAaC,MAAM,CACnCqN,MAAOtN,OAAasgB,UAAU,6BAC3BngB,SAAS,+BACTD,SAAS,YAEZmgB,SAAUrgB,OAAaE,SAAS,2BAElCM,SAAQ,uCAAE,WAAOC,GAAP,SAAAhG,EAAA,sEACF,IAAI8lB,SAAQ,SAACC,GAAD,OAAa7f,WAAW6f,EAAS,QAD3C,OAERR,EAAavf,GAFL,2CAAF,wDAKP,gBACCA,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aAGAG,GAPD,EAKCF,cALD,EAMCC,cAND,EAOCC,YACAC,EARD,EAQCA,aACAC,EATD,EASCA,aATD,OAYC,0BAAMX,SAAUU,EAAchM,UAAU,+BACtC,yBACEA,UAAU,wDACVurB,gBAAc,kBAEb7f,EAAO0M,OAASzM,EAAQyM,OACX,yBAAKpY,UAAU,kBAAkB0L,EAAO0M,OAEtD,kBAAC,GAAD,CACEtQ,MAAM,SACNqE,GAAG,QACHnE,KAAK,OACLY,MAAO2C,EAAO6M,MACdhM,SAAUR,EACVS,OAAQN,EACR/L,UACE0L,EAAO0M,OAASzM,EAAQyM,MACpB,mBACA,aAENvQ,WAAW,IAGb,0BAAM7H,UAAU,oBAElB,yBACEA,UAAU,wDACVurB,gBAAc,iBAEd,kBAAC,GAAD,CACEzjB,MAAM,WACNqE,GAAG,WACHnE,KAAK,WACLY,MAAO2C,EAAO4f,SACd/e,SAAUR,EACVS,OAAQN,EACR/L,UACE0L,EAAOyf,UAAYxf,EAAQwf,SACvB,mBACA,aAENtjB,WAAW,IAEb,0BAAM7H,UAAU,oBAGlB,yBAAKA,UAAU,+BACb,kBAAC,GAAD,CACEA,UAAU,oBACV8F,MAAM,SACNkC,KAAK,SAEL8E,SAAUb,GALZ,YAWF,yBAAKjM,UAAU,qCACb,0BAAMA,UAAU,SAEhB,uBAAGwmB,KAAK,IAAIxmB,UAAU,OAAOsQ,QAASua,GAAtC,6B,GA9FUvqB,IAAMC,WAyGxBirB,GAAqB,SAACrrB,GAC1B,OACE,kBAAC,KAAD,CACE4I,cAAe,CACbqP,MAAO,GACPnO,OAAQ,GACRD,MAAO,IAETa,iBAAkBC,OAAaC,MAAM,CACnCqN,MAAOtN,OACJG,SAAS,sCACTD,SAAS,YAEZf,OAAQa,OACLE,SAAS,YACTE,KACC,MACA,6BACA,SAACC,GAAD,OAASA,GAAiC,KAA1BA,EAAIC,WAAW/I,UAEnC2H,MAAOc,OAAad,MAAM,2BAE5BsB,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBC,YAAW,WACTD,GAAc,KACb,QAGJ,gBACCD,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aAGAG,GAPD,EAKCF,cALD,EAMCC,cAND,EAOCC,YACAC,EARD,EAQCA,aACAC,EATD,EASCA,aATD,OAYC,0BAAMX,SAAUU,EAAchM,UAAU,cACtC,yBAAKA,UAAU,qCACb,kBAAC,GAAD,CACE8H,MAAM,SACNqE,GAAG,QACHnE,KAAK,OACLY,MAAO2C,EAAO6M,MACdhM,SAAUR,EACVS,OAAQN,EACR/L,UACE0L,EAAO0M,OAASzM,EAAQyM,MACpB,mBACA,gBAKV,yBAAKpY,UAAU,qCACb,kBAAC,GAAD,CACE8H,MAAM,gBACNqE,GAAG,SACHnE,KAAK,SACLY,MAAO2C,EAAOtB,OACdmC,SAAUR,EACVS,OAAQN,EACR/L,UACE0L,EAAOzB,QAAU0B,EAAQ1B,OACrB,mBACA,gBAKV,yBAAKjK,UAAU,qCACb,kBAAC,GAAD,CACE8H,MAAM,QACNqE,GAAG,QACHnE,KAAK,OACLY,MAAO2C,EAAOvB,MACdoC,SAAUR,EACVS,OAAQN,EACR/L,UACE0L,EAAO1B,OAAS2B,EAAQ3B,MACpB,mBACA,gBAKV,kBAAC,GAAD,CAAclE,MAAM,SAASkC,KAAK,SAAS8E,SAAUb,GAArD,QAIA,yBAAKjM,UAAU,qCACb,0BAAMA,UAAU,SAEhB,uBAAGwmB,KAAK,IAAIxmB,UAAU,OAAOsQ,QAASnQ,EAAM0qB,cAA5C,0BAoIZ,SAASG,KACP,OAAOxqB,EAAW2Y,KAAK,kB,cC/dnBsS,GAAkB,CACpB9e,OAAQ,aACRoc,eAAe,EACf3Q,MAAO,GACPvV,KAAM,ICLJ6oB,GAAc,CAClBvV,QAAS,EACTiE,UAAW,GACXzN,OAAQ,ICFJ+e,GAAc,CAClBje,QAAS,CACPzE,UAAU,GACVC,SAAU,GACVC,WAAY,GACZC,aAAa,GACbC,cAAc,GACdC,gBAAgB,GAChBC,IAAI,GACJC,OAAO,GACPC,iBAAiB,GACjBC,gBAAgB,GAChBC,kBAAkB,GAClBC,iBAAiB,GACjBC,eAAe,GACfC,YAAY,GACZC,SAAS,GACTC,IAAI,GACJC,MAAM,GACNC,OAAO,GACPC,uBAAuB,GACvBC,SAAS,GACTC,SAAS,GACTrJ,MAAM,GACNsJ,YAAY,KACZC,SAAS,GACTC,cAAc,GACdC,UAAU,GACVC,WAAW,GACXC,OAAO,GACPC,SAAS,GACTC,aAAa,IAEf+B,OAAQ,ICpCJ+e,GAAc,CAClBtT,MAAO,GACP8C,QAAS,GACTJ,UAAW,GACXC,YAAa,GACb9Q,OAAQ,GACRF,IAAK,ICJD2hB,GAAc,CAClBvV,QAAS,EACTiE,UAAW,GACXzN,OAAQ,ICOKgf,GARKC,aAAgB,CAChCtQ,kBLO6B,WAA2C,IAA1Cva,EAAyC,uDAAjC0qB,GAAiB7C,EAAgB,uDAAP,GACnE,OAAQA,EAAO5gB,MACd,IFlBmC,wBEmBlC,OAAO6jB,OAAOC,OAAO,GAAI/qB,EAAO,CAC/B4L,OAAQ,YAEJ,IFpB4B,uBEqBxB,OAAOkf,OAAOC,OAAO,GAAI/qB,EAAO,CAC5B4L,OAAQ,UACRoc,cAAeH,EAAOvgB,QAAQ0gB,cAC9B3Q,MAAOwQ,EAAOvgB,QAAQ+P,MACtBvV,KAAM+lB,EAAOvgB,QAAQxF,OAG7B,IF7B2B,sBE8BvB,OAAOgpB,OAAOC,OAAO,GAAI/qB,EAAO,CAC5B4L,OAAQ,WAEhB,IF/B6B,wBEgCzB,OAAOkf,OAAOC,OAAO,GAAI/qB,EAAO,CAC5B4L,OAAQ,aACRoc,eAAe,IAE7B,QACC,OAAOhoB,IK9BNiY,kBJE6B,WAAuC,IAAtCjY,EAAqC,uDAA7B2qB,GAAa9C,EAAgB,uDAAP,GAC9D,OAAQA,EAAO5gB,MACb,IjCdiC,wBiCe/B,OAAO6jB,OAAOC,OAAO,GAAI/qB,EAAO,CAC9B4L,OAAQ,YAEZ,IjChBgC,uBiCiB9B,OAAOkf,OAAOC,OAAO,GAAI/qB,EAAlB8qB,OAAA,KAAAA,CAAA,GACFjD,EAAOvgB,QAAQlG,OAEtB,IjCrB+B,sBiCsB7B,OAAO0pB,OAAOC,OAAO,GAAI/qB,EAAO,CAC9B4L,OAAQ,WAGZ,QACE,OAAO5L,IIjBT2M,iBHgC4B,WAAuC,IAAtC3M,EAAqC,uDAA7B2qB,GAAa9C,EAAgB,uDAAP,GAC7D,OAAQA,EAAO5gB,MACb,IxC7C+B,sBwC8C7B,OAAO6jB,OAAOC,OAAO,GAAI/qB,EAAO,CAC9B4L,OAAQ,YAEZ,IxC/C8B,qBwCgD5B,OAAOkf,OAAOC,OAAO,GAAI/qB,EAAO,CAC9B4L,OAAQ,YAEZ,IxCpD6B,oBwCqD3B,OAAOkf,OAAOC,OAAO,GAAI/qB,EAAO,CAC9B4L,OAAQ,WAGZ,IxCvD2B,kBwCwDzB,OAAOkf,OAAOC,OAAO,GAAI/qB,EAAO,CAC9B4L,OAAQ,GACRc,QAASmb,EAAOvgB,UAGpB,QACE,OAAOtH,IGrDTmY,2BFCsC,WAAuC,IAAtCnY,EAAqC,uDAA7B2qB,GAAa9C,EAAgB,uDAAP,GACvE,OAAQA,EAAO5gB,MACb,I1BfyC,gC0BgBvC,OAAO6jB,OAAOC,OAAO,GAAI/qB,EAAlB8qB,OAAA,KAAAA,CAAA,GACFjD,EAAOvgB,UAGd,QACE,OAAOtH,IERTkY,qBDDgC,WAAuC,IAAtClY,EAAqC,uDAA7B2qB,GAAa9C,EAAgB,uDAAP,GACjE,OAAQA,EAAO5gB,MACb,IlCdqC,4BkCenC,OAAO6jB,OAAOC,OAAO,GAAI/qB,EAAO,CAC9B4L,OAAQ,YAEZ,IlChBoC,2BkCiBlC,OAAOkf,OAAOC,OAAO,GAAI/qB,EAAlB8qB,OAAA,KAAAA,CAAA,GACFjD,EAAOvgB,QAAQlG,OAEtB,IlCrBmC,0BkCsBjC,OAAO0pB,OAAOC,OAAO,GAAI/qB,EAAO,CAC9B4L,OAAQ,WAGZ,QACE,OAAO5L,MEPPgrB,IANc,kBAAXhG,QACPA,OAAOiG,qCACLjG,OAAOiG,qCAAqC,IAEvCC,MAGPC,aAAgBC,OAUHC,GANQ,SAAAC,GACnB,OAAOC,aACHX,GACAI,KCZFQ,GAAOC,cACPC,GAAQL,KAEdM,IAASC,OACP,kBAAC,KAAD,CAAUF,MAAOA,IACf,kBAAC,IAAD,CAAevU,QAASqU,GAAMK,SAAS,QACrC,kBAAC,IAAD,KAGE,kBAAC,IAAD,CAAOvM,KAAK,OAAOsM,OAAQ,SAACxsB,GAAD,OAAW,kBAAC0sB,GAAc1sB,MACrD,kBAAC,IAAD,CAAOkgB,KAAK,SAASsM,OAAQ,SAACxsB,GAAD,OAAW,kBAAC,GAAUA,MACnD,kBAAC,IAAD,CAAU4mB,GAAG,cAInBrB,SAASoH,eAAe,U,oBChC1BC,EAAOC,QAAU,IAA0B,qC,kBCI3C,SAASC,EAASC,EAAKC,GACrB,IAAIC,EAAIC,SAASH,EAAII,MAAM,EAAG,GAAI,IAChCC,EAAIF,SAASH,EAAII,MAAM,EAAG,GAAI,IAC9BE,EAAIH,SAASH,EAAII,MAAM,EAAG,GAAI,IAEhC,OAAIH,EACK,QAAUC,EAAI,KAAOG,EAAI,KAAOC,EAAI,KAAOL,EAAQ,IAEnD,OAASC,EAAI,KAAOG,EAAI,KAAOC,EAAI,IAQ9C,IAwNMC,EAAgC,CACpCtrB,KAAM,SAACurB,GACL,IAAIC,EAAMD,EAAOE,WAAW,MACxBC,EAAiBF,EAAIG,qBAAqB,IAAK,EAAG,IAAK,GAC3DD,EAAeE,aAAa,EAAG,WAC/BF,EAAeE,aAAa,EA7Nb,WA8Nf,IAAIC,EAAeL,EAAIG,qBAAqB,EAAG,IAAK,EAAG,IAGvD,OAFAE,EAAaD,aAAa,EAAG,0BAC7BC,EAAaD,aAAa,EAAG,2BACtB,CACLE,OAAQ,CACN,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFC,SAAU,CACR,CACEpmB,MAAO,eACP6J,YAAa,UACbwc,iBAAkB,OAClBC,qBAAsB,UACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,sBAAuB,EACvBC,YAAa,EACbC,MAAM,EACNxG,gBAAiB+F,EACjBU,YAAa,EACbvsB,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,SAKtE8D,QA/PwC,CACxC0oB,qBAAqB,EACrBC,OAAQ,CACN3e,SAAS,GAEX4e,SAAU,CACRC,YAAa,EACbC,KAAM,UACNC,UAAW,EACXtnB,SAAU,UACVunB,SAAU,GACVC,SAAU,GACVC,aAAc,IAEhBhgB,WAAY,EACZigB,OAAQ,CACNC,MAAO,CACL,CACEpf,QAAS,EACTqf,MAAO,CACLrf,SAAS,EACTsf,cAAe,GAEjBC,UAAW,CACTC,cAAe,cACfC,WAAW,EACXzf,SAAS,EACT0f,YAAY,KAIlBC,MAAO,CACL,CACE3f,QAAS,EACTqf,MAAO,CACLrf,SAAS,GAEXuf,UAAW,CACTC,cAAe,cACfC,WAAW,EACXzf,SAAS,EACT0f,YAAY,MAKpBpP,OAAQ,CACN7X,QAAS,CAAE2I,KAAM,EAAGC,MAAO,EAAG0Y,IAAK,GAAIzY,OAAQ,OAuN7Cse,EAA4B,CAChC1tB,KAAM,SAACurB,GACL,IAAIC,EAAMD,EAAOE,WAAW,MACxBC,EAAiBF,EAAIG,qBAAqB,IAAK,EAAG,IAAK,GAC3DD,EAAeE,aAAa,EAAG,WAC/BF,EAAeE,aAAa,EA9Qb,WA+Qf,IAAIC,EAAeL,EAAIG,qBAAqB,EAAG,IAAK,EAAG,IAGvD,OAFAE,EAAaD,aAAa,EAAG,0BAC7BC,EAAaD,aAAa,EAAGd,EAAS,UAAW,KAC1C,CACLgB,OAAQ,CAAC,QAAS,MAAO,MAAO,MAAO,OAAQ,MAAO,MAAO,OAC7DC,SAAU,CACR,CACEpmB,MAAO,cACP6J,YAAa,UACbwc,iBAAkB,OAClBC,qBAAsB,UACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,sBAAuB,EACvBC,YAAa,EACbC,MAAM,EACNxG,gBAAiB+F,EACjBU,YAAa,EACbvsB,KAAM,CAAC,GAAI,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,UAKpD8D,QAhPwD,CACxD0oB,qBAAqB,EACrBC,OAAQ,CACN3e,SAAS,GAEX4e,SAAU,CACRC,YAAa,EACbC,KAAM,UACNC,UAAW,EACXtnB,SAAU,UACVunB,SAAU,GACVC,SAAU,GACVC,aAAc,IAEhBhgB,WAAY,EACZigB,OAAQ,CACNC,MAAO,CACL,CACEG,UAAW,CACTC,cAAe,cACfE,YAAY,GAEdL,MAAO,CACLC,cAAe,KAIrBK,MAAO,CACL,CACE3f,QAAS,EACTqf,MAAO,CACLrf,SAAS,GAEXuf,UAAW,CACTC,cAAe,cACfC,WAAW,EACXzf,SAAS,EACT0f,YAAY,MAKpBpP,OAAQ,CACN7X,QAAS,CAAE2I,KAAM,EAAGC,MAAO,EAAG0Y,IAAK,GAAIzY,OAAQ,OA4M7Cue,EAAmC,CACvC3tB,KAAM,SAACurB,GACL,IACIM,EADMN,EAAOE,WAAW,MACLE,qBAAqB,EAAG,IAAK,EAAG,IAGvD,OAFAE,EAAaD,aAAa,EAAG,0BAC7BC,EAAaD,aAAa,EAAGd,EAAS,UAAW,KAC1C,CACLgB,OAAQ,CACN,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAEFC,SAAU,CACR,CACEpmB,MAAO,mBACPmgB,gBAAiB+F,EACjBrc,YAAa,UACbwc,iBAAkB,OAClBC,qBAAsB,UACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,sBAAuB,EACvBC,YAAa,EACbC,MAAM,EACNC,YAAa,EACbvsB,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,IAAK,SAK9D8D,QAAS,CACP0oB,qBAAqB,EACrBC,OAAQ,CACN3e,SAAS,GAEX4e,SAAU,CACRC,YAAa,EACbC,KAAM,UACNC,UAAW,EACXtnB,SAAU,UACVunB,SAAU,GACVC,SAAU,GACVC,aAAc,IAEhBhgB,WAAY,EACZigB,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,cAAe,GAEjBC,UAAW,CACTC,cAAe,cACfE,YAAY,KAIlBC,MAAO,CACL,CACE3f,QAAS,EACTqf,MAAO,CACLrf,SAAS,GAEXuf,UAAW,CACTC,cAAe,cACfC,WAAW,EACXzf,SAAS,EACT0f,YAAY,MAKpBpP,OAAQ,CACN7X,QAAS,CAAE2I,KAAM,EAAGC,MAAO,EAAG0Y,IAAK,GAAIzY,OAAQ,OAKrDwb,EAAOC,QAAU,CACfhnB,oBA5R0B,CAC1B7D,KAAM,SAACurB,GACL,IAAMC,EAAMD,EAAOE,WAAW,MAE1BC,EAAiBF,EAAIG,qBAAqB,IAAK,EAAG,IAAK,GAC3DD,EAAeE,aAAa,EAAG,WAC/BF,EAAeE,aAAa,EAHX,WAIjB,IAAIC,EAAeL,EAAIG,qBAAqB,EAAG,IAAK,EAAG,IAIvD,OAHAE,EAAaD,aAAa,EAAG,0BAC7BC,EAAaD,aAAa,EAAG,6BAEtB,CACLE,OAAQ,CACN,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFC,SAAU,CACR,CACEpmB,MAAO,OACP6J,YA1BW,UA2BXwc,iBA3BW,UA4BXC,qBAAsB,UACtB2B,0BAA2B,UAC3BC,sBA9BW,UA+BX3B,iBAAkB,EAClBC,iBAAkB,EAClBC,sBAAuB,EACvBC,YAAa,EACbC,MAAM,EACNxG,gBAAiB+F,EACjBU,YAAa,EACbvsB,KAAM,CAAC,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,QAKpE8D,QAAS,CACPsa,OAAQ,CACN7X,QAAS,CACP2I,KAAM,GACNC,MAAO,GACP0Y,IAAK,EACLzY,OAAQ,IAGZod,qBAAqB,EACrBE,SAAU,CACR5G,gBAAiB,OACjBgI,eAAgB,OAChBC,cAAe,OACfpB,YAAa,EACbG,SAAU,GACVF,KAAM,UACNC,UAAW,EACXtnB,SAAU,WAEZknB,OAAQ,CACNlnB,SAAU,SACVyoB,UAAW,OACXlgB,SAAS,GAEXmf,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLc,UAAW,wBACXC,UAAW,OACXC,aAAa,EACbf,cAAe,EACf7mB,QAAS,IAEX8mB,UAAW,CACTE,WAAW,EACXC,YAAY,EACZ1f,SAAS,EACTnK,MAAO,wBACP2pB,cAAe,iBAIrBG,MAAO,CACL,CACEJ,UAAW,CACTvf,SAAS,EACTnK,MAAO,yBAETwpB,MAAO,CACL5mB,QAAS,GACT0nB,UAAW,wBACXC,UAAW,aA0LrB5C,gCACAoC,4BACAC,qC,2HC5ZF/C,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.c5a26071.chunk.js","sourcesContent":["\r\nimport React from \"react\";\r\n\r\nclass PanelHeader extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={\r\n          \"panel-header \" +\r\n          (this.props.size !== undefined\r\n            ? \"panel-header-\" + this.props.size\r\n            : \"\")\r\n        }\r\n      >\r\n        {this.props.content}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PanelHeader;\r\n","import axios from \"axios\";\r\n\r\nexport const apiHandler = axios.create({ baseURL: \"/adp\" });\r\napiHandler.defaults.withCredentials = true;\r\n//axios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\n","import React from \"react\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport { CardHeader, CardTitle, CardBody, CardFooter } from \"reactstrap\";\r\nimport { apiHandler } from \"config/apiConfig\";\r\n\r\nclass DashboardSummaryCard extends React.Component {\r\n  state = {\r\n    pbv: \"\",\r\n    totalPbv: \"\",\r\n    gbv: \"\",\r\n    totalGbv: \"\",\r\n    coSponsorIncome: 0,\r\n    total_retail_profit: 0,\r\n    zone: \"\",\r\n    bv: 0,\r\n    bvTillDate: 0,\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.getPbvDetails();\r\n    this.getGbvDetails();\r\n    this.fetchCoSponsorIncome();\r\n    this.fetchRetailProfit();\r\n    this.fetchZone();\r\n    this.getBvDetails();\r\n  }\r\n\r\n  getPbvDetails = () => {\r\n    getPbv().then((response) => {\r\n      if (response && response.data && response.data.results && response.data.results.length > 0) {\r\n        this.setState({\r\n          pbv: response.data.results[0].current_month_pbv,\r\n          totalPbv: response.data.results[0].pbv,\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  getGbvDetails = () => {\r\n    getGbv().then((response) => {\r\n      if (response && response.data ) {\r\n        this.setState({\r\n          gbv: response.data.gbv,\r\n          totalGbv: response.data.totalGbv,\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  fetchCoSponsorIncome = () => {\r\n    getCoSponsorIncome().then((response) => {\r\n      if (response && response.data ) {\r\n        this.setState({\r\n          coSponsorIncome: response.data.co_sponsor_income,\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  fetchRetailProfit = () => {\r\n    getRetailProfit().then((response) => {\r\n      if (response && response.data ) {\r\n        this.setState({\r\n          total_retail_profit: response.data.total_retail_profit,\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  fetchZone = () => {\r\n    getZone().then((response) => {\r\n      if (response && response.data ) {\r\n        this.setState({\r\n          zone: response.data.name,\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  getBvDetails = () => {\r\n    getBv().then((response) => {\r\n      if (response && response.data ) {\r\n        this.setState({\r\n          bv: response.data.bv,\r\n          bvTillDate: response.data.bvTillDate,\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let { pbv, totalPbv, gbv, totalGbv, coSponsorIncome, total_retail_profit, zone, bv, bvTillDate } = this.state;\r\n    return (\r\n      <Card className=\"\">\r\n        <CardHeader>\r\n          <h5 className=\"card-category\"></h5>\r\n          <CardTitle tag=\"h4\">Summary</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div className=\"\">\r\n            <p>CURRENT MONTH REPURCHASE (PBV) : {pbv ? pbv : 0}</p>\r\n            <p>Total PBV TILL DATE : {totalPbv ? totalPbv : 0}</p>\r\n            <p>CURRENT MONTH GROUP BUSINESS VOLUME (GBV) : {gbv}</p>\r\n            <p>GBV TILL DATE : {totalGbv}</p>\r\n            <p>CURRENT MONTH BV : {bv}</p>\r\n            <p>TOTAL BV TILL DATE : {bvTillDate}</p>\r\n            <p>YOUR CURRENT ZONE : {zone}</p>\r\n            <p>PERSONAL NEW JOINING TILL DATE : own</p>\r\n            \r\n\r\n\r\n          </div>\r\n        </CardBody>\r\n        <CardFooter>\r\n          <div className=\"stats\">\r\n            <i className=\"now-ui-icons arrows-1_refresh-69\" /> Just Updated\r\n          </div>\r\n        </CardFooter>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashboardSummaryCard;\r\n\r\n\r\nfunction getPbv () {\r\n  return apiHandler.get(\"/pbv\")\r\n}\r\n\r\nfunction getGbv () {\r\n  return apiHandler.get(\"/gbv\")\r\n}\r\n\r\nfunction getCoSponsorIncome () {\r\n  return apiHandler.get(\"/co-sponsor-income\")\r\n}\r\n\r\nfunction getRetailProfit () {\r\n  return apiHandler.get(\"/retail-profit\")\r\n}\r\n\r\nfunction getZone () {\r\n  return apiHandler.get(\"/zone\")\r\n}\r\n\r\nfunction getBv () {\r\n  return apiHandler.get(\"/bv\")\r\n}\r\n","import React from \"react\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport { CardHeader, CardTitle, CardBody, CardFooter } from \"reactstrap\";\r\nimport { apiHandler } from \"config/apiConfig\";\r\n\r\nclass DashboardDefitiateCard extends React.Component {\r\n  state = {\r\n    pbv: \"\",\r\n    totalPbv: \"\",\r\n    gbv: \"\",\r\n    totalGbv: \"\",\r\n    coSponsorIncome: 0,\r\n    total_retail_profit: 0,\r\n    deficitZone: \"\",\r\n    deficitValue: 0,\r\n    showDeficitZone: true,\r\n    showSprintDeficit: false,\r\n    sprintDeficit: 0,\r\n    sprintDeficitColor: \"red\",\r\n    bv: 0,\r\n    bvTillDate: 0,\r\n    frontLines: 0,\r\n    cardOverflow: 0,\r\n    totalOnePlusCards: 0,\r\n    leadersLine1Deficit: 0,\r\n    leadersLine2Deficit: 0,\r\n    leadersLine3Deficit: 0,\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.getPbvDetails();\r\n    this.getGbvDetails();\r\n    this.getBvDetails();\r\n    this.fetchCoSponsorIncome();\r\n    this.fetchRetailProfit();\r\n    this.getDeficitZone();\r\n    this.getNoFrontLines();\r\n    this.fetchBlueCardOverflow();\r\n    this.fetchTop3frontlines();\r\n    this.fetchTotalOnePlusCards();\r\n  };\r\n\r\n  getPbvDetails = () => {\r\n    getPbv().then((response) => {\r\n      if (\r\n        response &&\r\n        response.data &&\r\n        response.data.results &&\r\n        response.data.results.length > 0\r\n      ) {\r\n        this.setState({\r\n          pbv: response.data.results[0].current_month_pbv,\r\n          totalPbv: response.data.results[0].pbv,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  getGbvDetails = () => {\r\n    getGbv().then((response) => {\r\n      if (response && response.data) {\r\n        this.setState({\r\n          gbv: response.data.gbv,\r\n          totalGbv: response.data.totalGbv,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  fetchCoSponsorIncome = () => {\r\n    getCoSponsorIncome().then((response) => {\r\n      if (response && response.data) {\r\n        this.setState({\r\n          coSponsorIncome: response.data.co_sponsor_income,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  fetchRetailProfit = () => {\r\n    getRetailProfit().then((response) => {\r\n      if (response && response.data) {\r\n        this.setState({\r\n          total_retail_profit: response.data.total_retail_profit,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  fetchDeficitZone = () => {\r\n    getRetailProfit().then((response) => {\r\n      if (response && response.data) {\r\n        this.setState({\r\n          total_retail_profit: response.data.total_retail_profit,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  getNoFrontLines = () => {\r\n    getNoFrontLines().then((response) => {\r\n      if (response && response.data && response.data.frontLines) {\r\n        this.setState({\r\n          frontLines: response.data.frontLines,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  getDeficitZone = () => {\r\n    getDeficitZone().then((response) => {\r\n      console.log(response.data);\r\n      if (response && response.data && response.data.deficitZone === false) {\r\n        this.setState({\r\n          showDeficitZone: false,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          showDeficitZone: true,\r\n          deficitZone: response.data.deficitZone,\r\n          deficitValue: response.data.deficitValue,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  getBvDetails = () => {\r\n    getBv().then((response) => {\r\n      if (response && response.data) {\r\n        this.setState({\r\n          bv: response.data.bv,\r\n          bvTillDate: response.data.bvTillDate,\r\n        });\r\n        this.updateSprintDeficit();\r\n      }\r\n    });\r\n  };\r\n\r\n  fetchBlueCardOverflow = () => {\r\n    getBlueCardOverflow().then((response) => {\r\n      if (response && response.data) {\r\n        this.setState({ cardOverflow: response.data.overflow });\r\n      }\r\n    });\r\n  };\r\n\r\n  fetchTotalOnePlusCards = () => {\r\n    getTotalOnePlusCards().then((response) => {\r\n      if (response && response.data) {\r\n        this.setState({ totalOnePlusCards: response.data.noCards });\r\n      }\r\n    });\r\n  };\r\n\r\n  fetchTop3frontlines = () => {\r\n    getTop3frontlines().then((response) => {\r\n      if (response && response.data) {\r\n        const line1Amt = response.data[0] ? response.data[0].bv : 0;\r\n        const line2Amt = response.data[1] ? response.data[1].bv : 0;\r\n        const line3Amt = response.data[2] ? response.data[2].bv : 0;\r\n        const line1Deficit = line1Amt > 40000 ? 0 : 40000 - line1Amt;\r\n        const line2Deficit =\r\n          line1Deficit === 0\r\n            ? (line1Amt * 70) / 100 - line2Amt\r\n            : 28000 - line2Amt;\r\n        const line3Deficit =\r\n          line1Deficit === 0\r\n            ? (line1Amt * 40) / 100 - line3Amt\r\n            : 16000 - line3Amt;\r\n        this.setState({\r\n          leadersLine1Deficit: line1Deficit,\r\n          leadersLine2Deficit: line2Deficit > 0 ? line2Deficit : 0,\r\n          leadersLine3Deficit: line3Deficit > 0 ? line3Deficit : 0,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  updateSprintDeficit = async () => {\r\n    const prevBv = this.state.bvTillDate - this.state.bv;\r\n    if (this.state.deficitZone === \"Business\") {\r\n      this.setState({\r\n        showSprintDeficit: true,\r\n      });\r\n      const reamingAmt = 8000 - this.state.bv;\r\n      if (reamingAmt > 0) {\r\n        this.setState({\r\n          sprintDeficit: reamingAmt + \" BV\",\r\n          sprintDeficitColor: \"red\",\r\n        });\r\n      } else {\r\n        this.setState({\r\n          sprintDeficit: \"QUALIFIED\",\r\n          sprintDeficitColor: \"green\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    let {\r\n      pbv,\r\n      totalPbv,\r\n      gbv,\r\n      totalGbv,\r\n      coSponsorIncome,\r\n      total_retail_profit,\r\n      showDeficitZone,\r\n      showSprintDeficit,\r\n      deficitZone,\r\n      deficitValue,\r\n      sprintDeficit,\r\n      sprintDeficitColor,\r\n      frontLines,\r\n      bvTillDate,\r\n      cardOverflow,\r\n      totalOnePlusCards,\r\n      leadersLine1Deficit,\r\n      leadersLine2Deficit,\r\n      leadersLine3Deficit,\r\n    } = this.state;\r\n    const displayChampionDeficit = totalGbv >= 20000 && frontLines > 2;\r\n    const championDifference = 5000 - pbv;\r\n    let championDeficit;\r\n    let champDeficitColor;\r\n    if (championDifference > 0) {\r\n      championDeficit = championDifference + \" BV\";\r\n      champDeficitColor = \"red\";\r\n    } else {\r\n      championDeficit = \"Qualified\";\r\n      champDeficitColor = \"green\";\r\n    }\r\n    return (\r\n      <Card className=\"\">\r\n        <CardHeader>\r\n          <h5 className=\"card-category\"></h5>\r\n          <CardTitle tag=\"h4\">Team Summary</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div className=\"\">\r\n            <p>PERSONAL NEW JOINING : own</p>\r\n            <p>CURRENT MONTH TEAM NEW JOINING : own + total downline</p>\r\n            <p>TEAM SIZE : own + total downline</p>\r\n            <p>FRONT LINES : {frontLines}</p>\r\n            <p>REPURCHASE PER MEMBER : CURRENT MONTH BV / TEAM SIZE</p>\r\n            <p>JOINING PER MEMBER : CURRENT MONTH NEW JOINING / TEAM SIZE</p>\r\n            <p>RETAIL PROFIT : Rs{\" \" + total_retail_profit}</p>\r\n            <p>CO SPONSOR ROYALTY : Rs {\" \" + coSponsorIncome}</p>\r\n            {showDeficitZone && (\r\n              <p>\r\n                DEFICIT FOR {deficitZone} ZONE : {deficitValue} BV\r\n              </p>\r\n            )}\r\n            {showSprintDeficit && (\r\n              <p>\r\n                SPRINT DEFICIT :\r\n                <span style={{ color: sprintDeficitColor }}>\r\n                  {\" \" + sprintDeficit} BV\r\n                </span>\r\n              </p>\r\n            )}\r\n            {displayChampionDeficit && (\r\n              <p>\r\n                DEFICIT FOR CHAMPIONS CLUB :{\" \"}\r\n                <span style={{ color: champDeficitColor }}>\r\n                  {\" \" + championDeficit}\r\n                </span>\r\n              </p>\r\n            )}\r\n            <p>\r\n              DEFICIT FOR BLUE CARD : {11000 - cardOverflow} BV{\" \"}\r\n              <span style={{ color: \"red\" }}>(3 cosponsor)</span>\r\n            </p>\r\n            <p>TOTAL 1+1 CARD THIS MONTH : {totalOnePlusCards}</p>\r\n            <p>\r\n              LEADER'S CLUB DEFICIT :{\" \"}\r\n              {`${leadersLine1Deficit} | ${leadersLine2Deficit} | ${leadersLine3Deficit}`}\r\n            </p>\r\n            <p>MEB DEFICIT : </p>\r\n            <p>INCOME FROM PULL : </p>\r\n          </div>\r\n        </CardBody>\r\n        <CardFooter>\r\n          <div className=\"stats\">\r\n            <i className=\"now-ui-icons arrows-1_refresh-69\" /> Just Updated\r\n          </div>\r\n        </CardFooter>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashboardDefitiateCard;\r\n\r\nfunction getPbv() {\r\n  return apiHandler.get(\"/pbv\");\r\n}\r\n\r\nfunction getGbv() {\r\n  return apiHandler.get(\"/gbv\");\r\n}\r\n\r\nfunction getCoSponsorIncome() {\r\n  return apiHandler.get(\"/co-sponsor-income\");\r\n}\r\n\r\nfunction getRetailProfit() {\r\n  return apiHandler.get(\"/retail-profit\");\r\n}\r\n\r\nfunction getDeficitZone() {\r\n  return apiHandler.get(\"/deficit-zone\");\r\n}\r\n\r\nfunction getNoFrontLines() {\r\n  return apiHandler.get(\"/no-front-lines\");\r\n}\r\n\r\nfunction getBv() {\r\n  return apiHandler.get(\"/bv\");\r\n}\r\n\r\nfunction getBlueCardOverflow() {\r\n  return apiHandler.get(\"/get-cards-overflow\");\r\n}\r\n\r\nfunction getTotalOnePlusCards() {\r\n  return apiHandler.get(\"/total_one_plus_cards\");\r\n}\r\n\r\nfunction getTop3frontlines() {\r\n  return apiHandler.get(\"/get-top3-frontline-bv\");\r\n}\r\n","\r\nimport React from \"react\";\r\n// react plugin used to create charts\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardFooter,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Table,\r\n  Button,\r\n  Label,\r\n  FormGroup,\r\n  Input,\r\n  UncontrolledTooltip,\r\n} from \"reactstrap\";\r\n\r\n// core components\r\nimport PanelHeader from \"components/PanelHeader/PanelHeader.js\";\r\n\r\nimport {\r\n  dashboardPanelChart,\r\n  dashboardShippedProductsChart,\r\n  dashboardAllProductsChart,\r\n  dashboard24HoursPerformanceChart,\r\n} from \"variables/charts.js\";\r\nimport DashboardSummaryCard from \"components/Molecule/DashboardSummaryCard\";\r\nimport DashboardDefitiateCard from \"components/Molecule/DashboardDefitiateCard\";\r\n\r\nclass Dashboard extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <PanelHeader\r\n          size=\"lg\"\r\n          content={\r\n            <Line\r\n              data={dashboardPanelChart.data}\r\n              options={dashboardPanelChart.options}\r\n            />\r\n          }\r\n        />\r\n        <div className=\"content\">\r\n          <Row>\r\n            <Col xs={12} md={6}>\r\n              <DashboardSummaryCard />\r\n            </Col>\r\n            <Col xs={12} md={6}>\r\n              <DashboardDefitiateCard />\r\n            </Col>\r\n            {/* <Col xs={12} md={4}>\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">2020 Sales</h5>\r\n                  <CardTitle tag=\"h4\">All products</CardTitle>\r\n                  <UncontrolledDropdown>\r\n                    <DropdownToggle\r\n                      className=\"btn-round btn-outline-default btn-icon\"\r\n                      color=\"default\"\r\n                    >\r\n                      <i className=\"now-ui-icons loader_gear\" />\r\n                    </DropdownToggle>\r\n                    <DropdownMenu right>\r\n                      <DropdownItem>Action</DropdownItem>\r\n                      <DropdownItem>Another Action</DropdownItem>\r\n                      <DropdownItem>Something else here</DropdownItem>\r\n                      <DropdownItem className=\"text-danger\">\r\n                        Remove data\r\n                      </DropdownItem>\r\n                    </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <div className=\"chart-area\">\r\n                    <Line\r\n                      data={dashboardAllProductsChart.data}\r\n                      options={dashboardAllProductsChart.options}\r\n                    />\r\n                  </div>\r\n                </CardBody>\r\n                <CardFooter>\r\n                  <div className=\"stats\">\r\n                    <i className=\"now-ui-icons arrows-1_refresh-69\" /> Just\r\n                    Updated\r\n                  </div>\r\n                </CardFooter>\r\n              </Card>\r\n            </Col> */}\r\n            {/* <Col xs={12} md={6}>\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">Email Statistics</h5>\r\n                  <CardTitle tag=\"h4\">24 Hours Performance</CardTitle>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <div className=\"chart-area\">\r\n                    <Bar\r\n                      data={dashboard24HoursPerformanceChart.data}\r\n                      options={dashboard24HoursPerformanceChart.options}\r\n                    />\r\n                  </div>\r\n                </CardBody>\r\n                <CardFooter>\r\n                  <div className=\"stats\">\r\n                    <i className=\"now-ui-icons ui-2_time-alarm\" /> Last 7 days\r\n                  </div>\r\n                </CardFooter>\r\n              </Card>\r\n            </Col> */}\r\n          </Row>\r\n          <br></br>\r\n          {/* <Row>\r\n            <Col xs={12} md={6}>\r\n              <Card className=\"card-tasks\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">Backend Development</h5>\r\n                  <CardTitle tag=\"h4\">Tasks</CardTitle>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <div className=\"table-full-width table-responsive\">\r\n                    <Table>\r\n                      <tbody>\r\n                        <tr>\r\n                          <td>\r\n                            <FormGroup check>\r\n                              <Label check>\r\n                                <Input defaultChecked type=\"checkbox\" />\r\n                                <span className=\"form-check-sign\" />\r\n                              </Label>\r\n                            </FormGroup>\r\n                          </td>\r\n                          <td className=\"text-left\">\r\n                            Sign contract for \"What are conference organizers\r\n                            afraid of?\"\r\n                          </td>\r\n                          <td className=\"td-actions text-right\">\r\n                            <Button\r\n                              className=\"btn-round btn-icon btn-icon-mini btn-neutral\"\r\n                              color=\"info\"\r\n                              id=\"tooltip731609871\"\r\n                              type=\"button\"\r\n                            >\r\n                              <i className=\"now-ui-icons ui-2_settings-90\" />\r\n                            </Button>\r\n                            <UncontrolledTooltip\r\n                              delay={0}\r\n                              target=\"tooltip731609871\"\r\n                            >\r\n                              Edit Task\r\n                            </UncontrolledTooltip>\r\n                            <Button\r\n                              className=\"btn-round btn-icon btn-icon-mini btn-neutral\"\r\n                              color=\"danger\"\r\n                              id=\"tooltip923217206\"\r\n                              type=\"button\"\r\n                            >\r\n                              <i className=\"now-ui-icons ui-1_simple-remove\" />\r\n                            </Button>\r\n                            <UncontrolledTooltip\r\n                              delay={0}\r\n                              target=\"tooltip923217206\"\r\n                            >\r\n                              Remove\r\n                            </UncontrolledTooltip>\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>\r\n                            <FormGroup check>\r\n                              <Label check>\r\n                                <Input type=\"checkbox\" />\r\n                                <span className=\"form-check-sign\" />\r\n                              </Label>\r\n                            </FormGroup>\r\n                          </td>\r\n                          <td className=\"text-left\">\r\n                            Lines From Great Russian Literature? Or E-mails From\r\n                            My Boss?\r\n                          </td>\r\n                          <td className=\"td-actions text-right\">\r\n                            <Button\r\n                              className=\"btn-round btn-icon btn-icon-mini btn-neutral\"\r\n                              color=\"info\"\r\n                              id=\"tooltip907509347\"\r\n                              type=\"button\"\r\n                            >\r\n                              <i className=\"now-ui-icons ui-2_settings-90\" />\r\n                            </Button>\r\n                            <UncontrolledTooltip\r\n                              delay={0}\r\n                              target=\"tooltip907509347\"\r\n                            >\r\n                              Edit Task\r\n                            </UncontrolledTooltip>\r\n                            <Button\r\n                              className=\"btn-round btn-icon btn-icon-mini btn-neutral\"\r\n                              color=\"danger\"\r\n                              id=\"tooltip496353037\"\r\n                              type=\"button\"\r\n                            >\r\n                              <i className=\"now-ui-icons ui-1_simple-remove\" />\r\n                            </Button>\r\n                            <UncontrolledTooltip\r\n                              delay={0}\r\n                              target=\"tooltip496353037\"\r\n                            >\r\n                              Remove\r\n                            </UncontrolledTooltip>\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>\r\n                            <FormGroup check>\r\n                              <Label check>\r\n                                <Input defaultChecked type=\"checkbox\" />\r\n                                <span className=\"form-check-sign\" />\r\n                              </Label>\r\n                            </FormGroup>\r\n                          </td>\r\n                          <td className=\"text-left\">\r\n                            Flooded: One year later, assessing what was lost and\r\n                            what was found when a ravaging rain swept through\r\n                            metro Detroit\r\n                          </td>\r\n                          <td className=\"td-actions text-right\">\r\n                            <Button\r\n                              className=\"btn-round btn-icon btn-icon-mini btn-neutral\"\r\n                              color=\"info\"\r\n                              id=\"tooltip326247652\"\r\n                              type=\"button\"\r\n                            >\r\n                              <i className=\"now-ui-icons ui-2_settings-90\" />\r\n                            </Button>\r\n                            <UncontrolledTooltip\r\n                              delay={0}\r\n                              target=\"tooltip326247652\"\r\n                            >\r\n                              Edit Task\r\n                            </UncontrolledTooltip>\r\n                            <Button\r\n                              className=\"btn-round btn-icon btn-icon-mini btn-neutral\"\r\n                              color=\"danger\"\r\n                              id=\"tooltip389516969\"\r\n                              type=\"button\"\r\n                            >\r\n                              <i className=\"now-ui-icons ui-1_simple-remove\" />\r\n                            </Button>\r\n                            <UncontrolledTooltip\r\n                              delay={0}\r\n                              target=\"tooltip389516969\"\r\n                            >\r\n                              Remove\r\n                            </UncontrolledTooltip>\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </Table>\r\n                  </div>\r\n                </CardBody>\r\n                <CardFooter>\r\n                  <hr />\r\n                  <div className=\"stats\">\r\n                    <i className=\"now-ui-icons loader_refresh spin\" /> Updated 3\r\n                    minutes ago\r\n                  </div>\r\n                </CardFooter>\r\n              </Card>\r\n            </Col>\r\n            <Col xs={12} md={6}>\r\n              <Card>\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">All Persons List</h5>\r\n                  <CardTitle tag=\"h4\">Employees Stats</CardTitle>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <Table responsive>\r\n                    <thead className=\"text-primary\">\r\n                      <tr>\r\n                        <th>Name</th>\r\n                        <th>Country</th>\r\n                        <th>City</th>\r\n                        <th className=\"text-right\">Salary</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>Dakota Rice</td>\r\n                        <td>Niger</td>\r\n                        <td>Oud-Turnhout</td>\r\n                        <td className=\"text-right\">$36,738</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Minerva Hooper</td>\r\n                        <td>Curaçao</td>\r\n                        <td>Sinaai-Waas</td>\r\n                        <td className=\"text-right\">$23,789</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Sage Rodriguez</td>\r\n                        <td>Netherlands</td>\r\n                        <td>Baileux</td>\r\n                        <td className=\"text-right\">$56,142</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Doris Greene</td>\r\n                        <td>Malawi</td>\r\n                        <td>Feldkirchen in Kärnten</td>\r\n                        <td className=\"text-right\">$63,542</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Mason Porter</td>\r\n                        <td>Chile</td>\r\n                        <td>Gloucester</td>\r\n                        <td className=\"text-right\">$78,615</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </Table>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row> */}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","\r\nconst icons = [\r\n  \"arrows-1_cloud-download-93\",\r\n  \"arrows-1_cloud-upload-94\",\r\n  \"arrows-1_minimal-down\",\r\n  \"arrows-1_minimal-left\",\r\n  \"arrows-1_minimal-right\",\r\n  \"arrows-1_minimal-up\",\r\n  \"arrows-1_refresh-69\",\r\n  \"arrows-1_share-66 \",\r\n  \"business_badge\",\r\n  \"business_bank\",\r\n  \"business_briefcase-24\",\r\n  \"business_bulb-63\",\r\n  \"business_chart-bar-32\",\r\n  \"business_chart-pie-36\",\r\n  \"business_globe\",\r\n  \"business_money-coins\",\r\n  \"clothes_tie-bow\",\r\n  \"design_app\",\r\n  \"design_bullet-list-67\",\r\n  \"design_image\",\r\n  \"design_palette\",\r\n  \"design_scissors\",\r\n  \"design_vector\",\r\n  \"design-2_html5\",\r\n  \"design-2_ruler-pencil\",\r\n  \"emoticons_satisfied\",\r\n  \"files_box\",\r\n  \"files_paper\",\r\n  \"files_single-copy-04\",\r\n  \"health_ambulance\",\r\n  \"loader_gear\",\r\n  \"loader_refresh\",\r\n  \"location_bookmark\",\r\n  \"location_compass-05\",\r\n  \"location_map-big\",\r\n  \"location_pin\",\r\n  \"location_world\",\r\n  \"media-1_album\",\r\n  \"media-1_button-pause\",\r\n  \"media-1_button-play\",\r\n  \"media-1_button-power\",\r\n  \"media-1_camera-compact\",\r\n  \"media-2_note-03\",\r\n  \"media-2_sound-wave\",\r\n  \"objects_diamond\",\r\n  \"objects_globe\",\r\n  \"objects_key-25\",\r\n  \"objects_planet\",\r\n  \"objects_spaceship\",\r\n  \"objects_support-17\",\r\n  \"objects_umbrella-13\",\r\n  \"education_agenda-bookmark\",\r\n  \"education_atom\",\r\n  \"education_glasses\",\r\n  \"education_hat\",\r\n  \"education_paper\",\r\n  \"shopping_bag-16\",\r\n  \"shopping_basket\",\r\n  \"shopping_box\",\r\n  \"shopping_cart-simple\",\r\n  \"shopping_credit-card\",\r\n  \"shopping_delivery-fast\",\r\n  \"shopping_shop\",\r\n  \"shopping_tag-content\",\r\n  \"sport_trophy\",\r\n  \"sport_user-run\",\r\n  \"tech_controller-modern\",\r\n  \"tech_headphones\",\r\n  \"tech_laptop\",\r\n  \"tech_mobile\",\r\n  \"tech_tablet\",\r\n  \"tech_tv\",\r\n  \"tech_watch-time\",\r\n  \"text_align-center\",\r\n  \"text_align-left\",\r\n  \"text_bold\",\r\n  \"text_caps-small\",\r\n  \"gestures_tap-01\",\r\n  \"transportation_air-baloon\",\r\n  \"transportation_bus-front-12\",\r\n  \"travel_info\",\r\n  \"travel_istanbul\",\r\n  \"ui-1_bell-53\",\r\n  \"ui-1_check\",\r\n  \"ui-1_calendar-60\",\r\n  \"ui-1_lock-circle-open\",\r\n  \"ui-1_send\",\r\n  \"ui-1_settings-gear-63\",\r\n  \"ui-1_simple-add\",\r\n  \"ui-1_simple-delete\",\r\n  \"ui-1_simple-remove\",\r\n  \"ui-1_zoom-bold\",\r\n  \"ui-2_chat-round\",\r\n  \"ui-2_favourite-28\",\r\n  \"ui-2_like\",\r\n  \"ui-2_settings-90\",\r\n  \"ui-2_time-alarm\",\r\n  \"ui-1_email-85\",\r\n  \"users_circle-08\",\r\n  \"users_single-02\",\r\n];\r\n\r\nexport default icons;\r\n","\r\nimport React from \"react\";\r\n// react plugin for creating notifications over the dashboard\r\nimport NotificationAlert from \"react-notification-alert\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Alert,\r\n  Card,\r\n  CardTitle,\r\n  CardBody,\r\n  CardHeader,\r\n  Row,\r\n  Col,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\n// core components\r\nimport PanelHeader from \"components/PanelHeader/PanelHeader.js\";\r\n\r\nclass Notifications extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: true,\r\n    };\r\n    this.onDismiss = this.onDismiss.bind(this);\r\n    this.notify = this.notify.bind(this);\r\n  }\r\n  onDismiss() {}\r\n  notify(place) {\r\n    var color = Math.floor(Math.random() * 5 + 1);\r\n    var type;\r\n    switch (color) {\r\n      case 1:\r\n        type = \"primary\";\r\n        break;\r\n      case 2:\r\n        type = \"success\";\r\n        break;\r\n      case 3:\r\n        type = \"danger\";\r\n        break;\r\n      case 4:\r\n        type = \"warning\";\r\n        break;\r\n      case 5:\r\n        type = \"info\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    var options = {};\r\n    options = {\r\n      place: place,\r\n      message: (\r\n        <div>\r\n          <div>\r\n            Welcome to <b>Now UI Dashboard React</b> - a beautiful freebie for\r\n            every web developer.\r\n          </div>\r\n        </div>\r\n      ),\r\n      type: type,\r\n      icon: \"now-ui-icons ui-1_bell-53\",\r\n      autoDismiss: 7,\r\n    };\r\n    this.refs.notificationAlert.notificationAlert(options);\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <PanelHeader\r\n          content={\r\n            <div className=\"header text-center\">\r\n              <h2 className=\"title\">Notifications</h2>\r\n              <p className=\"category\">\r\n                Please Checkout{\" \"}\r\n                <a\r\n                  href=\"https://github.com/creativetimofficial/react-notification-alert\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  The Full Documentation\r\n                </a>\r\n                .\r\n              </p>\r\n            </div>\r\n          }\r\n        />\r\n        <div className=\"content\">\r\n          <NotificationAlert ref=\"notificationAlert\" />\r\n          <Row>\r\n            <Col md={6} xs={12}>\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle tag=\"h4\">Notifications Style</CardTitle>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <Alert color=\"info\">\r\n                    <span>This is a plain notification</span>\r\n                  </Alert>\r\n                  <Alert\r\n                    color=\"info\"\r\n                    isOpen={this.state.visible}\r\n                    toggle={this.onDismiss}\r\n                  >\r\n                    <span>This is a notification with close button.</span>\r\n                  </Alert>\r\n                  <Alert\r\n                    color=\"info\"\r\n                    className=\"alert-with-icon\"\r\n                    isOpen={this.state.visible}\r\n                    toggle={this.onDismiss}\r\n                  >\r\n                    <span\r\n                      data-notify=\"icon\"\r\n                      className=\"now-ui-icons ui-1_bell-53\"\r\n                    />\r\n                    <span data-notify=\"message\">\r\n                      This is a notification with close button and icon.\r\n                    </span>\r\n                  </Alert>\r\n                  <Alert\r\n                    color=\"info\"\r\n                    className=\"alert-with-icon\"\r\n                    isOpen={this.state.visible}\r\n                    toggle={this.onDismiss}\r\n                  >\r\n                    <span\r\n                      data-notify=\"icon\"\r\n                      className=\"now-ui-icons ui-1_bell-53\"\r\n                    />\r\n                    <span data-notify=\"message\">\r\n                      This is a notification with close button and icon and have\r\n                      many lines. You can see that the icon and the close button\r\n                      are always vertically aligned. This is a beautiful\r\n                      notification. So you don't have to worry about the style.\r\n                    </span>\r\n                  </Alert>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n            <Col md={6} xs={12}>\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle tag=\"h4\">Notification states</CardTitle>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <Alert\r\n                    color=\"primary\"\r\n                    isOpen={this.state.visible}\r\n                    toggle={this.onDismiss}\r\n                  >\r\n                    <span>\r\n                      <b> Primary - </b> This is a regular notification made\r\n                      with color=\"primary\"\r\n                    </span>\r\n                  </Alert>\r\n                  <Alert\r\n                    color=\"info\"\r\n                    isOpen={this.state.visible}\r\n                    toggle={this.onDismiss}\r\n                  >\r\n                    <span>\r\n                      <b> Info - </b> This is a regular notification made with\r\n                      color=\"info\"\r\n                    </span>\r\n                  </Alert>\r\n                  <Alert\r\n                    color=\"success\"\r\n                    isOpen={this.state.visible}\r\n                    toggle={this.onDismiss}\r\n                  >\r\n                    <span>\r\n                      <b> Success - </b> This is a regular notification made\r\n                      with color=\"success\"\r\n                    </span>\r\n                  </Alert>\r\n                  <Alert\r\n                    color=\"warning\"\r\n                    isOpen={this.state.visible}\r\n                    toggle={this.onDismiss}\r\n                  >\r\n                    <span>\r\n                      <b> Warning - </b> This is a regular notification made\r\n                      with color=\"warning\"\r\n                    </span>\r\n                  </Alert>\r\n                  <Alert\r\n                    color=\"danger\"\r\n                    isOpen={this.state.visible}\r\n                    toggle={this.onDismiss}\r\n                  >\r\n                    <span>\r\n                      <b> Danger - </b> This is a regular notification made with\r\n                      color=\"danger\"\r\n                    </span>\r\n                  </Alert>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n            <Col md={12} xs={12}>\r\n              <Card>\r\n                <CardBody>\r\n                  <div className=\"places-buttons\">\r\n                    <Row>\r\n                      <Col md={6} className=\"ml-auto mr-auto text-center\">\r\n                        <CardTitle tag=\"h4\">\r\n                          Notifications Places\r\n                          <p className=\"category\">\r\n                            Click to view notifications\r\n                          </p>\r\n                        </CardTitle>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col lg={8} xs={12} className=\"ml-auto mr-auto\">\r\n                        <Row>\r\n                          <Col md={4} xs={12}>\r\n                            <Button\r\n                              color=\"primary\"\r\n                              block\r\n                              onClick={() => this.notify(\"tl\")}\r\n                            >\r\n                              Top Left\r\n                            </Button>\r\n                          </Col>\r\n                          <Col md={4} xs={12}>\r\n                            <Button\r\n                              color=\"primary\"\r\n                              block\r\n                              onClick={() => this.notify(\"tc\")}\r\n                            >\r\n                              Top Center\r\n                            </Button>\r\n                          </Col>\r\n                          <Col md={4} xs={12}>\r\n                            <Button\r\n                              color=\"primary\"\r\n                              block\r\n                              onClick={() => this.notify(\"tr\")}\r\n                            >\r\n                              Top Right\r\n                            </Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col lg={8} xs={12} className=\"ml-auto mr-auto\">\r\n                        <Row>\r\n                          <Col md={4} xs={12}>\r\n                            <Button\r\n                              color=\"primary\"\r\n                              block\r\n                              onClick={() => this.notify(\"bl\")}\r\n                            >\r\n                              Bottom Left\r\n                            </Button>\r\n                          </Col>\r\n                          <Col md={4} xs={12}>\r\n                            <Button\r\n                              color=\"primary\"\r\n                              block\r\n                              onClick={() => this.notify(\"bc\")}\r\n                            >\r\n                              Bottom Center\r\n                            </Button>\r\n                          </Col>\r\n                          <Col md={4} xs={12}>\r\n                            <Button\r\n                              color=\"primary\"\r\n                              block\r\n                              onClick={() => this.notify(\"br\")}\r\n                            >\r\n                              Bottom Right\r\n                            </Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Notifications;\r\n","\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\n\r\n// core components\r\nimport PanelHeader from \"components/PanelHeader/PanelHeader.js\";\r\n\r\nimport icons from \"variables/icons\";\r\n\r\nclass Icons extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <PanelHeader size=\"sm\" />\r\n        <div className=\"content\">\r\n          <Row>\r\n            <Col md={12}>\r\n              <Card>\r\n                <CardHeader>\r\n                  <h5 className=\"title\">100 Awesome Nucleo Icons</h5>\r\n                  <p className=\"category\">\r\n                    Handcrafted by our friends from{\" \"}\r\n                    <a href=\"https://nucleoapp.com/?ref=1712\">NucleoApp</a>\r\n                  </p>\r\n                </CardHeader>\r\n                <CardBody className=\"all-icons\">\r\n                  <Row>\r\n                    {icons.map((prop, key) => {\r\n                      return (\r\n                        <Col\r\n                          lg={2}\r\n                          md={3}\r\n                          sm={4}\r\n                          xs={6}\r\n                          className=\"font-icon-list\"\r\n                          key={key}\r\n                        >\r\n                          <div className=\"font-icon-detail\">\r\n                            <i className={\"now-ui-icons \" + prop} />\r\n                            <p>{prop}</p>\r\n                          </div>\r\n                        </Col>\r\n                      );\r\n                    })}\r\n                  </Row>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Icons;\r\n","\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\n\r\n// core components\r\nimport PanelHeader from \"components/PanelHeader/PanelHeader.js\";\r\n\r\nclass Typography extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <PanelHeader size=\"sm\" />\r\n        <div className=\"content\">\r\n          <Row>\r\n            <Col md={12}>\r\n              <Card>\r\n                <CardHeader>\r\n                  <h5 className=\"title\">Now Ui Table Heading</h5>\r\n                  <p className=\"category\">\r\n                    Created using Montserrat Font Family\r\n                  </p>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <div className=\"typography-line\">\r\n                    <h1>\r\n                      <span>Header 1</span>The Life of Now Ui Dashboard{\" \"}\r\n                    </h1>\r\n                  </div>\r\n                  <div className=\"typography-line\">\r\n                    <h2>\r\n                      <span>Header 2</span>The Life of Now Ui Dashboard{\" \"}\r\n                    </h2>\r\n                  </div>\r\n                  <div className=\"typography-line\">\r\n                    <h3>\r\n                      <span>Header 3</span>The Life of Now Ui Dashboard{\" \"}\r\n                    </h3>\r\n                  </div>\r\n                  <div className=\"typography-line\">\r\n                    <h4>\r\n                      <span>Header 4</span>The Life of Now Ui Dashboard{\" \"}\r\n                    </h4>\r\n                  </div>\r\n                  <div className=\"typography-line\">\r\n                    <h5>\r\n                      <span>Header 5</span>The Life of Now Ui Dashboard{\" \"}\r\n                    </h5>\r\n                  </div>\r\n                  <div className=\"typography-line\">\r\n                    <h6>\r\n                      <span>Header 6</span>The Life of Now Ui Dashboard{\" \"}\r\n                    </h6>\r\n                  </div>\r\n                  <div className=\"typography-line\">\r\n                    <p>\r\n                      <span>Paragraph</span>I will be the leader of a company\r\n                      that ends up being worth billions of dollars, because I\r\n                      got the answers. I understand culture. I am the nucleus. I\r\n                      think that’s a responsibility that I have, to push\r\n                      possibilities, to show people, this is the level that\r\n                      things could be at.\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"typography-line\">\r\n                    <span>Quote</span>\r\n                    <blockquote>\r\n                      <p className=\"blockquote blockquote-primary\">\r\n                        \"I will be the leader of a company that ends up being\r\n                        worth billions of dollars, because I got the answers. I\r\n                        understand culture. I am the nucleus. I think that’s a\r\n                        responsibility that I have, to push possibilities, to\r\n                        show people, this is the level that things could be at.\"\r\n                        <br />\r\n                        <br />\r\n                        <small>- Noaa</small>\r\n                      </p>\r\n                    </blockquote>\r\n                  </div>\r\n\r\n                  <div className=\"typography-line\">\r\n                    <span>Muted Text</span>\r\n                    <p className=\"text-muted\">\r\n                      I will be the leader of a company that ends up being worth\r\n                      billions of dollars, because I got the answers...\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"typography-line\">\r\n                    <span>Primary Text</span>\r\n                    <p className=\"text-primary\">\r\n                      I will be the leader of a company that ends up being worth\r\n                      billions of dollars, because I got the answers...\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"typography-line\">\r\n                    <span>Info Text</span>\r\n                    <p className=\"text-info\">\r\n                      I will be the leader of a company that ends up being worth\r\n                      billions of dollars, because I got the answers...{\" \"}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"typography-line\">\r\n                    <span>Success Text</span>\r\n                    <p className=\"text-success\">\r\n                      I will be the leader of a company that ends up being worth\r\n                      billions of dollars, because I got the answers...{\" \"}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"typography-line\">\r\n                    <span>Warning Text</span>\r\n                    <p className=\"text-warning\">\r\n                      I will be the leader of a company that ends up being worth\r\n                      billions of dollars, because I got the answers...\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"typography-line\">\r\n                    <span>Danger Text</span>\r\n                    <p className=\"text-danger\">\r\n                      I will be the leader of a company that ends up being worth\r\n                      billions of dollars, because I got the answers...{\" \"}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"typography-line\">\r\n                    <h2>\r\n                      <span>Small Tag</span>\r\n                      Header with small subtitle <br />\r\n                      <small>Use \"small\" tag for the headers</small>\r\n                    </h2>\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Typography;\r\n","\r\n// ##############################\r\n// // // tasks list for Tasks card in Dashboard view\r\n// #############################\r\n\r\nconst tasks = [\r\n  {\r\n    checked: true,\r\n    text: 'Sign contract for \"What are conference organizers afraid of?\"',\r\n  },\r\n  {\r\n    checked: false,\r\n    text: \"Lines From Great Russian Literature? Or E-mails From My Boss?\",\r\n  },\r\n  {\r\n    checked: true,\r\n    text:\r\n      \"Flooded: One year later, assessing what was lost and what was found when a ravaging rain swept through metro Detroit\",\r\n  },\r\n];\r\n\r\n// ##############################\r\n// // // table head data and table body data for Tables view\r\n// #############################\r\n\r\nconst thead = [\"Name\", \"Country\", \"City\", \"Salary\"];\r\nconst tbody = [\r\n  {\r\n    className: \"table-success\",\r\n    data: [\"Dakota Rice\", \"Niger\", \"Oud-Turnhout\", \"$36,738\"],\r\n  },\r\n  {\r\n    className: \"\",\r\n    data: [\"Minerva Hooper\", \"Curaçao\", \"Sinaai-Waas\", \"$23,789\"],\r\n  },\r\n  {\r\n    className: \"table-info\",\r\n    data: [\"Sage Rodriguez\", \"Netherlands\", \"Baileux\", \"$56,142\"],\r\n  },\r\n  {\r\n    className: \"\",\r\n    data: [\"Philip Chaney\", \"Korea, South\", \"Overland Park\", \"$38,735\"],\r\n  },\r\n  {\r\n    className: \"table-danger\",\r\n    data: [\"Doris Greene\", \"Malawi\", \"Feldkirchen in Kärnten\", \"$63,542\"],\r\n  },\r\n  { className: \"\", data: [\"Mason Porter\", \"Chile\", \"Gloucester\", \"$78,615\"] },\r\n  {\r\n    className: \"table-warning\",\r\n    data: [\"Jon Porter\", \"Portugal\", \"Gloucester\", \"$98,615\"],\r\n  },\r\n];\r\n\r\n// tasks list for Tasks card in Dashboard view\r\n// data for <thead> of table in TableList view\r\n// data for <tbody> of table in TableList view\r\nexport { tasks, thead, tbody };\r\n","\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardTitle,\r\n  Table,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\n\r\n// core components\r\nimport PanelHeader from \"components/PanelHeader/PanelHeader.js\";\r\n\r\nimport { thead, tbody } from \"variables/general\";\r\n\r\nclass RegularTables extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <PanelHeader size=\"sm\" />\r\n        <div className=\"content\">\r\n          <Row>\r\n            <Col xs={12}>\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle tag=\"h4\">Simple Table</CardTitle>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <Table responsive>\r\n                    <thead className=\"text-primary\">\r\n                      <tr>\r\n                        {thead.map((prop, key) => {\r\n                          if (key === thead.length - 1)\r\n                            return (\r\n                              <th key={key} className=\"text-right\">\r\n                                {prop}\r\n                              </th>\r\n                            );\r\n                          return <th key={key}>{prop}</th>;\r\n                        })}\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {tbody.map((prop, key) => {\r\n                        return (\r\n                          <tr key={key}>\r\n                            {prop.data.map((prop, key) => {\r\n                              if (key === thead.length - 1)\r\n                                return (\r\n                                  <td key={key} className=\"text-right\">\r\n                                    {prop}\r\n                                  </td>\r\n                                );\r\n                              return <td key={key}>{prop}</td>;\r\n                            })}\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                    </tbody>\r\n                  </Table>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Card className=\"card-plain\">\r\n                <CardHeader>\r\n                  <CardTitle tag=\"h4\">Table on Plain Background</CardTitle>\r\n                  <p className=\"category\"> Here is a subtitle for this table</p>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <Table responsive>\r\n                    <thead className=\"text-primary\">\r\n                      <tr>\r\n                        {thead.map((prop, key) => {\r\n                          if (key === thead.length - 1)\r\n                            return (\r\n                              <th key={key} className=\"text-right\">\r\n                                {prop}\r\n                              </th>\r\n                            );\r\n                          return <th key={key}>{prop}</th>;\r\n                        })}\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {tbody.map((prop, key) => {\r\n                        return (\r\n                          <tr key={key}>\r\n                            {prop.data.map((prop, key) => {\r\n                              if (key === thead.length - 1)\r\n                                return (\r\n                                  <td key={key} className=\"text-right\">\r\n                                    {prop}\r\n                                  </td>\r\n                                );\r\n                              return <td key={key}>{prop}</td>;\r\n                            })}\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                    </tbody>\r\n                  </Table>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegularTables;\r\n","\r\nimport React from \"react\";\r\n// react plugin used to create google maps\r\nimport {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker,\r\n} from \"react-google-maps\";\r\n\r\n// reactstrap components\r\nimport { Row, Col, Card, CardHeader, CardBody } from \"reactstrap\";\r\n\r\n// core components\r\nimport PanelHeader from \"components/PanelHeader/PanelHeader.js\";\r\n\r\nconst MapWrapper = withScriptjs(\r\n  withGoogleMap((props) => (\r\n    <GoogleMap\r\n      defaultZoom={13}\r\n      defaultCenter={{ lat: 40.748817, lng: -73.985428 }}\r\n      defaultOptions={{\r\n        scrollwheel: false,\r\n        styles: [\r\n          {\r\n            featureType: \"water\",\r\n            elementType: \"geometry\",\r\n            stylers: [{ color: \"#e9e9e9\" }, { lightness: 17 }],\r\n          },\r\n          {\r\n            featureType: \"landscape\",\r\n            elementType: \"geometry\",\r\n            stylers: [{ color: \"#f5f5f5\" }, { lightness: 20 }],\r\n          },\r\n          {\r\n            featureType: \"road.highway\",\r\n            elementType: \"geometry.fill\",\r\n            stylers: [{ color: \"#ffffff\" }, { lightness: 17 }],\r\n          },\r\n          {\r\n            featureType: \"road.highway\",\r\n            elementType: \"geometry.stroke\",\r\n            stylers: [{ color: \"#ffffff\" }, { lightness: 29 }, { weight: 0.2 }],\r\n          },\r\n          {\r\n            featureType: \"road.arterial\",\r\n            elementType: \"geometry\",\r\n            stylers: [{ color: \"#ffffff\" }, { lightness: 18 }],\r\n          },\r\n          {\r\n            featureType: \"road.local\",\r\n            elementType: \"geometry\",\r\n            stylers: [{ color: \"#ffffff\" }, { lightness: 16 }],\r\n          },\r\n          {\r\n            featureType: \"poi\",\r\n            elementType: \"geometry\",\r\n            stylers: [{ color: \"#f5f5f5\" }, { lightness: 21 }],\r\n          },\r\n          {\r\n            featureType: \"poi.park\",\r\n            elementType: \"geometry\",\r\n            stylers: [{ color: \"#dedede\" }, { lightness: 21 }],\r\n          },\r\n          {\r\n            elementType: \"labels.text.stroke\",\r\n            stylers: [\r\n              { visibility: \"on\" },\r\n              { color: \"#ffffff\" },\r\n              { lightness: 16 },\r\n            ],\r\n          },\r\n          {\r\n            elementType: \"labels.text.fill\",\r\n            stylers: [\r\n              { saturation: 36 },\r\n              { color: \"#333333\" },\r\n              { lightness: 40 },\r\n            ],\r\n          },\r\n          { elementType: \"labels.icon\", stylers: [{ visibility: \"off\" }] },\r\n          {\r\n            featureType: \"transit\",\r\n            elementType: \"geometry\",\r\n            stylers: [{ color: \"#f2f2f2\" }, { lightness: 19 }],\r\n          },\r\n          {\r\n            featureType: \"administrative\",\r\n            elementType: \"geometry.fill\",\r\n            stylers: [{ color: \"#fefefe\" }, { lightness: 20 }],\r\n          },\r\n          {\r\n            featureType: \"administrative\",\r\n            elementType: \"geometry.stroke\",\r\n            stylers: [{ color: \"#fefefe\" }, { lightness: 17 }, { weight: 1.2 }],\r\n          },\r\n        ],\r\n      }}\r\n    >\r\n      <Marker position={{ lat: 40.748817, lng: -73.985428 }} />\r\n    </GoogleMap>\r\n  ))\r\n);\r\n\r\nclass FullScreenMap extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <PanelHeader size=\"sm\" />\r\n        <div className=\"content\">\r\n          <Row>\r\n            <Col xs={12}>\r\n              <Card>\r\n                <CardHeader>Google Maps</CardHeader>\r\n                <CardBody>\r\n                  <div\r\n                    id=\"map\"\r\n                    className=\"map\"\r\n                    style={{ position: \"relative\", overflow: \"hidden\" }}\r\n                  >\r\n                    <MapWrapper\r\n                      googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=YOUR_KEY_HERE\"\r\n                      loadingElement={<div style={{ height: `100%` }} />}\r\n                      containerElement={<div style={{ height: `100%` }} />}\r\n                      mapElement={<div style={{ height: `100%` }} />}\r\n                    />\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FullScreenMap;\r\n","\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\n\r\n// core components\r\nimport PanelHeader from \"components/PanelHeader/PanelHeader.js\";\r\n\r\nclass User extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <PanelHeader size=\"sm\" />\r\n        <div className=\"content\">\r\n          <Row>\r\n            <Col md=\"8\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <h5 className=\"title\">Edit Profile</h5>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <Form>\r\n                    <Row>\r\n                      <Col className=\"pr-1\" md=\"5\">\r\n                        <FormGroup>\r\n                          <label>Company (disabled)</label>\r\n                          <Input\r\n                            defaultValue=\"Creative Code Inc.\"\r\n                            disabled\r\n                            placeholder=\"Company\"\r\n                            type=\"text\"\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col className=\"px-1\" md=\"3\">\r\n                        <FormGroup>\r\n                          <label>Username</label>\r\n                          <Input\r\n                            defaultValue=\"michael23\"\r\n                            placeholder=\"Username\"\r\n                            type=\"text\"\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col className=\"pl-1\" md=\"4\">\r\n                        <FormGroup>\r\n                          <label htmlFor=\"exampleInputEmail1\">\r\n                            Email address\r\n                          </label>\r\n                          <Input placeholder=\"Email\" type=\"email\" />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col className=\"pr-1\" md=\"6\">\r\n                        <FormGroup>\r\n                          <label>First Name</label>\r\n                          <Input\r\n                            defaultValue=\"Mike\"\r\n                            placeholder=\"Company\"\r\n                            type=\"text\"\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col className=\"pl-1\" md=\"6\">\r\n                        <FormGroup>\r\n                          <label>Last Name</label>\r\n                          <Input\r\n                            defaultValue=\"Andrew\"\r\n                            placeholder=\"Last Name\"\r\n                            type=\"text\"\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <FormGroup>\r\n                          <label>Address</label>\r\n                          <Input\r\n                            defaultValue=\"Bld Mihail Kogalniceanu, nr. 8 Bl 1, Sc 1, Ap 09\"\r\n                            placeholder=\"Home Address\"\r\n                            type=\"text\"\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col className=\"pr-1\" md=\"4\">\r\n                        <FormGroup>\r\n                          <label>City</label>\r\n                          <Input\r\n                            defaultValue=\"Mike\"\r\n                            placeholder=\"City\"\r\n                            type=\"text\"\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col className=\"px-1\" md=\"4\">\r\n                        <FormGroup>\r\n                          <label>Country</label>\r\n                          <Input\r\n                            defaultValue=\"Andrew\"\r\n                            placeholder=\"Country\"\r\n                            type=\"text\"\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col className=\"pl-1\" md=\"4\">\r\n                        <FormGroup>\r\n                          <label>Postal Code</label>\r\n                          <Input placeholder=\"ZIP Code\" type=\"number\" />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <FormGroup>\r\n                          <label>About Me</label>\r\n                          <Input\r\n                            cols=\"80\"\r\n                            defaultValue=\"Lamborghini Mercy, Your chick she so thirsty, I'm in\r\n                            that two seat Lambo.\"\r\n                            placeholder=\"Here can be your description\"\r\n                            rows=\"4\"\r\n                            type=\"textarea\"\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n            <Col md=\"4\">\r\n              <Card className=\"card-user\">\r\n                <div className=\"image\">\r\n                  <img alt=\"...\" src={require(\"assets/img/bg5.jpg\")} />\r\n                </div>\r\n                <CardBody>\r\n                  <div className=\"author\">\r\n                    <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\r\n                      <img\r\n                        alt=\"...\"\r\n                        className=\"avatar border-gray\"\r\n                        src={require(\"assets/img/mike.jpg\")}\r\n                      />\r\n                      <h5 className=\"title\">Mike Andrew</h5>\r\n                    </a>\r\n                    <p className=\"description\">michael24</p>\r\n                  </div>\r\n                  <p className=\"description text-center\">\r\n                    \"Lamborghini Mercy <br />\r\n                    Your chick she so thirsty <br />\r\n                    I'm in that two seat Lambo\"\r\n                  </p>\r\n                </CardBody>\r\n                <hr />\r\n                <div className=\"button-container\">\r\n                  <Button\r\n                    className=\"btn-neutral btn-icon btn-round\"\r\n                    color=\"default\"\r\n                    href=\"#pablo\"\r\n                    onClick={(e) => e.preventDefault()}\r\n                    size=\"lg\"\r\n                  >\r\n                    <i className=\"fab fa-facebook-f\" />\r\n                  </Button>\r\n                  <Button\r\n                    className=\"btn-neutral btn-icon btn-round\"\r\n                    color=\"default\"\r\n                    href=\"#pablo\"\r\n                    onClick={(e) => e.preventDefault()}\r\n                    size=\"lg\"\r\n                  >\r\n                    <i className=\"fab fa-twitter\" />\r\n                  </Button>\r\n                  <Button\r\n                    className=\"btn-neutral btn-icon btn-round\"\r\n                    color=\"default\"\r\n                    href=\"#pablo\"\r\n                    onClick={(e) => e.preventDefault()}\r\n                    size=\"lg\"\r\n                  >\r\n                    <i className=\"fab fa-google-plus-g\" />\r\n                  </Button>\r\n                </div>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport { Input, FormGroup } from \"reactstrap\";\r\n\r\n\r\n\r\nfunction TextInput (props) {\r\n    return (\r\n        <>\r\n            <FormGroup>\r\n                {props.showLabel && <label className={props.className}>{props.label}</label>}\r\n                <Input\r\n                    {...props}\r\n                    type={props.type ? props.type : \"text\"}\r\n                    placeholder={props.label}\r\n                />\r\n            </FormGroup>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default TextInput;","import React from \"react\";\r\nimport { Input, FormGroup } from \"reactstrap\";\r\nimport Select from \"react-select\";\r\n\r\nconst style = {\r\n    select: {\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction SelectInput(props) {\r\n  return (\r\n    <>\r\n      <FormGroup>\r\n      {props.showLabel && <label className={props.className}>{props.label}</label>}\r\n        <Select\r\n            classNamePrefix=\"form-control\"\r\n          {...props}\r\n        />\r\n      </FormGroup>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SelectInput;\r\n","import {\r\n  CREATE_ADP_INITIATE,\r\n  CREATE_ADP_FAILED,\r\n  CREATE_ADP_SUCCESS,\r\n  UPDATE_ADP_DATA,\r\n} from \"../constants/adp\";\r\nimport { apiHandler } from \"config/apiConfig\";\r\n\r\nexport const createAdpInitiate = data => {\r\n  return {\r\n    type: CREATE_ADP_INITIATE,\r\n  };\r\n};\r\n\r\nexport const createAdpSuccess = data => {\r\n  return {\r\n    type: CREATE_ADP_SUCCESS,\r\n    payload: data\r\n  };\r\n};\r\n\r\nexport const createAdpFailed = data => {\r\n  return {\r\n    type: CREATE_ADP_FAILED,\r\n  };\r\n};\r\n\r\nexport const updateAdpData = data => {\r\n  return {\r\n    type: UPDATE_ADP_DATA,\r\n    payload: data,\r\n  };\r\n};\r\n\r\n// export const fetchWalletAction = () => {\r\n//   return dispatch => {\r\n//     dispatch(fetchWalletInitiate());\r\n//     return walletApi()\r\n//       .then(response => {\r\n//           if (response) {\r\n//               dispatch(fetchWalletSuccess(response));\r\n//           } else {\r\n//               dispatch(fetchWalletFailed());\r\n//           }\r\n//       })\r\n//       .catch(error => {\r\n//         dispatch(fetchWalletFailed());\r\n//       });\r\n//   };\r\n// };\r\n\r\n\r\n// function walletApi() {\r\n//   return apiHandler.get(`/wallet`).catch((err) => {\r\n//       console.log(err)\r\n//   });\r\n// }\r\n\r\n","export const CREATE_ADP_INITIATE = \"CREATE_ADP_INITIATE\";\r\nexport const CREATE_ADP_FAILED = \"CREATE_ADP_FAILED\";\r\nexport const CREATE_ADP_SUCCESS = \"CREATE_ADP_SUCCESS\";\r\nexport const UPDATE_ADP_DATA = \"UPDATE_ADP_DATA\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Formik } from \"formik\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport TextInput from \"components/Input/TextInput\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport SelectInput from \"components/Input/SelectInput\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { updateAdpData } from \"../../redux/actions/addAdp\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { apiHandler } from \"config/apiConfig\";\r\n\r\nvar ifsc = require(\"ifsc\");\r\n\r\nconst styles = {\r\n  wrapper: {\r\n    padding: \"1rem\",\r\n  },\r\n};\r\n\r\nconst Wrapper = styled(\"div\")(styles.wrapper);\r\n\r\nconst genderOption = [\r\n  {\r\n    value: \"Male\",\r\n    label: \"Male\",\r\n  },\r\n  {\r\n    value: \"Female\",\r\n    label: \"Female\",\r\n  },\r\n  {\r\n    value: \"Others\",\r\n    label: \"Others\",\r\n  },\r\n];\r\nclass AddAdpForm extends React.Component {\r\n  state = {};\r\n\r\n  render() {\r\n    let { updateAdpData, toggleBuyProducts } = this.props;\r\n    let adpData = {\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      sponsor_id: \"\",\r\n      sponsor_name: \"\",\r\n      co_sponsor_id: \"\",\r\n      co_sponsor_name: \"\",\r\n      dob: \"\",\r\n      gender: \"\",\r\n      father_firstname: \"\",\r\n      father_lastname: \"\",\r\n      nominee_firstname: \"\",\r\n      nominee_lastname: \"\",\r\n      nominee_gender: \"\",\r\n      nominee_dob: \"\",\r\n      relation: \"\",\r\n      pan: \"\",\r\n      email: \"\",\r\n      mobile: \"\",\r\n      address_correspondence: \"\",\r\n      landmark: \"\",\r\n      district: \"\",\r\n      state: \"\",\r\n      postal_code: null,\r\n      id_proof: \"\",\r\n      proof_address: \"\",\r\n      bank_name: \"\",\r\n      account_no: \"\",\r\n      branch: \"\",\r\n      ifs_code: \"\",\r\n      account_type: \"\",\r\n    };\r\n    return (\r\n      <Wrapper>\r\n        <Formik\r\n          initialValues={adpData}\r\n          validationSchema={Yup.object().shape({\r\n            firstname: Yup.string().required(\"Required\"),\r\n            sponsor_id: Yup.number()\r\n              .positive(\"please enter number greater than 0\")\r\n              .required(\"Required\"),\r\n            co_sponsor_id: Yup.number()\r\n              .positive(\"please enter number greater than 0\")\r\n              .required(\"Required\"),\r\n            mobile: Yup.number()\r\n              .required(\"Required\")\r\n              .test(\r\n                \"len\",\r\n                \"Must be exactly 10 digits\",\r\n                (val) => val && val.toString().length === 10\r\n              ),\r\n            email: Yup.string().email(\"Invalid email address\"),\r\n            dob: Yup.date().nullable(),\r\n          })}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            setTimeout(() => {\r\n              //   alert(JSON.stringify(values, null, 2));\r\n              //   console.log(values);\r\n              setSubmitting(false);\r\n              //   this.props.history.push(\"/buy-product\");\r\n              updateAdpData(values);\r\n              toggleBuyProducts();\r\n            }, 400);\r\n          }}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            getFieldProps,\r\n            setFieldValue,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isSubmitting,\r\n            /* and other goodies */\r\n          }) => (\r\n            <form onSubmit={handleSubmit} className=\"form-group\">\r\n              <div class=\"row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 row-cols-xl-5\">\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Sponsor ID\"\r\n                    id=\"sponsor_id\"\r\n                    type=\"number\"\r\n                    value={values.sponsor_id}\r\n                    onChange={handleChange}\r\n                    onBlur={(e) => {\r\n                      // handleBlur(e); this.blurHandle(e);\r\n                      getAdpName(e.target.value)\r\n                        .catch((err) => {\r\n                          if (err.response.status === 404) {\r\n                            alert(\"Please check Sponsor ID\");\r\n                            setFieldValue(\"sponsor_id\", \"\");\r\n                          }\r\n                        })\r\n                        .then((response) => {\r\n                          response &&\r\n                            response.data &&\r\n                            setFieldValue(\"sponsor_name\", response.data.result);\r\n                        });\r\n                    }}\r\n                    className={\r\n                      errors.sponsor_id && touched.sponsor_id\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.sponsor_id && touched.sponsor_id && (\r\n                            <div className=\"input-feedback\">{errors.sponsor_id}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Sponsor Name\"\r\n                    id=\"sponsor_name\"\r\n                    type=\"text\"\r\n                    value={values.sponsor_name}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    disabled\r\n                    className={\r\n                      errors.sponsor_name && touched.sponsor_name\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.sponsor_name && touched.sponsor_name && (\r\n                            <div className=\"input-feedback\">{errors.sponsor_name}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Cosponsor ID\"\r\n                    id=\"co_sponsor_id\"\r\n                    type=\"number\"\r\n                    value={values.co_sponsor_id}\r\n                    onChange={handleChange}\r\n                    onBlur={(e) => {\r\n                      // handleBlur(e); this.blurHandle(e);\r\n                      getAdpName(e.target.value)\r\n                        .catch((err) => {\r\n                          if (err.response.status === 404) {\r\n                            alert(\"Please check Co Sponsor ID\");\r\n                            setFieldValue(\"co_sponsor_id\", \"\");\r\n                          }\r\n                        })\r\n                        .then((response) => {\r\n                          response &&\r\n                            response.data &&\r\n                            setFieldValue(\r\n                              \"co_sponsor_name\",\r\n                              response.data.result\r\n                            );\r\n                        });\r\n                    }}\r\n                    className={\r\n                      errors.co_sponsor_id && touched.co_sponsor_id\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.co_sponsor_id && touched.co_sponsor_id && (\r\n                            <div className=\"input-feedback\">{errors.co_sponsor_id}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Co Sponsor Name\"\r\n                    id=\"co_sponsor_name\"\r\n                    type=\"text\"\r\n                    value={values.co_sponsor_name}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    disabled\r\n                    className={\r\n                      errors.co_sponsor_name && touched.co_sponsor_name\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.co_sponsor_name && touched.co_sponsor_name && (\r\n                            <div className=\"input-feedback\">{errors.co_sponsor_name}</div>\r\n                        )} */}\r\n                </div>\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"First Name\"\r\n                    id=\"firstname\"\r\n                    type=\"text\"\r\n                    value={values.firstname}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.firstname && touched.firstname\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.firstname && touched.firstname && (\r\n                            <div className=\"input-feedback\">{errors.firstname}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Last Name\"\r\n                    id=\"lastname\"\r\n                    type=\"text\"\r\n                    value={values.lastname}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.lastname && touched.lastname\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.lastname && touched.lastname && (\r\n                            <div className=\"input-feedback\">{errors.lastname}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  {/* <KeyboardDatePicker\r\n                            id=\"dob\"\r\n                            clearable\r\n                            variant=\"dialog\"\r\n                            format=\"MM/dd/yyyy\"\r\n                            \r\n                            placeholder=\"DOB\"\r\n                            value={values.dob}\r\n                            onChange={value => setFieldValue(\"dob\", value)}\r\n                            helperText={\"MM/dd/yyyy\"}\r\n                            disableFuture\r\n                            onBlur={handleBlur}\r\n                            className={\r\n                            errors.dob && touched.dob\r\n                                ? \"text-input error\"\r\n                                : \"text-input\"\r\n                            }\r\n                            KeyboardButtonProps={{\r\n                            \"aria-label\": \"change date\"\r\n                            }}\r\n                        /> */}\r\n                  <TextInput\r\n                    label=\"DOB\"\r\n                    id=\"dob\"\r\n                    type=\"date\"\r\n                    value={values.dob}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.dob && touched.dob\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.dob && touched.dob && (\r\n                            <div className=\"input-feedback\">{errors.dob}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <SelectInput\r\n                    label=\"Gender\"\r\n                    id=\"gender\"\r\n                    value={values.gender}\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    {...getFieldProps(\"gender\")}\r\n                    className={\r\n                      errors.gender && touched.gender\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    options={genderOption}\r\n                    showLabel\r\n                  />\r\n\r\n                  {/* {errors.gender && touched.gender && (\r\n                            <div className=\"input-feedback\">{errors.gender}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Father First Name\"\r\n                    id=\"father_firstname\"\r\n                    type=\"text\"\r\n                    value={values.father_firstname}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.father_firstname && touched.father_firstname\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.father_firstname && touched.father_firstname && (\r\n                            <div className=\"input-feedback\">{errors.father_firstname}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Father Last Name\"\r\n                    id=\"father_lastname\"\r\n                    type=\"text\"\r\n                    value={values.father_lastname}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.father_lastname && touched.father_lastname\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.father_lastname && touched.father_lastname && (\r\n                            <div className=\"input-feedback\">{errors.father_lastname}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Nominee First Name\"\r\n                    id=\"nominee_firstname\"\r\n                    type=\"text\"\r\n                    value={values.nominee_firstname}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.nominee_firstname && touched.nominee_firstname\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.nominee_firstname && touched.nominee_firstname && (\r\n                            <div className=\"input-feedback\">{errors.nominee_firstname}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Nominee Last Name\"\r\n                    id=\"nominee_lastname\"\r\n                    type=\"text\"\r\n                    value={values.nominee_lastname}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.nominee_lastname && touched.nominee_lastname\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.nominee_lastname && touched.nominee_lastname && (\r\n                            <div className=\"input-feedback\">{errors.nominee_lastname}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <SelectInput\r\n                    label=\"Nominee Gender\"\r\n                    id=\"nominee_gender\"\r\n                    value={values.nominee_gender}\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    {...getFieldProps(\"nominee_gender\")}\r\n                    className={\r\n                      errors.nominee_gender && touched.nominee_gender\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    options={genderOption}\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.nominee_gender && touched.nominee_gender && (\r\n                            <div className=\"input-feedback\">{errors.nominee_gender}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  {/* <KeyboardDatePicker\r\n                            id=\"nominee_dob\"\r\n                            clearable\r\n                            variant=\"dialog\"\r\n                            format=\"MM/dd/yyyy\"\r\n                            placeholder=\"Nominee DOB\"\r\n                            value={values.nominee_dob}\r\n                            helperText={\"MM/dd/yyyy\"}\r\n                            onChange={value => setFieldValue(\"nominee_dob\", value)}\r\n                            disableFuture\r\n                            onBlur={handleBlur}\r\n                            className={\r\n                            errors.nominee_dob && touched.nominee_dob\r\n                                ? \"text-input error\"\r\n                                : \"text-input\"\r\n                            }\r\n                            KeyboardButtonProps={{\r\n                            \"aria-label\": \"change date\"\r\n                            }}\r\n                        /> */}\r\n\r\n                  <TextInput\r\n                    label=\"Nominee DOB\"\r\n                    id=\"nominee_dob\"\r\n                    type=\"date\"\r\n                    value={values.nominee_dob}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.nominee_dob && touched.nominee_dob\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.nominee_dob && touched.nominee_dob && (\r\n                            <div className=\"input-feedback\">{errors.nominee_dob}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Nominee Relation\"\r\n                    id=\"relation\"\r\n                    type=\"text\"\r\n                    value={values.relation}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.relation && touched.relation\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.relation && touched.relation && (\r\n                            <div className=\"input-feedback\">{errors.relation}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"PAN\"\r\n                    id=\"pan\"\r\n                    type=\"text\"\r\n                    value={values.pan}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.pan && touched.pan\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.pan && touched.pan && (\r\n                            <div className=\"input-feedback\">{errors.pan}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Email\"\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    value={values.email}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.email && touched.email\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.email && touched.email && (\r\n                            <div className=\"input-feedback\">{errors.email}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Mobile\"\r\n                    id=\"mobile\"\r\n                    type=\"number\"\r\n                    value={values.mobile}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.mobile && touched.mobile\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.mobile && touched.mobile && (\r\n                            <div className=\"input-feedback\">{errors.mobile}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Address\"\r\n                    id=\"address_correspondence\"\r\n                    type=\"text\"\r\n                    value={values.address_correspondence}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.address_correspondence &&\r\n                      touched.address_correspondence\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.address_correspondence && touched.address_correspondence && (\r\n                            <div className=\"input-feedback\">{errors.address_correspondence}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Landmark\"\r\n                    id=\"landmark\"\r\n                    type=\"text\"\r\n                    value={values.landmark}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.landmark && touched.landmark\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.landmark && touched.landmark && (\r\n                            <div className=\"input-feedback\">{errors.landmark}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"City\"\r\n                    id=\"district\"\r\n                    type=\"text\"\r\n                    value={values.district}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.district && touched.district\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.district && touched.district && (\r\n                            <div className=\"input-feedback\">{errors.district}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"State\"\r\n                    id=\"state\"\r\n                    type=\"text\"\r\n                    value={values.state}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.state && touched.state\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.state && touched.state && (\r\n                            <div className=\"input-feedback\">{errors.state}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Postal Code\"\r\n                    id=\"postal_code\"\r\n                    type=\"number\"\r\n                    value={values.postal_code}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.postal_code && touched.postal_code\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.postal_code && touched.postal_code && (\r\n                            <div className=\"input-feedback\">{errors.postal_code}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"ID Proof\"\r\n                    id=\"id_proof\"\r\n                    type=\"text\"\r\n                    value={values.id_proof}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.id_proof && touched.id_proof\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.id_proof && touched.id_proof && (\r\n                            <div className=\"input-feedback\">{errors.id_proof}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Proof Address\"\r\n                    id=\"proof_address\"\r\n                    type=\"text\"\r\n                    value={values.proof_address}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.proof_address && touched.proof_address\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.proof_address && touched.proof_address && (\r\n                            <div className=\"input-feedback\">{errors.proof_address}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Bank Name\"\r\n                    id=\"bank_name\"\r\n                    type=\"text\"\r\n                    value={values.bank_name}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.bank_name && touched.bank_name\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                    disabled\r\n                  />\r\n                  {/* {errors.bank_name && touched.bank_name && (\r\n                            <div className=\"input-feedback\">{errors.bank_name}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Account Number\"\r\n                    id=\"account_no\"\r\n                    type=\"text\"\r\n                    value={values.account_no}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.account_no && touched.account_no\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.account_no && touched.account_no && (\r\n                            <div className=\"input-feedback\">{errors.account_no}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Branch\"\r\n                    id=\"branch\"\r\n                    type=\"text\"\r\n                    value={values.branch}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.branch && touched.branch\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                    disabled\r\n                  />\r\n                  {/* {errors.branch && touched.branch && (\r\n                            <div className=\"input-feedback\">{errors.branch}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"IFSC\"\r\n                    id=\"ifs_code\"\r\n                    type=\"text\"\r\n                    value={values.ifs_code}\r\n                    onChange={handleChange}\r\n                    // onBlur={handleBlur}\r\n                    className={\r\n                      errors.ifs_code && touched.ifs_code\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                    onBlur={(e) => {\r\n                      // handleBlur(e); this.blurHandle(e);\r\n                      let ifscCode = e.target.value;\r\n                      ifsc.validate(ifscCode)\r\n                        ? fetchIfscDetails(ifscCode).then((response) => {\r\n                            let branch = `${response.BANKCODE} - ${response.BRANCH}`;\r\n\r\n                            setFieldValue(\"bank_name\", response.BANK);\r\n                            setFieldValue(\"branch\", branch);\r\n                          })\r\n                        : alert(\"Please Check IFSC\");\r\n                    }}\r\n                  />\r\n                  {/* {errors.ifs_code && touched.ifs_code && (\r\n                            <div className=\"input-feedback\">{errors.ifs_code}</div>\r\n                        )} */}\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <TextInput\r\n                    label=\"Account Type\"\r\n                    id=\"account_type\"\r\n                    type=\"text\"\r\n                    value={values.account_type}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.account_type && touched.account_type\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                    showLabel\r\n                  />\r\n                  {/* {errors.account_type && touched.account_type && (\r\n                            <div className=\"input-feedback\">{errors.account_type}</div>\r\n                        )} */}\r\n                </div>\r\n              </div>\r\n\r\n              <Button\r\n                color=\"danger\"\r\n                type=\"submit\"\r\n                size=\"lg\"\r\n                className=\"pull-right\"\r\n                disabled={isSubmitting}\r\n              >\r\n                Next\r\n              </Button>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    adpData: state.createAdpReducer.adpData,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateAdpData: bindActionCreators(updateAdpData, dispatch),\r\n  };\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default connector(withRouter(AddAdpForm));\r\n\r\nfunction getAdpName(adp_id) {\r\n  return apiHandler.get(\"get-adp-name\", { params: { adp_id } });\r\n}\r\n\r\n// function addAdp(body) {\r\n//   return apiHandler.post(\"add-adp\", body);\r\n// }\r\n\r\nfunction fetchIfscDetails(ifscCode) {\r\n  return ifsc.fetchDetails(ifscCode);\r\n}\r\n","import React from \"react\";\r\n// import {TableContainer, Table, TableHead, TableRow, TableCell, TableBody, Button, TextField, Icon} from \"@material-ui/core\";\r\n// import AddIcon from '@material-ui/icons/Add';\r\n// import RemoveIcon from '@material-ui/icons/Remove';\r\nimport styled  from \"styled-components\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardTitle,\r\n  Table,\r\n  Row,\r\n  Col,\r\n  Button\r\n} from \"reactstrap\";\r\nimport TextInput from \"components/Input/TextInput\";\r\n\r\n\r\nconst style = {\r\n    button: {\r\n        background: \"red !important\",\r\n        color: \"white !important\"\r\n    },\r\n    th: {\r\n      fontSize: \"0.8rem !important\",\r\n      fontWeight: \"400 !important\",\r\n    },\r\n    cartInput: {\r\n      width: \"20px !important\",\r\n      padding: \"0 !important\",\r\n      height: \"20px !important\",\r\n      borderRadius: \"50px\",\r\n      textAlign: \"center\",\r\n      width: \"24px\",\r\n      height: \"24px\",\r\n      margin: \"0 2px\"\r\n    },\r\n    addRemoveButton: {\r\n      width: \"24px\",\r\n      height: \"24px\",\r\n      borderRadius: \"50px\",\r\n      border: 0,\r\n      \"i\": {\r\n        marginTop: \"5px\",\r\n      }\r\n    },\r\n    \r\n}\r\n\r\n\r\nconst StyledButton = styled(Button)(style.button)\r\nconst StyledTH = styled(\"th\")(style.th)\r\nconst StyledTextInput = styled(TextInput)(style.cartInput)\r\nconst StyledAddRemoveButton = styled(StyledButton)(style.addRemoveButton)\r\n\r\nconst cart = (props) => {\r\n    // console.log(props.cartItem);\r\n    return(\r\n            <Table responsive striped bordered hover >\r\n                \r\n                    <thead className=\"text-primary\">\r\n                       <tr  >\r\n                            <StyledTH >Product Name</StyledTH>\r\n                            <StyledTH align=\"right\" >Price</StyledTH>\r\n                            <StyledTH align=\"center\" >Quantity</StyledTH>\r\n                            <StyledTH align=\"right\" >Total Price</StyledTH>\r\n                            <StyledTH align=\"right\" >Discount</StyledTH>\r\n                            <StyledTH align=\"right\" >After Discount</StyledTH>\r\n                            <StyledTH align=\"right\" >Net Price</StyledTH>\r\n                            <StyledTH align=\"right\" >BV</StyledTH>\r\n                            {props.showDiscount && <StyledTH align=\"right\" >Smart Mart Discount</StyledTH>}\r\n                            <StyledTH align=\"right\" >Retail Profit</StyledTH>\r\n                            <StyledTH align=\"right\" >Delete</StyledTH>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                    {props.cartItem.map((row) => (\r\n                            <tr key={row.product}>\r\n                                <td component=\"th\" scope=\"row\">\r\n                                    {row.product}\r\n                                </td>\r\n                                <td align=\"right\">{row.price}</td>\r\n                                <td align=\"right\" style={{display:\"flex\", alignItems: \"end\"}}> \r\n                                  <div style={{display:\"flex\", alignItems: \"end\", marginTop: \"7px\"}}>\r\n                                    <StyledAddRemoveButton \r\n                                          style={{padding:\"0\", outline:\"none\", minWidth:\"10px\" }}\r\n                                          variant=\"contained\"\r\n                                          color=\"primary\"\r\n                                          onClick={() => props.quantityReduced(row)}\r\n                                      >\r\n                                          <i className=\"now-ui-icons ui-1_simple-delete\" />\r\n                                      </StyledAddRemoveButton>\r\n                                      <StyledTextInput \r\n                                          id=\"filled-basic\" \r\n                                          // variant=\"style={{}}\" \r\n                                          disabled\r\n                                          color={\"white\"}\r\n                                          value={row.quantityAdded}\r\n                                          \r\n                                      />\r\n                                      <StyledAddRemoveButton\r\n                                          style={{padding:\"0\", outline:\"none\",  minWidth:\"10px\"}}\r\n                                          variant=\"contained\"\r\n                                          color=\"primary\"\r\n                                          onClick={() =>props.quantityAdded(row)}\r\n                                      >\r\n                                          <i className=\"now-ui-icons ui-1_simple-add\" />\r\n                                      </StyledAddRemoveButton>\r\n                                  </div>\r\n                                    \r\n                                </td>\r\n                                <td align=\"right\">{Number(row.quantityAdded)*Number(row.price)}</td>\r\n                                <td align=\"right\">{row.discount}</td>\r\n                                <td align=\"right\">{Number(row.after_discount)*Number(row.quantityAdded)}</td>\r\n                                <td align=\"right\">{Number(row.after_discount)*Number(row.quantityAdded)}</td>\r\n                                <td align=\"right\">{row.bv}</td>\r\n                                {props.showDiscount && <td align=\"right\">{row.vdba + row.vdbd}</td>}\r\n                                <td align=\"right\">{row.retail_profit}</td>\r\n                                <td align=\"right\">\r\n                                    <StyledButton size=\"small\" fullWidth\r\n                                            variant=\"contained\"\r\n                                            color=\"red\"\r\n                                            onClick={() => props.deleteItem(row)}>Delete</StyledButton>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                             \r\n                    </tbody>\r\n            </Table>\r\n    );\r\n}\r\n\r\nexport default cart;","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  CardActions,\r\n  Button,\r\n  Divider,\r\n  InputLabel,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport Select from \"react-select\";\r\nimport styled from \"styled-components\";\r\nimport { InputGroup, InputGroupAddon, InputGroupText, Input } from \"reactstrap\";\r\n\r\nconst style = {\r\n  card: {\r\n    width: \"225px\",\r\n    height: \"260px\",\r\n    display: \"inline-block\",\r\n    margin: \"5px 8px 0 0\",\r\n    boxShadow: \"0 0 0px #b6b6b6\",\r\n    transition: \"0.2s\",\r\n    transform: \"scale(1)\",\r\n    border: \"1px solid #f2f2f2\",\r\n    overflow: \"visible !important\",\r\n    \"&:hover\": {\r\n      boxShadow: \"0 0 4px #b6b6b6\",\r\n      transform: \"scale(1.05)\",\r\n      transition: \"0.2s\",\r\n    },\r\n  },\r\n  button: {\r\n    background: \"red !important\",\r\n    color: \"white !important\",\r\n    \"&.disabled\": {\r\n      background: \"grey !important\",\r\n    },\r\n  },\r\n  label: {\r\n    marginTop: \"15px\",\r\n  },\r\n\r\n  buttonContainer: {\r\n    // position: \"absolute\",\r\n    left: \"0\",\r\n    right: \"0\",\r\n    bottom: \"20px\",\r\n  },\r\n  inputGroup: {\r\n    position: \"relative\",\r\n    display: \"table\",\r\n    borderCollapse: \"separate\",\r\n    // width: \"90px\",\r\n    \".input-group-addon\": {\r\n      borderRight: 0,\r\n      padding: \"0 0px\",\r\n      height: \"auto\",\r\n      fontSize: \"12px\",\r\n      color: \"#999\",\r\n      font: \"12px/16px ProximaNovaA-Regular\",\r\n      width: \"50%\",\r\n      borderColor: \" #e0e0e0\",\r\n      display: \"inline-block\",\r\n      \".input-group-text\": {\r\n        padding: \"0 10px\",\r\n        borderBottomRightRadius: 0,\r\n        borderTopRightRadius: 0,\r\n      },\r\n    },\r\n    \".form-control\": {\r\n      width: \"50%\",\r\n      display: \"inline-block\",\r\n      padding: \"5px 0\",\r\n      textAlign: \"center\",\r\n      borderRadius: \"0.25rem\",\r\n      borderBottomLeftRadius: 0,\r\n      borderTopLeftRadius: 0,\r\n    },\r\n  },\r\n\r\n  addCartButton: {\r\n    height: \"25px\",\r\n  },\r\n\r\n  cardContent: {\r\n    height: \"180px\",\r\n    textAlign: \"center\",\r\n    padding: \"10px\",\r\n  },\r\n  select: {\r\n    clear: \"both\",\r\n    width: \"93%\",\r\n    margin: \"auto\",\r\n  },\r\n  productName: {\r\n    color: \"red\",\r\n    fontWeight: \"700\",\r\n    marginBottom: \"1rem\",\r\n    fontSize: \"1rem\",\r\n    display: \"-webkit-box\",\r\n    \"-webkit-line-clamp\": \"2\",\r\n    \"-webkit-box-orient\": \"vertical\",\r\n    maxHeight: \"48px\",\r\n    overflow: \"hidden\",\r\n  },\r\n};\r\n\r\nconst StyledCard = styled(Card)(style.card);\r\nconst StyledButton = styled(Button)(style.button);\r\nconst StyledLabel = styled(InputLabel)(style.label);\r\nconst StyledButtonContainer = styled(CardActions)(style.buttonContainer);\r\nconst StyledInputGroup = styled(InputGroup)(style.inputGroup);\r\nconst StyledAddCartButton = styled(StyledButton)(style.addCartButton);\r\nconst StyledCardContent = styled(CardContent)(style.cardContent);\r\nconst StyledSelect = styled(Select)(style.select);\r\nconst StyledProductName = styled(\"div\")(style.productName);\r\nclass ProductCard extends React.Component {\r\n  state = {\r\n    quantity: 1,\r\n    productOptions: [],\r\n    selectedProductOption: {},\r\n  };\r\n\r\n  handleQuantityChange = (value) => {\r\n    this.setState({\r\n      quantity: value,\r\n    });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    let productOptionsDetails = this.props.product.details;\r\n    let productOptions = [];\r\n    let selectedProductOption = [];\r\n    productOptionsDetails &&\r\n      productOptionsDetails.forEach((elm, i) => {\r\n        elm.label = `${elm.unit_quantity} ${elm.unit}`;\r\n        elm.value = elm.id;\r\n        productOptions.push(elm);\r\n      });\r\n    if (productOptions && productOptions.length > 0) {\r\n      selectedProductOption = productOptions[0];\r\n    }\r\n    this.setState({\r\n      productOptions,\r\n      selectedProductOption,\r\n    });\r\n  };\r\n\r\n  handleChange = (selectedOption) => {\r\n    this.setState({\r\n      selectedProductOption: selectedOption,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let props = this.props;\r\n    let { selectedProductOption, productOptions } = this.state;\r\n\r\n    return (\r\n      <StyledCard variant=\"outlined\">\r\n        <StyledCardContent>\r\n          <StyledProductName\r\n            dataToggle=\"tooltip\"\r\n            dataPlacement=\"bottom\"\r\n            title={props.product.product}\r\n          >\r\n            {props.product.product}\r\n          </StyledProductName>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            Actual Price : RS.{selectedProductOption.price}\r\n            <br></br>\r\n            DISCOUNT : {selectedProductOption.discount}\r\n            <br />\r\n            You Pay : RS.{selectedProductOption.actual_price}\r\n            <br></br>\r\n            BV : {selectedProductOption.bv}\r\n            <br></br>\r\n            {(selectedProductOption.vdbd || selectedProductOption.vdba) &&\r\n            selectedProductOption.vdbd + selectedProductOption.vdba != \"0\" ? (\r\n              <span\r\n                dataToggle=\"tooltip\"\r\n                dataPlacement=\"bottom\"\r\n                title=\"Smart Mart Discount Debit\"\r\n              >{`SMDD: ${selectedProductOption.currency} ${\r\n                selectedProductOption.vdbd + selectedProductOption.vdba\r\n              }`}</span>\r\n            ) : (\r\n              <span\r\n                dataToggle=\"tooltip\"\r\n                dataPlacement=\"bottom\"\r\n                title=\"Smart Mart Discount Credit\"\r\n              >{`SMDC: ${selectedProductOption.currency} ${selectedProductOption.vdbc}`}</span>\r\n            )}\r\n          </Typography>\r\n        </StyledCardContent>\r\n        <StyledSelect\r\n          options={productOptions}\r\n          value={selectedProductOption}\r\n          onChange={this.handleChange}\r\n        />\r\n        <StyledButtonContainer>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              <StyledInputGroup>\r\n                <InputGroupAddon addonType=\"addon\">\r\n                  {/* <InputGroupText>Qty</InputGroupText> */}\r\n                  Qty\r\n                </InputGroupAddon>\r\n                <Input\r\n                  id=\"quantity\"\r\n                  value={this.state.quantity}\r\n                  onChange={(e) => {\r\n                    this.handleQuantityChange(e.target.value);\r\n                  }}\r\n                  inputProps={{ style: { textAlign: \"center\" } }}\r\n                />\r\n              </StyledInputGroup>\r\n            </Grid>\r\n\r\n            {/* <Grid item xs={1} ></Grid> */}\r\n            <Grid item xs={6}>\r\n              <StyledAddCartButton\r\n                size=\"small\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  let newProduct = {\r\n                    ...props.product,\r\n                    ...selectedProductOption,\r\n                    quantityAdded: this.state.quantity,\r\n                  };\r\n                  props.cartAdded(newProduct);\r\n                }}\r\n              >\r\n                Add\r\n              </StyledAddCartButton>\r\n            </Grid>\r\n          </Grid>\r\n        </StyledButtonContainer>\r\n      </StyledCard>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductCard;\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\nimport ProductCard from \"../Molecule/ProductCard\";\r\n\r\n\r\nconst BuyProductList = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row row-cols-1 row-cols-sm-2 row-cols-md-2 row-cols-lg-5\">\r\n                <div className=\"col\">\r\n                    <Select\r\n                        placeholder=\"Product Type\"\r\n                        options={props.productTypeOptions}\r\n                        value={props.selectedProductType}\r\n                        onChange={(value) => {\r\n                            props.handleChange(\"selectedProductType\", value);\r\n                        }}\r\n                    />\r\n                </div>\r\n                <br></br>\r\n\r\n                <div className=\"col\">\r\n                    <Select\r\n                        placeholder=\"City\"\r\n                        options={props.cityOptions}\r\n                        value={props.selectedCity}\r\n                        onChange={(value) => {\r\n                            props.handleChange(\"selectedCity\", value);\r\n                        }}\r\n                    />\r\n                </div>\r\n                <br></br>\r\n                <div className=\"col\">\r\n                    <Select\r\n                        placeholder=\"Franchise\"\r\n                        options={props.franchiseOptions}\r\n                        value={props.selectedFranchise}\r\n                        onChange={(value) => {\r\n                            props.handleChange(\"selectedFranchise\", value);\r\n                        }}\r\n                    />\r\n                </div>\r\n                <br></br>\r\n                <div className=\"col\">\r\n                    <Select\r\n                        placeholder=\"Category\"\r\n                        options={props.categoryOptions}\r\n                        value={props.selectedCategory}\r\n                        isDisabled={props.selectedCity.label === undefined ? true : false}\r\n                        onChange={(value) => {\r\n                            props.handleChange(\"selectedCategory\", value);\r\n                        }}\r\n\r\n                    />\r\n                </div>\r\n                <br></br>\r\n                <div className=\"col\">\r\n                    <Select\r\n                        placeholder=\"Sub Category\"\r\n                        options={props.subCategoryOptions}\r\n                        value={props.selectedSubCategory}\r\n                        isDisabled={props.selectedCategory.label === undefined ? true : false}\r\n                        onChange={(value) => {\r\n                            props.handleChange(\"selectedSubCategory\", value);\r\n                        }}\r\n\r\n                    />\r\n                </div>\r\n                <br></br>\r\n            </div>\r\n            <br></br>\r\n            <div className=\"text-center\">\r\n\r\n                {props.productList.map((product, i) => {\r\n                    return (//<div class=\"col\">\r\n                                <ProductCard key={i + Math.random()} product={product} cartAdded={props.cartAdded} />\r\n                            //</div>\r\n                            )\r\n\r\n                })}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BuyProductList;","import {\r\n  FETCH_WALLET_INITIATE,\r\n  FETCH_WALLET_FAILED,\r\n  FETCH_WALLET_SUCCESS,\r\n} from \"../constants/wallet\";\r\nimport { apiHandler } from \"config/apiConfig\";\r\n\r\nexport const fetchWalletInitiate = data => {\r\n  return {\r\n    type: FETCH_WALLET_INITIATE,\r\n  };\r\n};\r\n\r\nexport const fetchWalletSuccess = data => {\r\n  return {\r\n    type: FETCH_WALLET_SUCCESS,\r\n    payload: data\r\n  };\r\n};\r\n\r\nexport const fetchWalletFailed = data => {\r\n  return {\r\n    type: FETCH_WALLET_FAILED,\r\n  };\r\n};\r\n\r\nexport const fetchWalletAction = () => {\r\n  return dispatch => {\r\n    dispatch(fetchWalletInitiate());\r\n    return walletApi()\r\n      .then(response => {\r\n          if (response) {\r\n              dispatch(fetchWalletSuccess(response));\r\n          } else {\r\n              dispatch(fetchWalletFailed());\r\n          }\r\n      })\r\n      .catch(error => {\r\n        dispatch(fetchWalletFailed());\r\n      });\r\n  };\r\n};\r\n\r\n\r\nfunction walletApi() {\r\n  return apiHandler.get(`/wallet`).catch((err) => {\r\n      console.log(err)\r\n  });\r\n}\r\n\r\n","export const FETCH_WALLET_INITIATE = \"FETCH_WALLET_INITIATE\";\r\nexport const FETCH_WALLET_FAILED = \"FETCH_WALLET_FAILED\";\r\nexport const FETCH_WALLET_SUCCESS = \"FETCH_WALLET_SUCCESS\";","import {\r\n  FETCH_SMART_MART_INITIATE,\r\n  FETCH_SMART_MART_FAILED,\r\n  FETCH_SMART_MART_SUCCESS,\r\n} from \"../constants/smartMart\";\r\nimport { apiHandler } from \"config/apiConfig\";\r\n\r\nexport const fetchSmartMartInitiate = data => {\r\n  return {\r\n    type: FETCH_SMART_MART_INITIATE,\r\n  };\r\n};\r\n\r\nexport const fetchSmartMartSuccess = data => {\r\n  return {\r\n    type: FETCH_SMART_MART_SUCCESS,\r\n    payload: data\r\n  };\r\n};\r\n\r\nexport const fetchSmartMartFailed = data => {\r\n  return {\r\n    type: FETCH_SMART_MART_FAILED,\r\n  };\r\n};\r\n\r\nexport const fetchSmartMartAction = () => {\r\n  return dispatch => {\r\n    dispatch(fetchSmartMartInitiate());\r\n    return SmartMartApi()\r\n      .then(response => {\r\n          if (response) {\r\n              dispatch(fetchSmartMartSuccess(response));\r\n          } else {\r\n              dispatch(fetchSmartMartFailed());\r\n          }\r\n      })\r\n      .catch(error => {\r\n        dispatch(fetchSmartMartFailed());\r\n      });\r\n  };\r\n};\r\n\r\n\r\nfunction SmartMartApi() {\r\n  return apiHandler.get(`/smart-mart-balance`).catch((err) => {\r\n      console.log(err)\r\n  });\r\n}\r\n\r\n","export const FETCH_SMART_MART_INITIATE = \"FETCH_SMART_MART_INITIATE\";\r\nexport const FETCH_SMART_MART_FAILED = \"FETCH_SMART_MART_FAILED\";\r\nexport const FETCH_SMART_MART_SUCCESS = \"FETCH_SMART_MART_SUCCESS\";","import React from \"react\";\r\nimport Cart from \"../Molecule/Cart\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport BuyProductList from \"components/Organism/BuyProductList\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { updateAdpData } from \"../../redux/actions/addAdp\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { apiHandler } from \"config/apiConfig\";\r\nimport { fetchWalletAction } from \"redux/actions/wallet\";\r\nimport { toast } from \"react-toastify\";\r\nimport { fetchSmartMartAction } from \"redux/actions/smartMart\";\r\n\r\nconst styles = {\r\n  wrapper: {\r\n    padding: \"1rem\",\r\n  },\r\n  button: {\r\n    background: \"red !important\",\r\n    color: \"white !important\",\r\n    marginRight: \"1rem !important\",\r\n    \"&.disabled\": {\r\n      background: \"grey !important\",\r\n    },\r\n    \"&.grey\": {\r\n      background: \"black !important\",\r\n    },\r\n  },\r\n};\r\n\r\nconst Wrapper = styled(\"div\")(styles.wrapper);\r\nconst StyledButton = styled(Button)(styles.button);\r\n\r\nclass BuyProducts extends React.Component {\r\n  state = {\r\n    selectedCategory: [],\r\n    categoryOptions: [],\r\n    subCategoryOptions: [],\r\n    selectedSubCategory: [],\r\n    cityOptions: [],\r\n    selectedCity: [],\r\n    productList: [],\r\n    cart: [],\r\n    adp_id: \"\",\r\n    franchiseOptions: [],\r\n    selectedFranchise: [],\r\n    bvWeightageList: [],\r\n    totalSmartMartDiscount: 0,\r\n    previousBv: 0,\r\n    balance: 0,\r\n    showDiscount: false,\r\n    selectedProductType: [],\r\n    productTypeOptions: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getWalletBalance();\r\n\r\n    getCategory().then((response) => {\r\n      let categoryOptions = [];\r\n\r\n      response.data.results &&\r\n        response.data.results.forEach((elm) => {\r\n          let obj = {\r\n            value: elm.id,\r\n            label: elm.category,\r\n          };\r\n          categoryOptions.push(obj);\r\n        });\r\n      this.setState({\r\n        categoryOptions,\r\n      });\r\n    });\r\n\r\n    getCity().then((response) => {\r\n      let cityOptions = [];\r\n\r\n      response.data.results &&\r\n        response.data.results.forEach((elm) => {\r\n          let obj = {\r\n            value: elm.id,\r\n            label: elm.city,\r\n          };\r\n          cityOptions.push(obj);\r\n        });\r\n      this.setState({\r\n        cityOptions,\r\n      });\r\n    });\r\n\r\n    getPreviousBv().then((response) => {\r\n      if (response && response.data) {\r\n        this.setState({\r\n          previousBv: response.data.bvTillDate,\r\n        });\r\n      }\r\n    });\r\n\r\n    getBvWeightage().then((response) => {\r\n      if (response && response.data) {\r\n        this.setState({\r\n          bvWeightageList: response.data.results,\r\n        });\r\n      }\r\n    });\r\n\r\n    this.getProductTypeApi();\r\n  }\r\n\r\n  subCategoryApiCall = (categoryId) => {\r\n    getSubCategory(categoryId).then((response) => {\r\n      let subCategoryOptions = [];\r\n\r\n      response.data.results &&\r\n        response.data.results.forEach((elm) => {\r\n          let obj = {\r\n            value: elm.id,\r\n            label: elm.sub_category,\r\n          };\r\n          subCategoryOptions.push(obj);\r\n        });\r\n      this.setState({\r\n        subCategoryOptions,\r\n      });\r\n    });\r\n  };\r\n\r\n  handleChange = (type, value) => {\r\n    this.setState(\r\n      {\r\n        [type]: value,\r\n      },\r\n      () => {\r\n        if (type === \"selectedCategory\") {\r\n          this.setState(\r\n            {\r\n              selectedSubCategory: [],\r\n            },\r\n            () => {\r\n              this.subCategoryApiCall(value.value);\r\n            }\r\n          );\r\n        } else if (type === \"selectedSubCategory\") {\r\n          let body = {\r\n            params: {\r\n              city: this.state.selectedCity.value,\r\n              categoryId: this.state.selectedCategory.value,\r\n              subCategoryId: this.state.selectedSubCategory.value,\r\n              productType: this.state.selectedProductType.value,\r\n            },\r\n          };\r\n          getProducts(body).then((response) => {\r\n            this.setState({\r\n              productList: response.data.results,\r\n            });\r\n          });\r\n        } else if (type === \"selectedCity\") {\r\n          getCity().then((response) => {\r\n            let cityOptions = [];\r\n\r\n            response.data.results &&\r\n              response.data.results.forEach((elm) => {\r\n                let obj = {\r\n                  value: elm.id,\r\n                  label: elm.city,\r\n                };\r\n                cityOptions.push(obj);\r\n              });\r\n            this.setState({\r\n              cityOptions,\r\n            });\r\n          });\r\n\r\n          let body = {\r\n            params: {\r\n              city: this.state.selectedCity.value,\r\n              categoryId: this.state.selectedCategory.value,\r\n              subCategoryId: this.state.selectedSubCategory.value,\r\n              productType: this.state.selectedProductType.value,\r\n            },\r\n          };\r\n          getProducts(body).then((response) => {\r\n            this.setState({\r\n              productList: response.data.results,\r\n            });\r\n          });\r\n\r\n          getFranchise({\r\n            params: { city: this.state.selectedCity.value },\r\n          }).then((response) => {\r\n            let franchiseOptions = [];\r\n\r\n            response.data.results &&\r\n              response.data.results.forEach((elm) => {\r\n                let obj = {\r\n                  value: elm.id,\r\n                  label: elm.franchise_name,\r\n                };\r\n                franchiseOptions.push(obj);\r\n              });\r\n            this.setState({\r\n              franchiseOptions,\r\n            });\r\n          });\r\n        } else if (type === \"selectedFranchise\") {\r\n          let body = {\r\n            params: {\r\n              city: this.state.selectedCity.value,\r\n              categoryId: this.state.selectedCategory.value,\r\n              subCategoryId: this.state.selectedSubCategory.value,\r\n              franchiseId: this.state.selectedFranchise.value,\r\n              productType: this.state.selectedProductType.value,\r\n            },\r\n          };\r\n          getProducts(body).then((response) => {\r\n            this.setState({\r\n              productList: response.data.results,\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  cartAdded = (product) => {\r\n    let localCart = [...this.state.cart];\r\n    let quantityFlag = 0;\r\n    for (let i = 0; i < localCart.length; i++) {\r\n      if (localCart[i].id === product.id) {\r\n        localCart[i].quantityAdded =\r\n          Number(localCart[i].quantityAdded) + Number(product.quantityAdded);\r\n        quantityFlag = 1;\r\n      }\r\n    }\r\n    if (quantityFlag == 0) {\r\n      localCart.push(product);\r\n    }\r\n    //console.log('localCart After Push', localCart[0]);\r\n    this.setState({ cart: localCart }, () => {\r\n      this.calculateSmartMartDiscount();\r\n    });\r\n  };\r\n\r\n  deleteItemHandler = (cartItem) => {\r\n    let localCart = [...this.state.cart];\r\n    let index = 0;\r\n    for (let i = 0; i < localCart.length; i++) {\r\n      if (localCart[i].id === cartItem.id) {\r\n        index = i;\r\n      }\r\n    }\r\n    localCart.splice(index, 1);\r\n    this.setState({ cart: localCart }, () => {\r\n      this.calculateSmartMartDiscount();\r\n    });\r\n  };\r\n\r\n  quantityAdded = (cartItem) => {\r\n    let localCart = [...this.state.cart];\r\n\r\n    for (let i = 0; i < localCart.length; i++) {\r\n      if (localCart[i].id === cartItem.id) {\r\n        localCart[i].quantityAdded =\r\n          Number(localCart[i].quantityAdded) + Number(1);\r\n      }\r\n    }\r\n\r\n    this.setState({ cart: localCart }, () => {\r\n      this.calculateSmartMartDiscount();\r\n    });\r\n  };\r\n\r\n  quantityReduced = (cartItem) => {\r\n    let localCart = [...this.state.cart];\r\n\r\n    for (let i = 0; i < localCart.length; i++) {\r\n      if (localCart[i].id === cartItem.id) {\r\n        if (localCart[i].quantityAdded > 1) {\r\n          localCart[i].quantityAdded =\r\n            Number(localCart[i].quantityAdded) - Number(1);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({ cart: localCart }, () => {\r\n      this.calculateSmartMartDiscount();\r\n    });\r\n  };\r\n\r\n  addAdpCreateOrderApi = () => {\r\n    let { cart, bvWeightageList, totalSmartMartDiscount } = this.state;\r\n    let {\r\n      adpData,\r\n      fetchWalletAction,\r\n      updateAdpData,\r\n      fetchSmartMartAction,\r\n    } = this.props;\r\n    let totalBv = getTotalBv(cart);\r\n\r\n    let calculatedBv =\r\n      totalBv * (calcBvWeightage(totalBv, bvWeightageList) / 100);\r\n    let body = {\r\n      adpData: adpData,\r\n      products: cart,\r\n      totalAmount: getTotal(cart),\r\n      calculatedBv,\r\n      totalSmartMartDiscount,\r\n    };\r\n    if (getTotal(cart) > this.state.balance) {\r\n      alert(\"You sont have enough funds in wallet\");\r\n      return;\r\n    }\r\n    addAdp(body).then((response) => {\r\n      fetchWalletAction();\r\n      fetchSmartMartAction();\r\n      toast(\"ADP Created\");\r\n      this.props.history.push(\"/adp/dashboard\");\r\n      updateAdpData({ adpData: {} });\r\n    });\r\n  };\r\n\r\n  rePurchaseCreateOrderApi = () => {\r\n    let {\r\n      cart,\r\n      bvWeightageList,\r\n      totalSmartMartDiscount,\r\n      previousBv,\r\n    } = this.state;\r\n    let { fetchWalletAction, adpId, fetchSmartMartAction } = this.props;\r\n    let totalBv = getTotalBv(cart);\r\n    let calculatedBv =\r\n      totalBv * (calcBvWeightage(previousBv + totalBv, bvWeightageList) / 100);\r\n\r\n    let body = {\r\n      products: cart,\r\n      totalAmount: getTotal(cart),\r\n      adp_id: adpId,\r\n      calculatedBv,\r\n      totalSmartMartDiscount,\r\n    };\r\n\r\n    if (getTotal(cart) > this.state.balance) {\r\n      alert(\"You sont have enough funds in wallet\");\r\n      return;\r\n    }\r\n\r\n    rePurchase(body).then((response) => {\r\n      fetchWalletAction();\r\n      fetchSmartMartAction();\r\n      toast(\"Order Placed Successfully\");\r\n      this.props.history.push(\"/adp/dashboard\");\r\n    });\r\n  };\r\n\r\n  calculateSmartMartDiscount = () => {\r\n    let { cart } = this.state;\r\n    let { smartMartBalance } = this.props;\r\n    this.setState({\r\n      totalSmartMartDiscount: getTotalDiscount(cart),\r\n      showDiscount: smartMartBalance >= getTotalDiscount(cart) ? true : false,\r\n    });\r\n  };\r\n\r\n  getProductTypeApi = () => {\r\n    getProductType().then((response) => {\r\n      let productTypeOptions = [];\r\n\r\n      response.data.results &&\r\n        response.data.results.forEach((elm) => {\r\n          let obj = {\r\n            value: elm.id,\r\n            label: elm.product_type,\r\n          };\r\n          productTypeOptions.push(obj);\r\n        });\r\n      this.setState({\r\n        productTypeOptions,\r\n      });\r\n    });\r\n  };\r\n\r\n  getWalletBalance = async () => {\r\n    const response = await apiHandler.get(\"/wallet-balance\");\r\n    this.setState({\r\n      balance: response.data.balance,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      categoryOptions,\r\n      selectedCategory,\r\n      subCategoryOptions,\r\n      selectedSubCategory,\r\n      cityOptions,\r\n      selectedCity,\r\n      productList,\r\n      selectedFranchise,\r\n      franchiseOptions,\r\n      cart,\r\n      bvWeightageList,\r\n      showDiscount,\r\n      totalSmartMartDiscount,\r\n      selectedProductType,\r\n      productTypeOptions,\r\n      previousBv,\r\n    } = this.state;\r\n\r\n    let { toggleBuyProducts, rePurchase, addAdp } = this.props;\r\n    let totalBv = getTotalBv(cart);\r\n    const prevBVToConsider = rePurchase ? previousBv : 0;\r\n    let bvWeightage = calcBvWeightage(\r\n      prevBVToConsider + totalBv,\r\n      bvWeightageList\r\n    );\r\n    return (\r\n      <Wrapper>\r\n        <h6>Your Cart</h6>\r\n        <Cart\r\n          cartItem={cart}\r\n          deleteItem={this.deleteItemHandler}\r\n          quantityAdded={this.quantityAdded}\r\n          quantityReduced={this.quantityReduced}\r\n          showDiscount={showDiscount}\r\n        />\r\n        <div className=\"row row-cols-1 row-cols-sm-4\">\r\n          <div className=\"col\">\r\n            Total Amount:{\" \"}\r\n            {showDiscount\r\n              ? getTotal(cart) - totalSmartMartDiscount\r\n              : getTotal(cart)}\r\n          </div>\r\n          <div className=\"col\">\r\n            Total BV: {prevBVToConsider + totalBv * (bvWeightage / 100)}\r\n          </div>\r\n          <div className=\"col\">\r\n            Purchase BV: {totalBv * (bvWeightage / 100)}\r\n          </div>\r\n          <div className=\"col\">BV Weightage: {bvWeightage}</div>\r\n        </div>\r\n\r\n        <br></br>\r\n        <StyledButton\r\n          onClick={\r\n            rePurchase\r\n              ? this.rePurchaseCreateOrderApi\r\n              : this.addAdpCreateOrderApi\r\n          }\r\n          disabled={cart.length == 0 ? true : false}\r\n          className={cart.length == 0 ? \"disabled\" : \"\"}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          {addAdp ? \"ADD ADP\" : \"PLACE ORDER\"}\r\n        </StyledButton>\r\n        {toggleBuyProducts && (\r\n          <StyledButton\r\n            onClick={toggleBuyProducts}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className=\"grey\"\r\n          >\r\n            Back\r\n          </StyledButton>\r\n        )}\r\n\r\n        <br></br>\r\n        <br></br>\r\n        <BuyProductList\r\n          cityOptions={cityOptions}\r\n          selectedCity={selectedCity}\r\n          categoryOptions={categoryOptions}\r\n          selectedCategory={selectedCategory}\r\n          subCategoryOptions={subCategoryOptions}\r\n          selectedSubCategory={selectedSubCategory}\r\n          handleChange={this.handleChange}\r\n          productList={productList}\r\n          cartAdded={this.cartAdded}\r\n          selectedFranchise={selectedFranchise}\r\n          franchiseOptions={franchiseOptions}\r\n          selectedProductType={selectedProductType}\r\n          productTypeOptions={productTypeOptions}\r\n        />\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    balance: state.fetchWalletStatus.balance,\r\n    smartMartBalance: state.fetchSmartMartStatus.balance,\r\n    adpData: state.createAdpReducer.adpData,\r\n    adpId: state.updateRepurchaseAdpDetails.adpId,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateAdpData: bindActionCreators(updateAdpData, dispatch),\r\n    fetchWalletAction: bindActionCreators(fetchWalletAction, dispatch),\r\n    fetchSmartMartAction: bindActionCreators(fetchSmartMartAction, dispatch),\r\n  };\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default connector(withRouter(BuyProducts));\r\n\r\nfunction getCategory() {\r\n  return axios.get(`/list-category`);\r\n}\r\n\r\nfunction getCity() {\r\n  return axios.get(`/list-city`);\r\n}\r\n\r\nfunction getProducts(body) {\r\n  return axios.get(`/get-all-products`, body);\r\n}\r\n\r\nfunction getSubCategory(categoryId) {\r\n  return axios.get(`/list-sub-category`, {\r\n    params: {\r\n      categoryId: categoryId,\r\n    },\r\n  });\r\n}\r\n\r\nfunction getProductType() {\r\n  return axios.get(`/get-product-type`);\r\n}\r\n\r\nfunction getFranchise(body) {\r\n  return axios.get(`/get-franchise`, body);\r\n}\r\n\r\nfunction addAdp(body) {\r\n  return apiHandler.post(`/add-adp`, body);\r\n}\r\n\r\nfunction rePurchase(body) {\r\n  return apiHandler.post(`/re-purchase`, body);\r\n}\r\n\r\nfunction getTotal(cartArray) {\r\n  let total = 0;\r\n  cartArray &&\r\n    cartArray.forEach((elm) => {\r\n      total = total + elm.actual_price * elm.quantityAdded;\r\n    });\r\n\r\n  return total;\r\n}\r\n\r\nfunction getTotalDiscount(cartArray) {\r\n  let total = 0;\r\n  cartArray &&\r\n    cartArray.forEach((elm) => {\r\n      total = total + elm.vdba * elm.quantityAdded + elm.vdba * elm.vdbd;\r\n    });\r\n\r\n  return total;\r\n}\r\n\r\nfunction getBvWeightage() {\r\n  return apiHandler.get(\"/bv-weightage\");\r\n}\r\n\r\nfunction getPreviousBv() {\r\n  return apiHandler.get(\"/bv\");\r\n}\r\n\r\nfunction getTotalBv(products) {\r\n  let totalBv = 0;\r\n  products &&\r\n    products.forEach((elm) => {\r\n      totalBv = totalBv + elm.bv * elm.quantityAdded;\r\n    });\r\n\r\n  return totalBv;\r\n}\r\n\r\nfunction calcBvWeightage(totalBv, bvWeightageList) {\r\n  let bvWeightage = 0;\r\n  bvWeightageList &&\r\n    bvWeightageList.forEach((elm) => {\r\n      if (elm.min_value <= totalBv && elm.max_value > totalBv) {\r\n        bvWeightage = elm.value;\r\n      } else if (elm.min_value <= totalBv && elm.max_value == 0) {\r\n        bvWeightage = elm.value;\r\n      }\r\n    });\r\n  return bvWeightage;\r\n}\r\n","import React from \"react\";\r\nimport PanelHeader from \"components/PanelHeader/PanelHeader\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport AddAdpForm from \"components/Forms/AddAdpForm\";\r\nimport BuyProducts from \"components/Forms/BuyProducts\";\r\n\r\nclass AddADP extends React.Component {\r\n  state = {\r\n    showBuyProducts: false,\r\n  };\r\n\r\n  toggleBuyProducts = () => {\r\n    this.setState({\r\n      showBuyProducts: !this.state.showBuyProducts,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { showBuyProducts } = this.state;\r\n    return (\r\n      <>\r\n        <PanelHeader size=\"sm\" />\r\n        <div className=\"content\">\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <h5 className=\"title\">\r\n                    Add ADP {showBuyProducts && \"/ Buy Products\"}\r\n                  </h5>\r\n                </CardHeader>\r\n                {showBuyProducts ? (\r\n                  <BuyProducts\r\n                    toggleBuyProducts={this.toggleBuyProducts}\r\n                    addAdp\r\n                  />\r\n                ) : (\r\n                  <AddAdpForm toggleBuyProducts={this.toggleBuyProducts} />\r\n                )}\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddADP;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\n\r\nconst TransactionListItem = (props) => {\r\n  let { task_date, msg, credit, debit } = props.data;\r\n  return (\r\n    <tr>\r\n      <td>{moment(task_date).format(\"llll\")}</td>\r\n      <td>{msg}</td>\r\n      <td \r\n        align=\"center\"\r\n        className={credit == 0 ? \"debit\": \"credit\"}\r\n      >{credit == 0 ? `-${debit}` : `+${credit}`}</td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default TransactionListItem","import React from \"react\";\r\nimport PanelHeader from \"components/PanelHeader/PanelHeader\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Alert,\r\n} from \"reactstrap\";\r\nimport styled from \"styled-components\";\r\nimport TransactionListItem from \"../components/Atom/TransactionListItem\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { fetchWalletAction } from \"../redux/actions/wallet\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst style = {\r\n  th: {\r\n    fontSize: \"0.8rem !important\",\r\n    fontWeight: \"400 !important\",\r\n  },\r\n\r\n  table: {\r\n    width: \"99%\",\r\n    margin: \"auto\",\r\n    \".debit\": {\r\n      color: \"red\",\r\n    },\r\n    \".credit\": {\r\n      color: \"green\",\r\n    },\r\n  },\r\n\r\n  contentWrapper: {\r\n    padding: \"0.5rem\",\r\n  },\r\n};\r\n\r\nconst StyledTH = styled(\"th\")(style.th);\r\nconst StyledTable = styled(Table)(style.table);\r\nconst ContentWrapper = styled(\"div\")(style.contentWrapper);\r\n\r\nclass WalletStatement extends React.Component {\r\n  state = {};\r\n\r\n  componentDidMount = () => {\r\n    this.props.fetchWalletAction();\r\n  };\r\n\r\n  render() {\r\n    let { balance, statement } = this.props;\r\n    return (\r\n      <>\r\n        <PanelHeader size=\"sm\" />\r\n        <div className=\"content\">\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <h5 className=\"title\">Wallet Statement</h5>\r\n                </CardHeader>\r\n                <ContentWrapper>\r\n                  {statement && statement.length > 0 ? (\r\n                    <StyledTable responsive striped bordered hover>\r\n                      <thead className=\"text-primary\">\r\n                        <tr>\r\n                          <StyledTH>Date</StyledTH>\r\n                          <StyledTH>Message</StyledTH>\r\n                          <StyledTH>Amount</StyledTH>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {statement &&\r\n                          statement.map((elm, i) => {\r\n                            return <TransactionListItem data={elm} key={i} />;\r\n                          })}\r\n                      </tbody>\r\n                    </StyledTable>\r\n                  ) : (\r\n                    <Alert color=\"warning\">\r\n                      <span>Nothing to show</span>\r\n                    </Alert>\r\n                  )}\r\n                </ContentWrapper>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    balance: state.fetchWalletStatus.balance,\r\n    status: state.fetchWalletStatus.status,\r\n    statement: state.fetchWalletStatus.statement,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchWalletAction: bindActionCreators(fetchWalletAction, dispatch),\r\n  };\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default connector(withRouter(WalletStatement));\r\n","import React from \"react\";\r\nimport { Input, FormGroup } from \"reactstrap\";\r\nimport AsyncSelect from 'react-select/async';\r\nconst style = {\r\n    select: {\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction AsyncSelectInput(props) {\r\n  return (\r\n    <>\r\n      <FormGroup>\r\n      {props.showLabel && <label className={props.className}>{props.label}</label>}\r\n        <AsyncSelect\r\n            classNamePrefix=\"form-control\"\r\n          {...props}\r\n        />\r\n      </FormGroup>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AsyncSelectInput;\r\n","import {\r\n  UPDATE_REPURCHASE_ADP_DETAILS,\r\n} from \"../constants/rePurchase\";\r\n\r\n\r\nexport const updateRepurchaseAdpDetails = data => {\r\n  return {\r\n    type: UPDATE_REPURCHASE_ADP_DETAILS,\r\n    payload: data,\r\n  };\r\n};","export const UPDATE_REPURCHASE_ADP_DETAILS = \"UPDATE_REPURCHASE_ADP_DETAILS\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TextInput from \"components/Input/TextInput\";\r\nimport axios from \"axios\";\r\nimport AsyncSelectInput from \"components/Input/AsyncSelctInput\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { updateRepurchaseAdpDetails } from \"../../redux/actions/rePurchase\";\r\n\r\nconst styles = {\r\n  wrapper: {\r\n    padding: \"1rem\",\r\n  },\r\n  button: {\r\n    background: \"red !important\",\r\n    color: \"white !important\",\r\n    marginRight: \"1rem !important\",\r\n    \"&.disabled\": {\r\n      background: \"grey !important\",\r\n    },\r\n    \"&.grey\": {\r\n      background: \"black !important\",\r\n    },\r\n  },\r\n};\r\n\r\nconst Wrapper = styled(\"div\")(styles.wrapper);\r\nclass SelectAdpRepurchase extends React.Component {\r\n  state = {\r\n    adpOption: [],\r\n  };\r\n\r\n  // handleInputChange = (value) => {\r\n  //   alert(value);\r\n  // };\r\n\r\n  handleChange = (selectedOption) => {\r\n    console.log(`Option selected:`, selectedOption);\r\n  };\r\n\r\n  loadOptions = (inputValue, callback) => {\r\n    if (inputValue.length > 3 && inputValue.length < 11) {\r\n      getAdpByPhone(inputValue).then(({ data }) => {\r\n        if (data.result && data.result.length > 0) {\r\n          let adpOption = [];\r\n          data.result.forEach((element) => {\r\n            let obj = {\r\n              value: element.adp_id,\r\n              label: `${element.adp_id} - ${element.firstname} ${element.lastname}`,\r\n              name: `${element.firstname} ${element.lastname}`,\r\n              sponsorId: element.sponsor_id,\r\n              sponsorName: element.sponsor_name,\r\n              mobile: element.mobile,\r\n              pan: element.pan,\r\n            };\r\n            adpOption.push(obj);\r\n          });\r\n          this.setState(\r\n            {\r\n              adpOption,\r\n            },\r\n            () => {\r\n              callback(this.state.adpOption);\r\n            }\r\n          );\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.setLoggedInAdpDetails();\r\n  };\r\n\r\n  setLoggedInAdpDetails = () => {\r\n    let { currentAdp, name, updateRepurchaseAdpDetails } = this.props;\r\n    let adpDetail = {\r\n      adpId: currentAdp,\r\n      adpName: name,\r\n    };\r\n    updateRepurchaseAdpDetails(adpDetail);\r\n  };\r\n\r\n  handleChangeSelect = (selectedOption) => {\r\n    if (!selectedOption) return this.setLoggedInAdpDetails();\r\n    let obj = {\r\n      adpId: selectedOption.value,\r\n      adpName: selectedOption.name,\r\n      sponsorId: selectedOption.sponsorId,\r\n      sponsorName: selectedOption.sponsorName,\r\n      mobile: selectedOption.mobile,\r\n      pan: selectedOption.pan,\r\n    };\r\n    this.props.updateRepurchaseAdpDetails(obj);\r\n  };\r\n\r\n  render() {\r\n    let { adpOption } = this.state;\r\n    let { adpName, adpId, sponsorId, sponsorName, mobile, pan } = this.props;\r\n    return (\r\n      <Wrapper className=\"row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-3 row-cols-lg-4\">\r\n        <div className=\"col\">\r\n          <AsyncSelectInput\r\n            label=\"Phone Number\"\r\n            isClearable\r\n            // onInputChange={this.handleInputChange}\r\n            isSearchable\r\n            onChange={this.handleChangeSelect}\r\n            loadOptions={this.loadOptions}\r\n            showLabel\r\n            placeholder=\"Search\"\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          <TextInput\r\n            label=\"ADP ID\"\r\n            type=\"text\"\r\n            value={adpId}\r\n            // onChange={handleChange}\r\n            // onBlur={handleBlur}\r\n            disabled\r\n            showLabel\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          <TextInput\r\n            label=\"ADP Name\"\r\n            type=\"text\"\r\n            value={adpName}\r\n            // onChange={handleChange}\r\n            // onBlur={handleBlur}\r\n            disabled\r\n            showLabel\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col\">\r\n          <TextInput\r\n            label=\"Sponsor ID\"\r\n            type=\"text\"\r\n            value={sponsorId}\r\n            // onChange={handleChange}\r\n            // onBlur={handleBlur}\r\n            disabled\r\n            showLabel\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col\">\r\n          <TextInput\r\n            label=\"Sponsor Name\"\r\n            type=\"text\"\r\n            value={sponsorName}\r\n            // onChange={handleChange}\r\n            // onBlur={handleBlur}\r\n            disabled\r\n            showLabel\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col\">\r\n          <TextInput\r\n            label=\"Mobile\"\r\n            type=\"text\"\r\n            value={mobile}\r\n            // onChange={handleChange}\r\n            // onBlur={handleBlur}\r\n            disabled\r\n            showLabel\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col\">\r\n          <TextInput\r\n            label=\"PAN\"\r\n            type=\"text\"\r\n            value={pan}\r\n            // onChange={handleChange}\r\n            // onBlur={handleBlur}\r\n            disabled\r\n            showLabel\r\n          />\r\n        </div>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    adpId: state.updateRepurchaseAdpDetails.adpId,\r\n    adpName: state.updateRepurchaseAdpDetails.adpName,\r\n    sponsorId: state.updateRepurchaseAdpDetails.sponsorId,\r\n    sponsorName: state.updateRepurchaseAdpDetails.sponsorName,\r\n    mobile: state.updateRepurchaseAdpDetails.mobile,\r\n    pan: state.updateRepurchaseAdpDetails.pan,\r\n    currentAdp: state.updateLoginStatus.adpId,\r\n    name: state.updateLoginStatus.name,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateRepurchaseAdpDetails: bindActionCreators(\r\n      updateRepurchaseAdpDetails,\r\n      dispatch\r\n    ),\r\n  };\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default connector(SelectAdpRepurchase);\r\n\r\nfunction getAdpByPhone(phoneNumber) {\r\n  return axios.get(`/adp/get-adp-by-phone`, {\r\n    params: {\r\n      phone: phoneNumber,\r\n    },\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport PanelHeader from \"components/PanelHeader/PanelHeader\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport BuyProducts from \"components/Forms/BuyProducts\";\r\nimport SelectAdpRepurchase from \"components/Molecule/SelectAdpRepurchase\";\r\n\r\nclass RePurchase extends React.Component {\r\n  state = {\r\n  };\r\n\r\n  toggleBuyProducts = () => {\r\n    this.setState({\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let { showBuyProducts } = this.state;\r\n    return (\r\n      <>\r\n        <PanelHeader size=\"sm\" />\r\n\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col md=\"12\">\r\n\t\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t\t<CardHeader>\r\n                  <h5 className=\"title\">Re Purchase</h5>\r\n                </CardHeader>\r\n                    <SelectAdpRepurchase />\r\n                    <hr></hr>\r\n                    <BuyProducts \r\n                      rePurchase\r\n                    />\r\n                    <hr></hr>\r\n                    \r\n\t\t\t\t\t\t\t\t\r\n                \r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RePurchase;\r\n","import React from \"react\";\r\nimport PanelHeader from \"components/PanelHeader/PanelHeader\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Alert,\r\n} from \"reactstrap\";\r\nimport styled from \"styled-components\";\r\nimport TransactionListItem from \"../components/Atom/TransactionListItem\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n// import { fetchWalletAction } from \"../../redux/actions/wallet\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst style = {\r\n  th: {\r\n    fontSize: \"0.8rem !important\",\r\n    fontWeight: \"400 !important\",\r\n  },\r\n\r\n  table: {\r\n    width: \"99%\",\r\n    margin: \"auto\",\r\n    \".debit\": {\r\n      color: \"red\",\r\n    },\r\n    \".credit\": {\r\n      color: \"green\",\r\n    },\r\n  },\r\n\r\n  contentWrapper: {\r\n    padding: \"0.5rem\"\r\n  },\r\n};\r\n\r\nconst StyledTH = styled(\"th\")(style.th);\r\nconst StyledTable = styled(Table)(style.table);\r\nconst ContentWrapper = styled(\"div\")(style.contentWrapper);\r\n\r\nclass SmartMartStatement extends React.Component {\r\n  state = {};\r\n  render() {\r\n    let { balance, statement } = this.props;\r\n    return (\r\n      <>\r\n        <PanelHeader size=\"sm\" />\r\n        <div className=\"content\">\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <h5 className=\"title\">Smart Mart balance Statement</h5>\r\n                </CardHeader>\r\n                <ContentWrapper>\r\n                  {statement && statement.length > 0 ? (\r\n                    <StyledTable responsive striped bordered hover>\r\n                      <thead className=\"text-primary\">\r\n                        <tr>\r\n                          <StyledTH>Date</StyledTH>\r\n                          <StyledTH>Message</StyledTH>\r\n                          <StyledTH>Amount</StyledTH>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {statement &&\r\n                          statement.map((elm, i) => {\r\n                            return <TransactionListItem data={elm} key={i} />;\r\n                          })}\r\n                      </tbody>\r\n                    </StyledTable>\r\n                  ) : (\r\n                    <Alert color=\"warning\">\r\n                      <span>Nothing to show</span>\r\n                    </Alert>\r\n                  )}\r\n                </ContentWrapper>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    balance: state.fetchSmartMartStatus.balance,\r\n    status: state.fetchSmartMartStatus.status,\r\n    statement: state.fetchSmartMartStatus.statement,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // fetchWalletAction: bindActionCreators(fetchWalletAction, dispatch),\r\n  };\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default connector(withRouter(SmartMartStatement));\r\n","import React from \"react\";\r\nimport PanelHeader from \"components/PanelHeader/PanelHeader\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport Tree from \"react-d3-tree\";\r\nimport { apiHandler } from \"config/apiConfig\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nconst containerStyles = {\r\n  width: \"100%\",\r\n  height: \"100vh\",\r\n};\r\n\r\nclass FamilyTree extends React.Component {\r\n  state = {\r\n    treeData: [\r\n      {\r\n        name: this.props.name,\r\n        attributes: {\r\n          \"ADP ID\": this.props.adpId,\r\n        },\r\n        children: [],\r\n      },\r\n    ],\r\n    isSprinter: false,\r\n    sprintsUnder: [],\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.getTreeData();\r\n  };\r\n\r\n  getTreeData = async () => {\r\n    this.makeCenter();\r\n\r\n    let { treeData } = JSON.parse(JSON.stringify(this.state));\r\n    let { adpId } = this.props;\r\n\r\n    await this.getSprinterData();\r\n    if (this.state.sprintsUnder.includes(adpId.toString())) {\r\n      treeData[0].name += \" (SPRINT)\";\r\n    } else if (this.state.sprintersUnder.includes(adpId.toString())) {\r\n      treeData[0].name += `(SPRINTER - ${this.state.noVouchers}V)`;\r\n    }\r\n    getFrontLineAdp(adpId).then((response) => {\r\n      let children = [];\r\n      response.data.result &&\r\n        response.data.result.forEach((user) => {\r\n          let obj = {};\r\n          obj.name = `${user.firstname} ${user.lastname}`;\r\n          if (this.state.sprinterFrontLines.includes(user.adp_id.toString())) {\r\n            obj.name += \" (SPRINTER LEG)\";\r\n          } else if (\r\n            this.state.sprintsFrontLines.includes(user.adp_id.toString())\r\n          ) {\r\n            obj.name += \" (SPRINT LEG)\";\r\n          }\r\n          obj.attributes = {};\r\n          obj.attributes[\"ADP ID\"] = user.adp_id;\r\n\r\n          children.push(obj);\r\n        });\r\n\r\n      treeData[0].children = children;\r\n      this.setState({\r\n        treeData,\r\n      });\r\n    });\r\n  };\r\n\r\n  getSprinterData = async () => {\r\n    const response = await apiHandler.get(\"/get-sprinter-data\");\r\n    const {\r\n      sprintsUnder,\r\n      sprintersUnder,\r\n      sprintsFrontLines,\r\n      sprinterFrontLines,\r\n      noVouchers,\r\n    } = response.data;\r\n    this.setState({\r\n      sprintsUnder,\r\n      sprintersUnder,\r\n      sprintsFrontLines,\r\n      sprinterFrontLines,\r\n      noVouchers,\r\n    });\r\n  };\r\n\r\n  makeCenter = () => {\r\n    const dimensions = this.treeContainer.getBoundingClientRect();\r\n    this.setState({\r\n      translate: {\r\n        x: dimensions.width / 2,\r\n        y: dimensions.height / 2,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleNodeClick = (nodeObj) => {\r\n    if (!nodeObj._children && nodeObj.depth > 0) {\r\n      this.addChildNode(nodeObj.attributes[\"ADP ID\"], nodeObj.depth);\r\n    }\r\n  };\r\n\r\n  addChildNode = (adpId, depth) => {\r\n    let { treeData } = JSON.parse(JSON.stringify(this.state));\r\n    getFrontLineAdp(adpId).then((response) => {\r\n      let children = [];\r\n      response.data.result &&\r\n        response.data.result.forEach((user) => {\r\n          let obj = {};\r\n          obj.name = `${user.firstname} ${user.lastname}`;\r\n          if (this.state.sprintersUnder.includes(user.adp_id.toString())) {\r\n            obj.name += \" (SPRINTER)\";\r\n          } else if (this.state.sprintsUnder.includes(user.adp_id.toString())) {\r\n            obj.name += \" (SPRINT)\";\r\n          }\r\n          obj.attributes = {};\r\n          obj.attributes[\"ADP ID\"] = user.adp_id;\r\n          children.push(obj);\r\n        });\r\n\r\n      treeData[0].children = children;\r\n      this.findAndUpdateNode(adpId, depth, children);\r\n      // this.setState({\r\n      //   treeData,\r\n      // });\r\n    });\r\n  };\r\n\r\n  findAndUpdateNode = (adpId, depth, children) => {\r\n    let { treeData } = JSON.parse(JSON.stringify(this.state));\r\n    let firstLine = treeData[0].children;\r\n    let lineList = [];\r\n    for (var i = 0; i < depth; i++) {\r\n      lineList = this.findnode(firstLine, adpId, children);\r\n    }\r\n    console.log(lineList);\r\n    treeData[0].children = lineList;\r\n    let originalTreeData = JSON.stringify(this.state.treeData);\r\n    if (originalTreeData != JSON.stringify(treeData)) {\r\n      this.setState({\r\n        treeData,\r\n      });\r\n    }\r\n  };\r\n\r\n  findnode = (lineList, adpId, children) => {\r\n    lineList.forEach((elm, i) => {\r\n      if (elm.children) {\r\n        elm.children.filter((child) => {\r\n          if (child.attributes[\"ADP ID\"] == adpId) {\r\n            if (children.length > 0) {\r\n              child.children = children;\r\n            }\r\n\r\n            return lineList;\r\n          } else {\r\n            if (child.children) {\r\n              this.findnode(child.children, adpId, children);\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        if (elm.attributes[\"ADP ID\"] == adpId) {\r\n          elm.children = children;\r\n          return lineList;\r\n        }\r\n      }\r\n    });\r\n\r\n    return lineList;\r\n  };\r\n\r\n  render() {\r\n    let { treeData } = this.state;\r\n    return (\r\n      <>\r\n        <PanelHeader size=\"sm\" />\r\n        <div className=\"content\">\r\n          <Row style={{ height: \"80vh\" }}>\r\n            <Col md=\"12\">\r\n              <Card style={{ height: \"80%\", overflow: \"hidden\" }}>\r\n                <CardHeader>\r\n                  <h5 className=\"title\">Family Tree</h5>\r\n                </CardHeader>\r\n                <hr></hr>\r\n                <div\r\n                  id=\"treeWrapper\"\r\n                  style={containerStyles}\r\n                  ref={(tc) => (this.treeContainer = tc)}\r\n                >\r\n                  <Tree\r\n                    data={treeData}\r\n                    onClick={this.handleNodeClick}\r\n                    orientation={\"vertical\"}\r\n                    pathFunc=\"step\"\r\n                    shouldCollapseNeighborNodes={true}\r\n                    nodeSize={{ x: 250, y: 250 }}\r\n                    translate={this.state.translate}\r\n                  />\r\n                </div>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction getFrontLineAdp(sponsorId) {\r\n  return apiHandler.get(\"/get-front-line_adp\", {\r\n    params: {\r\n      sponsorId: sponsorId,\r\n    },\r\n  });\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    adpId: state.updateLoginStatus.adpId,\r\n    name: state.updateLoginStatus.name,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // fetchWalletAction: bindActionCreators(fetchWalletAction, dispatch),\r\n  };\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default connector(FamilyTree);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PanelHeader from \"components/PanelHeader/PanelHeader\";\r\nimport { apiHandler } from \"config/apiConfig\";\r\nimport { CardHeader, Card, Row, Col, Table } from \"reactstrap\";\r\n\r\nconst Voucher = () => {\r\n  const [vouchers, setVouchers] = useState([]);\r\n  useEffect(() => {\r\n    fetchVouchers();\r\n  }, []);\r\n\r\n  const fetchVouchers = async () => {\r\n    try {\r\n      const res = await apiHandler.get(`/adp/get-vouchers`);\r\n      setVouchers(res.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <PanelHeader size=\"sm\" />\r\n      <div className=\"content\">\r\n        <Row style={{ height: \"80vh\" }}>\r\n          <Col md=\"12\">\r\n            <Card style={{ minHeight: \"80%\", overflow: \"hidden\" }}>\r\n              <CardHeader>\r\n                <h5 className=\"title\">VOUCHERS</h5>\r\n              </CardHeader>\r\n              <hr />\r\n              {vouchers && vouchers.length ? (\r\n                <Table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>Voucher Code</th>\r\n                      <th>Expiry Date</th>\r\n                      <th>Voucher Type</th>\r\n                      <th>Amount</th>\r\n                      <th></th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {vouchers.map((voucher, index) => (\r\n                      <tr>\r\n                        <th scope=\"row\">{index + 1}</th>\r\n                        <td>{voucher.voucherCode}</td>\r\n                        <td>{voucher.expiryDate}</td>\r\n                        <td>{voucher.voucherType}</td>\r\n                        <td>{voucher.amount}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n              ) : (\r\n                <div>No Vouchers Available</div>\r\n              )}\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Voucher;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col, Table } from \"reactstrap\";\r\nimport { apiHandler } from \"config/apiConfig\";\r\nconst CardDetails = ({ card }) => {\r\n  const [cycles, setCycles] = useState([]);\r\n  useEffect(() => {\r\n    fetchCycles();\r\n  }, []);\r\n  const fetchCycles = async () => {\r\n    try {\r\n      const res = await apiHandler.get(`/adp/get-card-cycles/${card.id}`);\r\n      setCycles(res.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const tableRows = cycles.map((cycle) => (\r\n    <tr key={cycle.cycleId}>\r\n      <td>{cycle.cycleId}</td>\r\n      <td>{cycle.cardIncome}</td>\r\n      <td>{new Date(cycle.date).toLocaleDateString()}</td>\r\n    </tr>\r\n  ));\r\n  const expiryDate = card.expired_on\r\n    ? new Date(card.expired_on).toLocaleDateString()\r\n    : \"NA\";\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row xs=\"2\" className=\"mb-2\">\r\n            <Col xs=\"6\">\r\n              <Row xs=\"2\">\r\n                <Col>Card Type</Col>\r\n                <Col>: {card.card_type}</Col>\r\n              </Row>\r\n            </Col>\r\n            <Col xs=\"6\">\r\n              <Row xs=\"2\">\r\n                <Col>Card ID</Col>\r\n                <Col>: {card.id}</Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row xs=\"2\" className=\"mb-2\">\r\n            <Col xs=\"6\">\r\n              <Row xs=\"2\">\r\n                <Col>Quantity</Col>\r\n                <Col>: {card.qty}</Col>\r\n              </Row>\r\n            </Col>\r\n            <Col xs=\"6\">\r\n              <Row xs=\"2\">\r\n                <Col>Date of Expiry</Col>\r\n                <Col>: {expiryDate}</Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row xs=\"2\">\r\n            <Col xs=\"6\">\r\n              <Row xs=\"2\">\r\n                <Col>Date of Issue</Col>\r\n                <Col>: {new Date(card.created_on).toLocaleDateString()}</Col>\r\n              </Row>\r\n            </Col>\r\n            <Col xs=\"6\"></Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <hr />\r\n      <Row>\r\n        <Col>\r\n          {\" \"}\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Cycle ID</th>\r\n                <th scope=\"col\">Card Income</th>\r\n                <th scope=\"col\">Date</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{tableRows}</tbody>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CardDetails;\r\n","import Dashboard from \"views/Dashboard.js\";\r\nimport Notifications from \"views/Notifications.js\";\r\nimport Icons from \"views/Icons.js\";\r\nimport Typography from \"views/Typography.js\";\r\nimport TableList from \"views/TableList.js\";\r\nimport Maps from \"views/Maps.js\";\r\nimport Upgrade from \"views/Upgrade.js\";\r\nimport UserPage from \"views/UserPage.js\";\r\nimport AddADP from \"views/AddADP\";\r\nimport WalletStatement from \"views/WalletStatement\";\r\nimport RePurchase from \"views/RePurchase\";\r\nimport SmartMartBalanceStatement from \"views/SmartMartBalanceStatement\";\r\nimport FamilyTree from \"views/FamilyTree\";\r\nimport Voucher from \"views/Voucher\";\r\nimport OnePlusCard from \"views/OnePlusCard\";\r\nimport ADPStatement from \"views/ADPStatement\";\r\nvar dashRoutes = [\r\n  {\r\n    path: \"/dashboard\",\r\n    name: \"Dashboard\",\r\n    icon: \"design_app\",\r\n    component: Dashboard,\r\n    layout: \"/adp\",\r\n  },\r\n  // {\r\n  //   path: \"/icons\",\r\n  //   name: \"Icons\",\r\n  //   icon: \"design_image\",\r\n  //   component: Icons,\r\n  //   layout: \"/adp\",\r\n  // },\r\n  {\r\n    path: \"/add-adp\",\r\n    name: \"Add ADP\",\r\n    icon: \"location_map-big\",\r\n    component: AddADP,\r\n    layout: \"/adp\",\r\n  },\r\n  {\r\n    path: \"/wallet-statement\",\r\n    name: \"Wallet Statement\",\r\n    icon: \"business_money-coins\",\r\n    component: WalletStatement,\r\n    layout: \"/adp\",\r\n  },\r\n  {\r\n    path: \"/smart-mart-statement\",\r\n    name: \"Smart Mart Statement\",\r\n    icon: \"business_money-coins\",\r\n    component: SmartMartBalanceStatement,\r\n    layout: \"/adp\",\r\n  },\r\n  {\r\n    path: \"/adp-statement\",\r\n    name: \"ADP Statement\",\r\n    icon: \"business_money-coins\",\r\n    component: ADPStatement,\r\n    layout: \"/adp\",\r\n  },\r\n  {\r\n    path: \"/re-purchase\",\r\n    name: \"Re Purchase\",\r\n    icon: \"business_money-coins\",\r\n    component: RePurchase,\r\n    layout: \"/adp\",\r\n  },\r\n\r\n  {\r\n    path: \"/family-tree\",\r\n    name: \"Tree View\",\r\n    icon: \"business_money-coins\",\r\n    component: FamilyTree,\r\n    layout: \"/adp\",\r\n  },\r\n  {\r\n    path: \"/voucher\",\r\n    name: \"Voucher\",\r\n    icon: \"business_money-coins\",\r\n    component: Voucher,\r\n    layout: \"/adp\",\r\n  },\r\n  {\r\n    path: \"/card\",\r\n    name: \"Card\",\r\n    icon: \"business_money-coins\",\r\n    component: OnePlusCard,\r\n    layout: \"/adp\",\r\n  },\r\n  // {\r\n  //   path: \"/user-page\",\r\n  //   name: \"User Profile\",\r\n  //   icon: \"users_single-02\",\r\n  //   component: UserPage,\r\n  //   layout: \"/adp\",\r\n  // },\r\n  // {\r\n  //   path: \"/extended-tables\",\r\n  //   name: \"Table List\",\r\n  //   icon: \"files_paper\",\r\n  //   component: TableList,\r\n  //   layout: \"/adp\",\r\n  // },\r\n  // {\r\n  //   path: \"/typography\",\r\n  //   name: \"Typography\",\r\n  //   icon: \"design-2_ruler-pencil\",\r\n  //   component: Typography,\r\n  //   layout: \"/adp\",\r\n  // },\r\n  // {\r\n  //   pro: true,\r\n  //   path: \"/upgrade\",\r\n  //   name: \"Upgrade to PRO\",\r\n  //   icon: \"objects_spaceship\",\r\n  //   component: Upgrade,\r\n  //   layout: \"/adp\",\r\n  // },\r\n];\r\nexport default dashRoutes;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PanelHeader from \"components/PanelHeader/PanelHeader\";\r\nimport { apiHandler } from \"config/apiConfig\";\r\nimport {\r\n  CardHeader,\r\n  Card,\r\n  Row,\r\n  Col,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\n\r\nconst ADPStatement = () => {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [cycleHistory, setCycleHistory] = useState([]);\r\n  const [aDPData, setADPData] = useState(null);\r\n  const [statementData, setStatementData] = useState(null);\r\n  const [selectedCycle, setSelectedCycle] = useState(null);\r\n  const [adpStatementColor, setAdpStatementColor] = useState(\"red\");\r\n  const [adpCommision, setAdpCommision] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetchADPData();\r\n    fetchCycleHistory();\r\n  }, []);\r\n\r\n  const fetchCycleHistory = async () => {\r\n    try {\r\n      const res = await apiHandler.get(`/adp/get-cylces`);\r\n      setCycleHistory(res.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const fetchADPData = async () => {\r\n    try {\r\n      const res = await apiHandler.get(`/adp/details`);\r\n      setADPData(res.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const fetchStatementData = async (id) => {\r\n    try {\r\n      const res = await apiHandler.get(`/adp/cycle/${id}`);\r\n      console.log(res.data);\r\n      setStatementData(res.data);\r\n      if (res.data.adpDetails.bv) {\r\n        setAdpStatementColor(\"green\");\r\n      }\r\n      setAdpCommision(\r\n        (res.data.adpDetails.bv * res.data.adpDetails.zone_value) / 100\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n  const handleClick = (cycle) => {\r\n    setSelectedCycle(cycle);\r\n    fetchStatementData(cycle.id);\r\n  };\r\n\r\n  let childBVTotal = 0;\r\n  let comissionTotal = 0;\r\n\r\n  const adjustCalculations = () => {};\r\n  return (\r\n    <>\r\n      <PanelHeader size=\"sm\" />\r\n      <div className=\"content\">\r\n        <Row style={{ height: \"80vh\" }}>\r\n          <Col md=\"12\">\r\n            <Card style={{ minHeight: \"80%\", overflow: \"hidden\" }}>\r\n              <CardHeader>\r\n                <h5 className=\"title\">ADP Statement</h5>\r\n              </CardHeader>\r\n              <hr />\r\n              <div className=\"row\">\r\n                <div className=\"col ml-2\">\r\n                  <Dropdown isOpen={dropdownOpen} toggle={toggle} size=\"lg\">\r\n                    <DropdownToggle caret>Select Cycle</DropdownToggle>\r\n                    <DropdownMenu>\r\n                      {cycleHistory.map((item) => (\r\n                        <DropdownItem\r\n                          key={item.id}\r\n                          onClick={() => handleClick(item)}\r\n                        >\r\n                          {item.toDate}\r\n                        </DropdownItem>\r\n                      ))}\r\n                    </DropdownMenu>\r\n                  </Dropdown>\r\n                </div>\r\n              </div>\r\n              {statementData ? (\r\n                <>\r\n                  <div className=\"row justify-content-center mb-1\">\r\n                    <div className=\"col-4\">\r\n                      ADP ID : {statementData.adpDetails.adp_id}\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                      ADP Name : {aDPData.firstname} {aDPData.lastname}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row justify-content-center mb-1\">\r\n                    <div className=\"col-4\">\r\n                      Sponsor ID : {aDPData.sponsor_id}\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                      Cycle Date : {selectedCycle.toDate}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row justify-content-center mb-1\">\r\n                    <div className=\"col-4\">PAN Card : {aDPData.pan}</div>\r\n                    <div className=\"col-4\">Mobile : {aDPData.mobile}</div>\r\n                  </div>\r\n                  <div className=\"row justify-content-center mb-1\">\r\n                    <div className=\"col-4\">Bank : {aDPData.bank_name}</div>\r\n                    <div className=\"col-4\">Account No : {aDPData.toDate}</div>\r\n                  </div>\r\n                  <div className=\"row justify-content-center\">\r\n                    <div className=\"col-4\">IFSC : {aDPData.ifs_code}</div>\r\n                    <div className=\"col-4\">Branch : {aDPData.branch}</div>\r\n                  </div>\r\n                  <div className=\"row justify-content-center\">\r\n                    <div className=\"col-10\">\r\n                      <hr />\r\n                    </div>\r\n                    <div className=\"col-10 ml-3 font-weight-bold\">\r\n                      Performance Zone Incentive Level :{\" \"}\r\n                      {statementData.adpDetails.zone_value}% (Zone Name)\r\n                    </div>\r\n                    <div className=\"col-10\">\r\n                      <table className=\"table table-borderless\">\r\n                        <tr>\r\n                          <th scope=\"col\">ADP ID</th>\r\n                          <th scope=\"col\">ADP NAME</th>\r\n                          <th scope=\"col\">Level</th>\r\n                          <th scope=\"col\">BV</th>\r\n                          <th scope=\"col\">Difference</th>\r\n                          <th scope=\"col\">Commission</th>\r\n                        </tr>\r\n                        <tbody>\r\n                          <tr key={statementData.adpDetails.adp_id}>\r\n                            <td>\r\n                              <span style={{ color: adpStatementColor }}>\r\n                                {statementData.adpDetails.adp_id}\r\n                              </span>\r\n                            </td>\r\n                            <td>\r\n                              <span style={{ color: adpStatementColor }}>\r\n                                {aDPData.firstname + \" \" + aDPData.lastname}\r\n                              </span>\r\n                            </td>\r\n                            <td>\r\n                              <span style={{ color: adpStatementColor }}>\r\n                                {statementData.adpDetails.zone_value}%\r\n                              </span>\r\n                            </td>\r\n                            <td>\r\n                              <span style={{ color: adpStatementColor }}>\r\n                                {statementData.adpDetails.bv}\r\n                              </span>\r\n                            </td>\r\n                            <td>\r\n                              <span style={{ color: adpStatementColor }}>\r\n                                {statementData.adpDetails.zone_value}%\r\n                              </span>\r\n                            </td>\r\n                            <td>\r\n                              <span style={{ color: adpStatementColor }}>\r\n                                {adpCommision}\r\n                              </span>\r\n                            </td>\r\n                          </tr>\r\n                          {statementData.childeDetails.map((child) => {\r\n                            childBVTotal += child.bv;\r\n                            const difference =\r\n                              statementData.adpDetails.zone_value -\r\n                              child.zone_value;\r\n                            const commision = child.bv * (difference / 100);\r\n                            comissionTotal += commision;\r\n                            return (\r\n                              <tr key={child.adp_id}>\r\n                                <td>{child.adp_id}</td>\r\n                                <td>\r\n                                  {child.firstname + \" \" + child.lastname}\r\n                                </td>\r\n                                <td>{child.zone_value}%</td>\r\n                                <td>{child.bv}</td>\r\n                                <td>{difference}%</td>\r\n                                <td>{commision}</td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                          <tr>\r\n                            <th>Total</th>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <th>{childBVTotal}</th>\r\n                            <td></td>\r\n                            <th>{adpCommision + comissionTotal}</th>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                    <div className=\"col-10\">\r\n                      <hr />\r\n                    </div>\r\n                    <div className=\"col-10 container\">\r\n                      <div className=\"row row-cols-2\">\r\n                        <div className=\"col container\">\r\n                          <div className=\"row mb-1\">\r\n                            <div className=\"col\">Retail Profit</div>\r\n                            <div className=\"col\">\r\n                              : {adpCommision + comissionTotal} Rs\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col container\">\r\n                          <div className=\"row mb-1\">\r\n                            <div className=\"col\">Co-Sponsor Royality</div>\r\n                            <div className=\"col\">\r\n                              : {statementData.adpDetails.co_sponsor_royality}{\" \"}\r\n                              Rs\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col container\">\r\n                          <div className=\"row mb-1\">\r\n                            <div className=\"col\">Champion Club</div>\r\n                            <div className=\"col\">\r\n                              : {statementData.adpDetails.champion_earnings} Rs\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col container\">\r\n                          <div className=\"row mb-1\">\r\n                            <div className=\"col\">1 + 1 = 11 Club</div>\r\n                            <div className=\"col\">\r\n                              : {statementData.adpDetails.oneplus_earnings} Rs\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col container\">\r\n                          <div className=\"row mb-1\">\r\n                            <div className=\"col\">Leaders Club</div>\r\n                            <div className=\"col\">\r\n                              : {statementData.adpDetails.leaders_earnings} Rs\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col container\">\r\n                          <div className=\"row mb-1\">\r\n                            <div className=\"col\"></div>\r\n                            <div className=\"col\"></div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row mb-1\">\r\n                        <div className=\"col-10\">\r\n                          <hr />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row mb-3\">\r\n                        <div className=\"col font-weight-bold\">\r\n                          Total:{\" \"}\r\n                          {statementData.adpDetails.co_sponsor_royality +\r\n                            statementData.adpDetails.champion_earnings +\r\n                            statementData.adpDetails.oneplus_earnings +\r\n                            statementData.adpDetails.leaders_earnings +\r\n                            adpCommision +\r\n                            comissionTotal}{\" \"}\r\n                          Rs\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ADPStatement;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PanelHeader from \"components/PanelHeader/PanelHeader\";\r\nimport { apiHandler } from \"config/apiConfig\";\r\nimport {\r\n  CardHeader,\r\n  Card,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n} from \"reactstrap\";\r\nimport CardDetails from \"components/Molecule/CardDetails\";\r\n\r\nconst OnePlusCard = () => {\r\n  const [cards, setCards] = useState([]);\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState(null);\r\n  useEffect(() => {\r\n    fetchCards();\r\n  }, []);\r\n\r\n  const openDetails = (card) => {\r\n    setSelectedCard(card);\r\n    setModelOpen(true);\r\n  };\r\n\r\n  const closeModel = () => setModelOpen(false);\r\n\r\n  const fetchCards = async () => {\r\n    try {\r\n      const res = await apiHandler.get(`/adp/get-cards`);\r\n      setCards(res.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <PanelHeader size=\"sm\" />\r\n      <div className=\"content\">\r\n        <Row style={{ height: \"80vh\" }}>\r\n          <Col md=\"12\">\r\n            <Card style={{ minHeight: \"80%\", overflow: \"hidden\" }}>\r\n              <CardHeader>\r\n                <h5 className=\"title\">CARDS</h5>\r\n              </CardHeader>\r\n              <hr />\r\n              {cards && cards.length ? (\r\n                <Table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>Type</th>\r\n                      <th>Quantity</th>\r\n                      <th>Issued Date</th>\r\n                      <th>Cycles To Expire</th>\r\n                      <th>Status</th>\r\n                      <th></th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {cards.map((card, index) => (\r\n                      <tr key={index}>\r\n                        <th scope=\"row\">{index + 1}</th>\r\n                        <td>{card.card_type}</td>\r\n                        <td>{card.qty}</td>\r\n                        <td>{new Date(card.created_on).toLocaleString()}</td>\r\n                        <td>\r\n                          {card.valid_till > 0\r\n                            ? card.valid_till + \" Cycles\"\r\n                            : \"NA\"}\r\n                        </td>\r\n                        <td>{card.expiry_cycle ? \"INACTIVE\" : \"ACTIVE\"}</td>\r\n                        <td>\r\n                          <Button onClick={() => openDetails(card)}>\r\n                            Details\r\n                          </Button>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n              ) : (\r\n                <div>No Vouchers Available</div>\r\n              )}\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <Modal isOpen={modelOpen} toggle={closeModel} size=\"lg\">\r\n        <ModalHeader>Card Details</ModalHeader>\r\n        <ModalBody>\r\n          <CardDetails card={selectedCard} />\r\n        </ModalBody>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OnePlusCard;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst style = {\r\n  wrapper: {\r\n    display: \"block\",\r\n    marginLeft: \"7rem\",\r\n  },\r\n  label: {\r\n    marginLeft: \"0.5rem\",\r\n  },\r\n  icon: {\r\n    fontSize: \"1.5rem\",\r\n    verticalAlign: \"middle\",\r\n  },\r\n};\r\n\r\nconst WalletWrapper = styled(\"div\")(style.wrapper);\r\nconst WalletLabel = styled(\"span\")(style.label);\r\nconst WalletIcon = styled(\"i\")(style.icon);\r\n\r\nclass WalletNavItem extends React.Component {\r\n  render() {\r\n    let { walletBalance } = this.props;\r\n    return (\r\n      <WalletWrapper>\r\n        <WalletIcon className=\"now-ui-icons business_money-coins\" />\r\n        <WalletLabel>Wallet Balance: {walletBalance}</WalletLabel>\r\n      </WalletWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WalletNavItem;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { fetchSmartMartAction } from \"../../redux/actions/smartMart\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst style = {\r\n  wrapper: {\r\n    display: \"block\",\r\n    marginTop: \"1rem\",\r\n    marginLeft: \"7rem\",\r\n  },\r\n  label: {\r\n    marginLeft: \"0.5rem\",\r\n  },\r\n  icon: {\r\n    fontSize: \"1.5rem\",\r\n    verticalAlign: \"middle\",\r\n  },\r\n};\r\n\r\nconst SmartMartWrapper = styled(\"div\")(style.wrapper);\r\nconst SmartMartLabel = styled(\"span\")(style.label);\r\nconst SmartMartIcon = styled(\"i\")(style.icon);\r\n\r\nclass SmartMartNavItem extends React.Component {\r\n  componentDidMount = () => {\r\n    this.props.fetchSmartMartAction();\r\n  };\r\n\r\n  render() {\r\n    let { balance, status } = this.props;\r\n    return (\r\n      <SmartMartWrapper>\r\n        <SmartMartIcon className=\"now-ui-icons business_money-coins\" />\r\n        <SmartMartLabel>Smart Mart Balance: {balance}</SmartMartLabel>\r\n      </SmartMartWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    balance: state.fetchSmartMartStatus.balance,\r\n    status: state.fetchSmartMartStatus.status,\r\n    statement: state.fetchSmartMartStatus.statement,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchSmartMartAction: bindActionCreators(fetchSmartMartAction, dispatch),\r\n  };\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default connector(withRouter(SmartMartNavItem));\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ADPDetails = () => {\r\n  const style = {\r\n    idWrapper: {\r\n      display: \"block\",\r\n    },\r\n    nameWrapper: {\r\n      display: \"block\",\r\n      marginTop: \"1rem\",\r\n    },\r\n    label: {\r\n      marginLeft: \"0.5rem\",\r\n    },\r\n    icon: {\r\n      fontSize: \"1.5rem\",\r\n      verticalAlign: \"middle\",\r\n    },\r\n  };\r\n  const ADPIdWrapper = styled(\"div\")(style.idWrapper);\r\n  const ADPNameWrapper = styled(\"div\")(style.nameWrapper);\r\n  const ADPDetailsLabel = styled(\"span\")(style.label);\r\n  const ADPDetailsIcon = styled(\"i\")(style.icon);\r\n\r\n  const { adpId, name } = useSelector((state) => state.updateLoginStatus);\r\n  return (\r\n    <div>\r\n      <ADPIdWrapper>\r\n        <ADPDetailsIcon className=\"now-ui-icons business_money-coins\" />\r\n        <ADPDetailsLabel>ADP ID: {adpId}</ADPDetailsLabel>\r\n      </ADPIdWrapper>\r\n      <ADPNameWrapper>\r\n        <ADPDetailsIcon className=\"now-ui-icons business_money-coins\" />\r\n        <ADPDetailsLabel>ADP Name: {name}</ADPDetailsLabel>\r\n      </ADPNameWrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ADPDetails;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Container,\r\n  InputGroup,\r\n  InputGroupText,\r\n  InputGroupAddon,\r\n  Input,\r\n} from \"reactstrap\";\r\n\r\nimport routes from \"routes.js\";\r\nimport WalletNavItem from \"components/Atom/WalletNavItem\";\r\nimport { apiHandler } from \"config/apiConfig\";\r\nimport SmartMartNavItem from \"components/Atom/SmartMartNavItem\";\r\nimport ADPDetails from \"components/Atom/ADPDetails\";\r\n\r\nclass Header extends React.Component {\r\n  state = {\r\n    isOpen: false,\r\n    dropdownOpen: false,\r\n    color: \"transparent\",\r\n  };\r\n  sidebarToggle = React.createRef();\r\n  toggle = () => {\r\n    if (this.state.isOpen) {\r\n      this.setState({\r\n        color: \"transparent\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        color: \"white\",\r\n      });\r\n    }\r\n    this.setState({\r\n      isOpen: !this.state.isOpen,\r\n    });\r\n  };\r\n  dropdownToggle = (e) => {\r\n    this.setState({\r\n      dropdownOpen: !this.state.dropdownOpen,\r\n    });\r\n  };\r\n  getBrand = () => {\r\n    var name;\r\n    routes.map((prop, key) => {\r\n      if (prop.collapse) {\r\n        prop.views.map((prop, key) => {\r\n          if (prop.path === this.props.location.pathname) {\r\n            name = prop.name;\r\n          }\r\n          return null;\r\n        });\r\n      } else {\r\n        if (prop.redirect) {\r\n          if (prop.path === this.props.location.pathname) {\r\n            name = prop.name;\r\n          }\r\n        } else {\r\n          if (prop.path === this.props.location.pathname) {\r\n            name = prop.name;\r\n          }\r\n        }\r\n      }\r\n      return null;\r\n    });\r\n    return name;\r\n  };\r\n  openSidebar = () => {\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n    this.sidebarToggle.current.classList.toggle(\"toggled\");\r\n  };\r\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\r\n  updateColor = () => {\r\n    if (window.innerWidth < 993 && this.state.isOpen) {\r\n      this.setState({\r\n        color: \"white\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        color: \"transparent\",\r\n      });\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.updateColor.bind(this));\r\n  }\r\n  componentDidUpdate(e) {\r\n    if (\r\n      window.innerWidth < 993 &&\r\n      e.history.location.pathname !== e.location.pathname &&\r\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n    ) {\r\n      document.documentElement.classList.toggle(\"nav-open\");\r\n      this.sidebarToggle.current.classList.toggle(\"toggled\");\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      // add or remove classes depending if we are on full-screen-maps page or not\r\n      <Navbar\r\n        color={\r\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\r\n            ? \"white\"\r\n            : this.state.color\r\n        }\r\n        expand=\"lg\"\r\n        className={\r\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\r\n            ? \"navbar-absolute fixed-top\"\r\n            : \"navbar-absolute fixed-top \" +\r\n              (this.state.color === \"transparent\" ? \"navbar-transparent \" : \"\")\r\n        }\r\n      >\r\n        <Container fluid>\r\n          <div className=\"navbar-wrapper\">\r\n            <div className=\"navbar-toggle\">\r\n              <button\r\n                type=\"button\"\r\n                ref={this.sidebarToggle}\r\n                className=\"navbar-toggler\"\r\n                onClick={() => this.openSidebar()}\r\n              >\r\n                <span className=\"navbar-toggler-bar bar1\" />\r\n                <span className=\"navbar-toggler-bar bar2\" />\r\n                <span className=\"navbar-toggler-bar bar3\" />\r\n              </button>\r\n            </div>\r\n            <NavbarBrand href=\"/\">{this.getBrand()}</NavbarBrand>\r\n          </div>\r\n          <ADPDetails />\r\n          <div>\r\n            <WalletNavItem walletBalance={this.props.walletBalance} />\r\n            <SmartMartNavItem />\r\n          </div>\r\n          <NavbarToggler onClick={this.toggle}>\r\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n          </NavbarToggler>\r\n\r\n          <Collapse\r\n            isOpen={this.state.isOpen}\r\n            navbar\r\n            className=\"justify-content-end\"\r\n          >\r\n            <form>\r\n              <InputGroup className=\"no-border\">\r\n                <Input placeholder=\"Search...\" />\r\n                <InputGroupAddon addonType=\"append\">\r\n                  <InputGroupText>\r\n                    <i className=\"now-ui-icons ui-1_zoom-bold\" />\r\n                  </InputGroupText>\r\n                </InputGroupAddon>\r\n              </InputGroup>\r\n            </form>\r\n            <Nav navbar>\r\n              <NavItem>\r\n                <Link to=\"#pablo\" className=\"nav-link\">\r\n                  <i className=\"now-ui-icons media-2_sound-wave\" />\r\n                  <p>\r\n                    <span className=\"d-lg-none d-md-block\">Stats</span>\r\n                  </p>\r\n                </Link>\r\n              </NavItem>\r\n              <Dropdown\r\n                nav\r\n                isOpen={this.state.dropdownOpen}\r\n                toggle={(e) => this.dropdownToggle(e)}\r\n              >\r\n                <DropdownToggle caret nav>\r\n                  <i className=\"now-ui-icons location_world\" />\r\n                  <p>\r\n                    <span className=\"d-lg-none d-md-block\">Actions</span>\r\n                  </p>\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                  {/* <DropdownItem tag=\"a\">Action</DropdownItem>\r\n                  <DropdownItem tag=\"a\">Another Action</DropdownItem> */}\r\n                  <DropdownItem\r\n                    tag=\"button\"\r\n                    onClick={() => {\r\n                      logoutApi().then(() => {\r\n                        window.location.href = `${window.location.origin}/adp`;\r\n                      });\r\n                    }}\r\n                  >\r\n                    Logout\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </Dropdown>\r\n              <NavItem>\r\n                <Link to=\"#pablo\" className=\"nav-link\">\r\n                  <i className=\"now-ui-icons users_single-02\" />\r\n                  <p>\r\n                    <span className=\"d-lg-none d-md-block\">Account</span>\r\n                  </p>\r\n                </Link>\r\n              </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n\r\nfunction logoutApi(body) {\r\n  return apiHandler.post(`/logout`, body).catch((err) => {\r\n    console.log(err);\r\n  });\r\n}\r\n","\r\n/*eslint-disable*/\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Nav } from \"reactstrap\";\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\n\r\nimport logo from \"impact1.png\";\r\n\r\nvar ps;\r\n\r\nclass Sidebar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.activeRoute.bind(this);\r\n  }\r\n  // verifies if routeName is the one active (in browser input)\r\n  activeRoute(routeName) {\r\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\r\n  }\r\n  componentDidMount() {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps = new PerfectScrollbar(this.refs.sidebar, {\r\n        suppressScrollX: true,\r\n        suppressScrollY: false,\r\n      });\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps.destroy();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"sidebar\" data-color={this.props.backgroundColor}>\r\n        <div className=\"logo\">\r\n          <a\r\n            href=\"#\"\r\n            className=\"simple-text logo-mini\"\r\n            target=\"_blank\"\r\n          >\r\n            <div className=\"logo-img\">\r\n              <img src={logo} alt=\"react-logo\" />\r\n            </div>\r\n          </a>\r\n      \r\n        </div>\r\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\r\n          <Nav>\r\n            {this.props.routes.map((prop, key) => {\r\n              if (prop.redirect) return null;\r\n              return (\r\n                <li\r\n                  className={\r\n                    this.activeRoute(prop.layout + prop.path) +\r\n                    (prop.pro ? \" active active-pro\" : \"\")\r\n                  }\r\n                  key={key}\r\n                >\r\n                  <NavLink\r\n                    to={prop.layout + prop.path}\r\n                    className=\"nav-link\"\r\n                    activeClassName=\"active\"\r\n                  >\r\n                    <i className={\"now-ui-icons \" + prop.icon} />\r\n                    <p>{prop.name}</p>\r\n                  </NavLink>\r\n                </li>\r\n              );\r\n            })}\r\n          </Nav>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","\r\n/*eslint-disable*/\r\nimport React from \"react\";\r\nimport { Container } from \"reactstrap\";\r\n// used for making the prop types of this component\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <footer\r\n        className={\"footer\" + (this.props.default ? \" footer-default\" : \"\")}\r\n      >\r\n        {/* <Container fluid={this.props.fluid ? true : false}>\r\n          <nav>\r\n            <ul>\r\n              <li>\r\n                <a\r\n                  href=\"https://www.creative-tim.com?ref=nudr-footer\"\r\n                  target=\"_blank\"\r\n                >\r\n                  Creative Tim\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a\r\n                  href=\"https://presentation.creative-tim.com?ref=nudr-footer\"\r\n                  target=\"_blank\"\r\n                >\r\n                  About Us\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a\r\n                  href=\"https://blog.creative-tim.com?ref=nudr-footer\"\r\n                  target=\"_blank\"\r\n                >\r\n                  Blog\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n          <div className=\"copyright\">\r\n            &copy; {1900 + new Date().getYear()}, Designed by{\" \"}\r\n            <a\r\n              href=\"https://www.invisionapp.com\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Invision\r\n            </a>\r\n            . Coded by{\" \"}\r\n            <a\r\n              href=\"https://www.creative-tim.com?ref=nudr-footer\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Creative Tim\r\n            </a>\r\n            .\r\n          </div>\r\n        </Container> */}\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nFooter.propTypes = {\r\n  default: PropTypes.bool,\r\n  fluid: PropTypes.bool,\r\n};\r\n\r\nexport default Footer;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    padding: 0;\r\n    margin: 0;\r\n    font-family: 'Montserrat', sans-serif;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  input:-webkit-autofill {\r\n    background-color: red !important;\r\n  }\r\n\r\n  /* Chrome, Safari, Edge, Opera */\r\ninput::-webkit-outer-spin-button,\r\ninput::-webkit-inner-spin-button {\r\n  -webkit-appearance: none;\r\n  margin: 0;\r\n}\r\n\r\n/* Firefox */\r\ninput[type=number] {\r\n  -moz-appearance: textfield;\r\n}\r\n\r\n/* The emerging W3C standard\r\n   that is currently Firefox-only */\r\n* {\r\n  scrollbar-width: thin;\r\n  scrollbar-color: black rgba(0, 0, 0, 0.25882352941176473);;\r\n}\r\n\r\n/* Works on Chrome/Edge/Safari */\r\n*::-webkit-scrollbar {\r\n  width: 12px;\r\n}\r\n*::-webkit-scrollbar-track {\r\n  background: rgba(0, 0, 0, 0.25882352941176473);;\r\n}\r\n*::-webkit-scrollbar-thumb {\r\n  background-color: black;\r\n  // border-radius: 20px;\r\n  border: 3px solid rgba(0, 0, 0, 0.25882352941176473);;\r\n}\r\n\r\n.rdg-cell{\r\n  overflow: visible;\r\n}\r\n\r\n.rdg{\r\n  height: auto !important;\r\n  min-height: 100px;\r\n}\r\n\r\n.react-datepicker-wrapper{\r\n  position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n}\r\n\r\n.react-datepicker-wrapper .react-datepicker__input-container input{\r\n  width: 100%;\r\n  height: 31px;\r\n  border: 0px solid;\r\n}\r\n`\r\n\r\nexport default GlobalStyle;","import React from \"react\";\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\n\r\n// reactstrap components\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\n// core components\r\nimport Navbar from \"components/Navbars/Navbar.js\";\r\nimport Footer from \"components/Footer/Footer.js\";\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\n// import FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\r\n\r\nimport routes from \"routes.js\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport GlobalStyle from \"utils/GlobalStyles\";\r\nimport { apiHandler } from \"config/apiConfig\";\r\n\r\nvar ps;\r\n\r\nclass Dashboard extends React.Component {\r\n  state = {\r\n    backgroundColor: \"red\",\r\n    walletBalance: 0,\r\n    currUrl: \"\",\r\n  };\r\n  mainPanel = React.createRef();\r\n  componentDidMount() {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps = new PerfectScrollbar(this.mainPanel.current);\r\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\r\n    }\r\n    if (this.state.currUrl !== window.location.href) {\r\n      this.setState({ currUrl: window.location.href });\r\n      this.getWalletBalance();\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps.destroy();\r\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\r\n    }\r\n  }\r\n  componentDidUpdate(e) {\r\n    if (e.history.action === \"PUSH\") {\r\n      document.documentElement.scrollTop = 0;\r\n      document.scrollingElement.scrollTop = 0;\r\n      this.mainPanel.current.scrollTop = 0;\r\n    }\r\n    if (this.state.currUrl !== window.location.href) {\r\n      this.setState({ currUrl: window.location.href });\r\n      this.getWalletBalance();\r\n    }\r\n  }\r\n  handleColorClick = (color) => {\r\n    this.setState({ backgroundColor: color });\r\n  };\r\n\r\n  getWalletBalance = async () => {\r\n    const response = await apiHandler.get(\"/wallet-balance\");\r\n    this.setState({\r\n      walletBalance: response.data.balance,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        {!this.props.authenticated && <Redirect from=\"/adp\" to=\"/login\" />}\r\n        <GlobalStyle />\r\n        <Sidebar\r\n          {...this.props}\r\n          routes={routes}\r\n          backgroundColor={this.state.backgroundColor}\r\n        />\r\n        <ToastContainer />\r\n        <div className=\"main-panel\" ref={this.mainPanel}>\r\n          <Navbar {...this.props} walletBalance={this.state.walletBalance} />\r\n          <Switch>\r\n            {routes.map((prop, key) => {\r\n              return (\r\n                <Route\r\n                  path={prop.layout + prop.path}\r\n                  component={prop.component}\r\n                  key={key}\r\n                />\r\n              );\r\n            })}\r\n            <Redirect from=\"/adp\" to=\"/adp/dashboard\" />\r\n          </Switch>\r\n          <Footer fluid />\r\n        </div>\r\n        {/* <FixedPlugin\r\n          bgColor={this.state.backgroundColor}\r\n          handleColorClick={this.handleColorClick}\r\n        /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authenticated: state.updateLoginStatus.authenticated,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // updateAdpData: bindActionCreators(updateAdpData, dispatch),\r\n    // fetchWalletAction: bindActionCreators(fetchWalletAction, dispatch),\r\n  };\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default connector(Dashboard);\r\n","export const size = { \r\n    mobileS: '320px', \r\n    mobileM: '375px', \r\n    mobileL: '425px', \r\n    tablet: '768px', \r\n    laptop: '1024px',\r\n    laptopL: '1440px', \r\n    desktop: '2560px' \r\n}","import { size } from \"./breakPoints\"; \r\nexport const device = { \r\n    mobileS: `@media (min-width: ${size.mobileS})`, \r\n    mobileM: `@media (min-width: ${size.mobileM})`, \r\n    mobileL: `@media (min-width: ${size.mobileL})`, \r\n    // mobileLPortrait: `@media (min-width: ${size.mobileL}) and (max-height: 375px) and ((orientation: landscape))`, \r\n    tablet: `@media (min-width: ${size.tablet})`, \r\n    laptop: `@media (min-width: ${size.laptop})`, \r\n    laptopL: `@media (min-width: ${size.laptopL})`, \r\n    desktop: `@media (min-width: ${size.desktop})`, \r\n    desktopL: `@media (min-width: ${size.desktop})`\r\n};","import {\r\n  UPDATE_LOGIN_INITIATE,\r\n  UPDATE_LOGIN_FAILED,\r\n  UPDATE_LOGIN_SUCCESS,\r\n  UPDATE_LOGOUT_SUCCESS,\r\n} from \"../constants/login\";\r\nimport { apiHandler } from \"config/apiConfig\";\r\n\r\nexport const updateLoginInitiate = (data) => {\r\n  return {\r\n    type: UPDATE_LOGIN_INITIATE,\r\n  };\r\n};\r\n\r\nexport const updateLoginSuccess = (data) => {\r\n  return {\r\n    type: UPDATE_LOGIN_SUCCESS,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const updateLoginFailed = (data) => {\r\n  return {\r\n    type: UPDATE_LOGIN_FAILED,\r\n  };\r\n};\r\n\r\nexport const updateLogoutSuccess = (data) => {\r\n  return {\r\n    type: UPDATE_LOGOUT_SUCCESS,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const loginAction = (body, cb) => {\r\n  return (dispatch) => {\r\n    dispatch(updateLoginInitiate());\r\n    return loginApi(body)\r\n      .then((response) => {\r\n        if (response) {\r\n          dispatch(updateLoginSuccess(response));\r\n          cb();\r\n        } else {\r\n          dispatch(updateLoginFailed());\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(updateLoginFailed());\r\n      });\r\n  };\r\n};\r\n\r\nexport const logoutAction = (body) => {\r\n  return (dispatch) => {\r\n    return logoutApi(body)\r\n      .then((response) => {\r\n        dispatch(updateLogoutSuccess(response));\r\n        window.location = \"/login\";\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n};\r\n\r\nfunction loginApi(body) {\r\n  return apiHandler.post(`/login`, body).catch((err) => {\r\n    console.log(err);\r\n  });\r\n}\r\n\r\nfunction logoutApi(body) {\r\n  return apiHandler.post(`/logout`, body).catch((err) => {\r\n    console.log(err);\r\n  });\r\n}\r\n","export const UPDATE_LOGIN_INITIATE = \"UPDATE_LOGIN_INITIATE\";\r\nexport const UPDATE_LOGIN_FAILED = \"UPDATE_LOGIN_FAILED\";\r\nexport const UPDATE_LOGIN_SUCCESS = \"UPDATE_LOGIN_SUCCESS\";\r\nexport const UPDATE_LOGOUT_SUCCESS = \"UPDATE_LOGOUT_SUCCESS\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TextInput from \"components/Input/TextInput\";\r\nimport { Button } from \"reactstrap\";\r\nimport Logo from \"../impact1.png\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport GlobalStyle from \"utils/GlobalStyles\";\r\nimport { device } from \"../utils/mediaQueries/device\";\r\nimport { loginAction, updateLoginSuccess } from \"../redux/actions/login\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { apiHandler } from \"config/apiConfig\";\r\n\r\nconst style = {\r\n  loginContainer: {\r\n    height: \"100vh\",\r\n    position: \"relative\",\r\n  },\r\n\r\n  form: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    background: \"rgba(0, 0, 0, 0.4588235294117647)\",\r\n    padding: \"5rem 2rem\",\r\n    width: \"90%\",\r\n    [device.tablet]: {\r\n      maxWidth: \"370px\",\r\n    },\r\n  },\r\n  bg: {\r\n    height: \"100%\",\r\n    backgroundSize: \"cover\",\r\n    background: \"radial-gradient(rgb(245, 255, 0), red)\",\r\n  },\r\n  input: {\r\n    background: \"white\",\r\n  },\r\n  logo: {\r\n    display: \"block\",\r\n  },\r\n\r\n  button: {\r\n    width: \"100%\",\r\n  },\r\n};\r\n\r\nconst LoginContainer = styled(\"div\")(style.loginContainer);\r\nconst LoginFormWrapper = styled(\"div\")(style.form);\r\nconst BackgroundImage = styled(\"div\")(style.bg);\r\nconst Input = styled(TextInput)(style.input);\r\nconst LogoComponent = styled(\"img\")(style.logo);\r\nconst StyledButton = styled(Button)(style.button);\r\n\r\nclass Login extends React.Component {\r\n  state = {\r\n    showForgotForm: false,\r\n    sentOtp: false,\r\n    validating: true,\r\n  };\r\n\r\n  toggleForgot = () => {\r\n    this.setState({\r\n      showForgotForm: !this.state.showForgotForm,\r\n    });\r\n  };\r\n\r\n  handlerLogin = (body) => {\r\n    this.props.loginAction(body, this.navigateToDashboard).then((response) => {\r\n      if (this.props.status === \"success\") this.props.history.push(\"/adp\")\r\n      else alert(\"Please check username and password.\")\r\n    })\r\n  };\r\n\r\n  navigateToDashboard = () => {\r\n    this.props.history.push(\"/adp/dashboard\")\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    if (!this.props.authenticated) {\r\n      validateToken().then((response) => {\r\n        if (response.data.status === \"success\") {\r\n          this.props.updateLoginSuccess(response.data)\r\n          this.props.history.push(\"/adp/dashboard\")\r\n        } else {\r\n          this.setState({\r\n            validating: false,\r\n          })\r\n        }\r\n      })\r\n    }\r\n    \r\n  }\r\n\r\n  render() {\r\n    let { showForgotForm, sentOtp } = this.state;\r\n    return (\r\n      <div className=\"limiter\">\r\n        <GlobalStyle />\r\n        <LoginContainer className=\"container-login100\">\r\n          <BackgroundImage\r\n            className=\"login100-more\"\r\n            // style={{\r\n            //   backgroundImage:\r\n            //     \"url(https://images.unsplash.com/photo-1502945015378-0e284ca1a5be?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80)\",\r\n            // }}\r\n          ></BackgroundImage>\r\n          <LoginFormWrapper className=\"wrap-login100\">\r\n            <LogoComponent src={Logo} />\r\n            <br></br>\r\n\r\n            {showForgotForm ? (\r\n              sentOtp ? (\r\n                <generateNewPassword />\r\n              ) : (\r\n                <ForgotPasswordForm toggleForgot={this.toggleForgot} />\r\n              )\r\n            ) : (\r\n              <LoginForm\r\n                toggleForgot={this.toggleForgot}\r\n                handlerLogin={this.handlerLogin}\r\n              />\r\n            )}\r\n          </LoginFormWrapper>\r\n        </LoginContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    status: state.updateLoginStatus.status,\r\n    authenticated: state.updateLoginStatus.authenticated,\r\n    // password: state.updateLoginStatus.password,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    loginAction: bindActionCreators(loginAction, dispatch),\r\n    updateLoginSuccess: bindActionCreators(updateLoginSuccess, dispatch),\r\n  };\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default withRouter(connector(Login));\r\n\r\nclass LoginForm extends React.Component {\r\n  render() {\r\n    let { handlerLogin, toggleForgot } = this.props;\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          adpId: \"\",\r\n          password: \"\",\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          adpId: Yup.number().typeError('Username must be a number')\r\n            .positive(\"please enter a valid adp ID\")\r\n            .required(\"Required\"),\r\n\r\n          password: Yup.string().required(\"Please enter password\"),\r\n        })}\r\n        onSubmit={async (values) => {\r\n          await new Promise((resolve) => setTimeout(resolve, 500));\r\n          handlerLogin(values)\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          getFieldProps,\r\n          setFieldValue,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n          /* and other goodies */\r\n        }) => (\r\n          <form onSubmit={handleSubmit} className=\"login100-form validate-form\">\r\n            <div\r\n              className=\"wrap-input100 rs1-wrap-input100 validate-input m-b-20\"\r\n              data-validate=\"Type user name\"\r\n            >\r\n              {errors.adpId && touched.adpId && (\r\n                            <div className=\"input-feedback\">{errors.adpId}</div>\r\n                        )}\r\n              <Input\r\n                label=\"Adp ID\"\r\n                id=\"adpId\"\r\n                type=\"text\"\r\n                value={values.adpId}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                className={\r\n                  errors.adpId && touched.adpId\r\n                    ? \"text-input error\"\r\n                    : \"text-input\"\r\n                }\r\n                showLabel={false}\r\n              />\r\n              \r\n              <span className=\"focus-input100\"></span>\r\n            </div>\r\n            <div\r\n              className=\"wrap-input100 rs2-wrap-input100 validate-input m-b-20\"\r\n              data-validate=\"Type password\"\r\n            >\r\n              <Input\r\n                label=\"Password\"\r\n                id=\"password\"\r\n                type=\"password\"\r\n                value={values.password}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                className={\r\n                  errors.password && touched.password\r\n                    ? \"text-input error\"\r\n                    : \"text-input\"\r\n                }\r\n                showLabel={false}\r\n              />\r\n              <span className=\"focus-input100\"></span>\r\n            </div>\r\n\r\n            <div className=\"container-login100-form-btn\">\r\n              <StyledButton\r\n                className=\"login100-form-btn\"\r\n                color=\"danger\"\r\n                type=\"submit\"\r\n                // size=\"lg\"\r\n                disabled={isSubmitting}\r\n              >\r\n                Sign in\r\n              </StyledButton>\r\n            </div>\r\n\r\n            <div className=\"w-full text-center p-t-27 p-b-239\">\r\n              <span className=\"txt1\"></span>\r\n\r\n              <a href=\"#\" className=\"txt2\" onClick={toggleForgot}>\r\n                Forgot password?\r\n              </a>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  }\r\n}\r\n\r\nconst ForgotPasswordForm = (props) => {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        adpId: \"\",\r\n        mobile: \"\",\r\n        email: \"\",\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        adpId: Yup.number()\r\n          .positive(\"please enter number greater than 0\")\r\n          .required(\"Required\"),\r\n\r\n        mobile: Yup.number()\r\n          .required(\"Required\")\r\n          .test(\r\n            \"len\",\r\n            \"Must be exactly 10 digits\",\r\n            (val) => val && val.toString().length === 10\r\n          ),\r\n        email: Yup.string().email(\"Invalid email address\"),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        getFieldProps,\r\n        setFieldValue,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        /* and other goodies */\r\n      }) => (\r\n        <form onSubmit={handleSubmit} className=\"form-group\">\r\n          <div className=\"w-full text-center p-t-27 p-b-239\">\r\n            <Input\r\n              label=\"ADP ID\"\r\n              id=\"adpId\"\r\n              type=\"text\"\r\n              value={values.adpId}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              className={\r\n                errors.adpId && touched.adpId\r\n                  ? \"text-input error\"\r\n                  : \"text-input\"\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <div className=\"w-full text-center p-t-27 p-b-239\">\r\n            <Input\r\n              label=\"Mobile Number\"\r\n              id=\"mobile\"\r\n              type=\"number\"\r\n              value={values.mobile}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              className={\r\n                errors.mobile && touched.mobile\r\n                  ? \"text-input error\"\r\n                  : \"text-input\"\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <div className=\"w-full text-center p-t-27 p-b-239\">\r\n            <Input\r\n              label=\"Email\"\r\n              id=\"email\"\r\n              type=\"text\"\r\n              value={values.email}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              className={\r\n                errors.email && touched.email\r\n                  ? \"text-input error\"\r\n                  : \"text-input\"\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <StyledButton color=\"danger\" type=\"submit\" disabled={isSubmitting}>\r\n            Next\r\n          </StyledButton>\r\n\r\n          <div className=\"w-full text-center p-t-27 p-b-239\">\r\n            <span className=\"txt1\"></span>\r\n\r\n            <a href=\"#\" className=\"txt2\" onClick={props.toggleForgot}>\r\n              Sign in instead?\r\n            </a>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst generateNewPassword = (props) => {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        adpId: \"\",\r\n        otp: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        adpId: Yup.number()\r\n          .positive(\"please enter number greater than 0\")\r\n          .required(\"Required\"),\r\n\r\n        mobile: Yup.number()\r\n          .required(\"Required\")\r\n          .test(\r\n            \"len\",\r\n            \"Must be exactly 10 digits\",\r\n            (val) => val && val.toString().length === 10\r\n          ),\r\n        email: Yup.string().email(\"Invalid email address\"),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        getFieldProps,\r\n        setFieldValue,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        /* and other goodies */\r\n      }) => (\r\n        <form onSubmit={handleSubmit} className=\"form-group\">\r\n          <div className=\"w-full text-center p-t-27 p-b-239\">\r\n            <Input\r\n              label=\"ADP ID\"\r\n              id=\"adpId\"\r\n              type=\"text\"\r\n              value={values.adpId}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              className={\r\n                errors.adpId && touched.adpId\r\n                  ? \"text-input error\"\r\n                  : \"text-input\"\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <div className=\"w-full text-center p-t-27 p-b-239\">\r\n            <Input\r\n              label=\"OTP\"\r\n              id=\"otp\"\r\n              type=\"number\"\r\n              value={values.otp}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              className={\r\n                errors.otp && touched.otp ? \"text-input error\" : \"text-input\"\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <div className=\"w-full text-center p-t-27 p-b-239\">\r\n            <Input\r\n              label=\"Password\"\r\n              id=\"password\"\r\n              type=\"password\"\r\n              value={values.password}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              className={\r\n                errors.password && touched.password\r\n                  ? \"text-input error\"\r\n                  : \"text-input\"\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <div className=\"w-full text-center p-t-27 p-b-239\">\r\n            <Input\r\n              label=\"Confirm Password\"\r\n              id=\"confirmPassword\"\r\n              type=\"confirmPassword\"\r\n              value={values.confirmPassword}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              className={\r\n                errors.confirmPassword && touched.confirmPassword\r\n                  ? \"text-input error\"\r\n                  : \"text-input\"\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <StyledButton color=\"danger\" type=\"submit\" disabled={isSubmitting}>\r\n            Generate Password\r\n          </StyledButton>\r\n\r\n          <div className=\"w-full text-center p-t-27 p-b-239\">\r\n            <span className=\"txt1\"></span>\r\n\r\n            <a href=\"#\" className=\"txt2\" onClick={props.toggleForgot}>\r\n              Sign in instead?\r\n            </a>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\n\r\nfunction validateToken () {\r\n  return apiHandler.post(\"/validateToken\")\r\n}","import {\r\n    UPDATE_LOGIN_INITIATE,\r\n    UPDATE_LOGIN_FAILED,\r\n    UPDATE_LOGIN_SUCCESS,\r\n    UPDATE_LOGOUT_SUCCESS\r\n } from \"../constants/login\";\r\n\r\nconst initialUserData = {\r\n    status: \"logged out\",\r\n    authenticated: false,\r\n    adpId: \"\",\r\n    name: \"\"\r\n    // accessToken: \"\",\r\n}\r\n\r\n\r\nexport const updateLoginStatus = (state = initialUserData, action = {}) => {\r\n\tswitch (action.type) {\r\n\t\tcase UPDATE_LOGIN_INITIATE:\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\tstatus: \"waiting\",\r\n            })\r\n        case UPDATE_LOGIN_SUCCESS:\r\n            return Object.assign({}, state, {\r\n                status: \"success\",\r\n                authenticated: action.payload.authenticated,\r\n                adpId: action.payload.adpId,\r\n                name: action.payload.name,\r\n                // accessToken: action.payload.accessToken,\r\n            })\r\n        case UPDATE_LOGIN_FAILED:\r\n            return Object.assign({}, state, {\r\n                status: \"failed\",\r\n            })\r\n        case UPDATE_LOGOUT_SUCCESS:\r\n            return Object.assign({}, state, {\r\n                status: \"logged out\",\r\n                authenticated: false,\r\n            })\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}","import {\r\n  FETCH_WALLET_INITIATE,\r\n  FETCH_WALLET_FAILED,\r\n  FETCH_WALLET_SUCCESS,\r\n} from \"../constants/wallet\";\r\n\r\nconst initialData = {\r\n  balance: 0,\r\n  statement: [],\r\n  status: \"\",\r\n};\r\n\r\nexport const fetchWalletStatus = (state = initialData, action = {}) => {\r\n  switch (action.type) {\r\n    case FETCH_WALLET_INITIATE:\r\n      return Object.assign({}, state, {\r\n        status: \"waiting\",\r\n      });\r\n    case FETCH_WALLET_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        ...action.payload.data,\r\n      });\r\n    case FETCH_WALLET_FAILED:\r\n      return Object.assign({}, state, {\r\n        status: \"failed\",\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CREATE_ADP_INITIATE,\r\n  CREATE_ADP_FAILED,\r\n  CREATE_ADP_SUCCESS,\r\n  UPDATE_ADP_DATA,\r\n} from \"../constants/adp\";\r\n\r\nconst initialData = {\r\n  adpData: {\r\n    firstname:\"\",\r\n    lastname: \"\",\r\n    sponsor_id: \"\",\r\n    sponsor_name:\"\",\r\n    co_sponsor_id:\"\",\r\n    co_sponsor_name:\"\",\r\n    dob:\"\",\r\n    gender:\"\",\r\n    father_firstname:\"\",\r\n    father_lastname:\"\",\r\n    nominee_firstname:\"\",\r\n    nominee_lastname:\"\",\r\n    nominee_gender:\"\",\r\n    nominee_dob:\"\",\r\n    relation:\"\",\r\n    pan:\"\",\r\n    email:\"\",\r\n    mobile:\"\",\r\n    address_correspondence:\"\",\r\n    landmark:\"\",\r\n    district:\"\",\r\n    state:\"\",\r\n    postal_code:null,\r\n    id_proof:\"\",\r\n    proof_address:\"\",\r\n    bank_name:\"\",\r\n    account_no:\"\",\r\n    branch:\"\",\r\n    ifs_code:\"\",\r\n    account_type:\"\"\r\n  },\r\n  status: \"\",\r\n};\r\n\r\nexport const createAdpReducer = (state = initialData, action = {}) => {\r\n  switch (action.type) {\r\n    case CREATE_ADP_INITIATE:\r\n      return Object.assign({}, state, {\r\n        status: \"waiting\",\r\n      });\r\n    case CREATE_ADP_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        status: \"success\",\r\n      });\r\n    case CREATE_ADP_FAILED:\r\n      return Object.assign({}, state, {\r\n        status: \"failed\",\r\n      });\r\n    \r\n    case UPDATE_ADP_DATA:\r\n      return Object.assign({}, state, {\r\n        status: \"\",\r\n        adpData: action.payload,\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  UPDATE_REPURCHASE_ADP_DETAILS,\r\n} from \"../constants/rePurchase\";\r\n\r\nconst initialData = {\r\n  adpId: \"\",\r\n  adpName: \"\",\r\n  sponsorId: \"\",\r\n  sponsorName: \"\",\r\n  mobile: \"\",\r\n  pan: \"\",\r\n};\r\n\r\nexport const updateRepurchaseAdpDetails = (state = initialData, action = {}) => {\r\n  switch (action.type) {\r\n    case UPDATE_REPURCHASE_ADP_DETAILS:\r\n      return Object.assign({}, state, {\r\n        ...action.payload\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  FETCH_SMART_MART_INITIATE,\r\n  FETCH_SMART_MART_FAILED,\r\n  FETCH_SMART_MART_SUCCESS,\r\n} from \"../constants/smartMart\";\r\n\r\nconst initialData = {\r\n  balance: 0,\r\n  statement: [],\r\n  status: \"\",\r\n};\r\n\r\nexport const fetchSmartMartStatus = (state = initialData, action = {}) => {\r\n  switch (action.type) {\r\n    case FETCH_SMART_MART_INITIATE:\r\n      return Object.assign({}, state, {\r\n        status: \"waiting\",\r\n      });\r\n    case FETCH_SMART_MART_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        ...action.payload.data,\r\n      });\r\n    case FETCH_SMART_MART_FAILED:\r\n      return Object.assign({}, state, {\r\n        status: \"failed\",\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { updateLoginStatus } from \"./login\"\r\nimport { fetchWalletStatus } from \"./wallet\"\r\nimport { createAdpReducer } from \"./addAdp\"\r\nimport { updateRepurchaseAdpDetails } from \"./rePurchase\"\r\nimport { fetchSmartMartStatus } from \"./smartMart\"\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    updateLoginStatus,\r\n    fetchWalletStatus,\r\n    createAdpReducer,\r\n    updateRepurchaseAdpDetails,\r\n    fetchSmartMartStatus\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose  } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers/rootReducer';\r\n// import { persistReducer } from 'redux-persist';\r\n// import storage from 'redux-persist/lib/storage';\r\n\r\n// const persistConfig = {\r\n//     key: 'root',\r\n//     storage,\r\n// }\r\n\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n    }) : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(thunk),\r\n  // other store enhancers if any\r\n);\r\n\r\nconst configureStore = preloadedState => {\r\n    return createStore(\r\n        rootReducer,\r\n        enhancer\r\n    );\r\n};\r\nexport default configureStore;","\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { BrowserRouter, Router, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"assets/scss/now-ui-dashboard.scss?v1.4.0\";\r\nimport \"assets/css/demo.css\";\r\n\r\nimport AdpLayout from \"layouts/Adp.js\";\r\nimport Login from \"views/Login\";\r\n\r\nimport configureStore from \"./redux/store/configureStore\";\r\nimport { Provider } from \"react-redux\";\r\n\r\n\r\nconst hist = createBrowserHistory();\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter history={hist} basename=\"/adp\">\r\n      <Switch>\r\n     \r\n        \r\n        <Route path=\"/adp\" render={(props) => <AdpLayout {...props} />} />\r\n        <Route path=\"/login\" render={(props) => <Login {...props} />} />\r\n        <Redirect to=\"/login\" />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/impact1.f694e041.png\";","\r\n// ##############################\r\n// // // Function that converts a hex color number to a RGB color number\r\n// #############################\r\nfunction hexToRGB(hex, alpha) {\r\n  var r = parseInt(hex.slice(1, 3), 16),\r\n    g = parseInt(hex.slice(3, 5), 16),\r\n    b = parseInt(hex.slice(5, 7), 16);\r\n\r\n  if (alpha) {\r\n    return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\r\n  } else {\r\n    return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\r\n  }\r\n}\r\n\r\n// ##############################\r\n// // // general variables for charts\r\n// #############################\r\n\r\nconst chartColor = \"#FFFFFF\";\r\n\r\n// General configuration for the charts with Line gradientStroke\r\nconst gradientChartOptionsConfiguration = {\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false,\r\n  },\r\n  tooltips: {\r\n    bodySpacing: 4,\r\n    mode: \"nearest\",\r\n    intersect: 0,\r\n    position: \"nearest\",\r\n    xPadding: 10,\r\n    yPadding: 10,\r\n    caretPadding: 10,\r\n  },\r\n  responsive: 1,\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        display: 0,\r\n        ticks: {\r\n          display: false,\r\n          maxTicksLimit: 7,\r\n        },\r\n        gridLines: {\r\n          zeroLineColor: \"transparent\",\r\n          drawTicks: false,\r\n          display: false,\r\n          drawBorder: false,\r\n        },\r\n      },\r\n    ],\r\n    xAxes: [\r\n      {\r\n        display: 0,\r\n        ticks: {\r\n          display: false,\r\n        },\r\n        gridLines: {\r\n          zeroLineColor: \"transparent\",\r\n          drawTicks: false,\r\n          display: false,\r\n          drawBorder: false,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  layout: {\r\n    padding: { left: 0, right: 0, top: 15, bottom: 15 },\r\n  },\r\n};\r\n\r\nvar gradientChartOptionsConfigurationWithNumbersAndGrid = {\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false,\r\n  },\r\n  tooltips: {\r\n    bodySpacing: 4,\r\n    mode: \"nearest\",\r\n    intersect: 0,\r\n    position: \"nearest\",\r\n    xPadding: 10,\r\n    yPadding: 10,\r\n    caretPadding: 10,\r\n  },\r\n  responsive: 1,\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          zeroLineColor: \"transparent\",\r\n          drawBorder: false,\r\n        },\r\n        ticks: {\r\n          maxTicksLimit: 7,\r\n        },\r\n      },\r\n    ],\r\n    xAxes: [\r\n      {\r\n        display: 0,\r\n        ticks: {\r\n          display: false,\r\n        },\r\n        gridLines: {\r\n          zeroLineColor: \"transparent\",\r\n          drawTicks: false,\r\n          display: false,\r\n          drawBorder: false,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  layout: {\r\n    padding: { left: 0, right: 0, top: 15, bottom: 15 },\r\n  },\r\n};\r\n\r\n// ##############################\r\n// // // Dashboard view - Panel chart\r\n// #############################\r\n\r\nconst dashboardPanelChart = {\r\n  data: (canvas) => {\r\n    const ctx = canvas.getContext(\"2d\");\r\n    var chartColor = \"#FFFFFF\";\r\n    var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\r\n    gradientStroke.addColorStop(0, \"#80b6f4\");\r\n    gradientStroke.addColorStop(1, chartColor);\r\n    var gradientFill = ctx.createLinearGradient(0, 200, 0, 50);\r\n    gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\r\n    gradientFill.addColorStop(1, \"rgba(255, 255, 255, 0.14)\");\r\n\r\n    return {\r\n      labels: [\r\n        \"JAN\",\r\n        \"FEB\",\r\n        \"MAR\",\r\n        \"APR\",\r\n        \"MAY\",\r\n        \"JUN\",\r\n        \"JUL\",\r\n        \"AUG\",\r\n        \"SEP\",\r\n        \"OCT\",\r\n        \"NOV\",\r\n        \"DEC\",\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"Data\",\r\n          borderColor: chartColor,\r\n          pointBorderColor: chartColor,\r\n          pointBackgroundColor: \"#2c2c2c\",\r\n          pointHoverBackgroundColor: \"#2c2c2c\",\r\n          pointHoverBorderColor: chartColor,\r\n          pointBorderWidth: 1,\r\n          pointHoverRadius: 7,\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 5,\r\n          fill: true,\r\n          backgroundColor: gradientFill,\r\n          borderWidth: 2,\r\n          data: [50, 150, 100, 190, 130, 90, 150, 160, 120, 140, 190, 95],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: {\r\n    layout: {\r\n      padding: {\r\n        left: 20,\r\n        right: 20,\r\n        top: 0,\r\n        bottom: 0,\r\n      },\r\n    },\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n      backgroundColor: \"#fff\",\r\n      titleFontColor: \"#333\",\r\n      bodyFontColor: \"#666\",\r\n      bodySpacing: 4,\r\n      xPadding: 12,\r\n      mode: \"nearest\",\r\n      intersect: 0,\r\n      position: \"nearest\",\r\n    },\r\n    legend: {\r\n      position: \"bottom\",\r\n      fillStyle: \"#FFF\",\r\n      display: false,\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: \"rgba(255,255,255,0.4)\",\r\n            fontStyle: \"bold\",\r\n            beginAtZero: true,\r\n            maxTicksLimit: 5,\r\n            padding: 10,\r\n          },\r\n          gridLines: {\r\n            drawTicks: true,\r\n            drawBorder: false,\r\n            display: true,\r\n            color: \"rgba(255,255,255,0.1)\",\r\n            zeroLineColor: \"transparent\",\r\n          },\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false,\r\n            color: \"rgba(255,255,255,0.1)\",\r\n          },\r\n          ticks: {\r\n            padding: 10,\r\n            fontColor: \"rgba(255,255,255,0.4)\",\r\n            fontStyle: \"bold\",\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n};\r\n\r\n// ##############################\r\n// // // Dashboard view - Shipped Products - Card\r\n// #############################\r\n\r\nconst dashboardShippedProductsChart = {\r\n  data: (canvas) => {\r\n    var ctx = canvas.getContext(\"2d\");\r\n    var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\r\n    gradientStroke.addColorStop(0, \"#80b6f4\");\r\n    gradientStroke.addColorStop(1, chartColor);\r\n    var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\r\n    gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\r\n    gradientFill.addColorStop(1, \"rgba(249, 99, 59, 0.40)\");\r\n    return {\r\n      labels: [\r\n        \"Jan\",\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Apr\",\r\n        \"May\",\r\n        \"Jun\",\r\n        \"Jul\",\r\n        \"Aug\",\r\n        \"Sep\",\r\n        \"Oct\",\r\n        \"Nov\",\r\n        \"Dec\",\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"Active Users\",\r\n          borderColor: \"#f96332\",\r\n          pointBorderColor: \"#FFF\",\r\n          pointBackgroundColor: \"#f96332\",\r\n          pointBorderWidth: 2,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 1,\r\n          pointRadius: 4,\r\n          fill: true,\r\n          backgroundColor: gradientFill,\r\n          borderWidth: 2,\r\n          data: [542, 480, 430, 550, 530, 453, 380, 434, 568, 610, 700, 630],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: gradientChartOptionsConfiguration,\r\n};\r\n\r\n// ##############################\r\n// // // Dashboard view - All Products - Card\r\n// #############################\r\n\r\nconst dashboardAllProductsChart = {\r\n  data: (canvas) => {\r\n    var ctx = canvas.getContext(\"2d\");\r\n    var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\r\n    gradientStroke.addColorStop(0, \"#18ce0f\");\r\n    gradientStroke.addColorStop(1, chartColor);\r\n    var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\r\n    gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\r\n    gradientFill.addColorStop(1, hexToRGB(\"#18ce0f\", 0.4));\r\n    return {\r\n      labels: [\"12pm,\", \"3pm\", \"6pm\", \"9pm\", \"12am\", \"3am\", \"6am\", \"9am\"],\r\n      datasets: [\r\n        {\r\n          label: \"Email Stats\",\r\n          borderColor: \"#18ce0f\",\r\n          pointBorderColor: \"#FFF\",\r\n          pointBackgroundColor: \"#18ce0f\",\r\n          pointBorderWidth: 2,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 1,\r\n          pointRadius: 4,\r\n          fill: true,\r\n          backgroundColor: gradientFill,\r\n          borderWidth: 2,\r\n          data: [40, 500, 650, 700, 1200, 1250, 1300, 1900],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: gradientChartOptionsConfigurationWithNumbersAndGrid,\r\n};\r\n\r\n// ##############################\r\n// // // Dashboard view - Bar Chart - Card\r\n// #############################\r\n\r\nconst dashboard24HoursPerformanceChart = {\r\n  data: (canvas) => {\r\n    var ctx = canvas.getContext(\"2d\");\r\n    var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\r\n    gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\r\n    gradientFill.addColorStop(1, hexToRGB(\"#2CA8FF\", 0.6));\r\n    return {\r\n      labels: [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\",\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"Active Countries\",\r\n          backgroundColor: gradientFill,\r\n          borderColor: \"#2CA8FF\",\r\n          pointBorderColor: \"#FFF\",\r\n          pointBackgroundColor: \"#2CA8FF\",\r\n          pointBorderWidth: 2,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 1,\r\n          pointRadius: 4,\r\n          fill: true,\r\n          borderWidth: 1,\r\n          data: [80, 99, 86, 96, 123, 85, 100, 75, 88, 90, 123, 155],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      display: false,\r\n    },\r\n    tooltips: {\r\n      bodySpacing: 4,\r\n      mode: \"nearest\",\r\n      intersect: 0,\r\n      position: \"nearest\",\r\n      xPadding: 10,\r\n      yPadding: 10,\r\n      caretPadding: 10,\r\n    },\r\n    responsive: 1,\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            maxTicksLimit: 7,\r\n          },\r\n          gridLines: {\r\n            zeroLineColor: \"transparent\",\r\n            drawBorder: false,\r\n          },\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          display: 0,\r\n          ticks: {\r\n            display: false,\r\n          },\r\n          gridLines: {\r\n            zeroLineColor: \"transparent\",\r\n            drawTicks: false,\r\n            display: false,\r\n            drawBorder: false,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    layout: {\r\n      padding: { left: 0, right: 0, top: 15, bottom: 15 },\r\n    },\r\n  },\r\n};\r\n\r\nmodule.exports = {\r\n  dashboardPanelChart, // Chart for Dashboard view - Will be rendered in panel\r\n  dashboardShippedProductsChart, // Chart for Dashboard view - Shipped Products Card\r\n  dashboardAllProductsChart, // Chart for Dashboard view - All products Card\r\n  dashboard24HoursPerformanceChart, // Chart for Dashboard view - 24 Hours Performance Card\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/bg5.056eb058.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mike.aab414f7.jpg\";"],"sourceRoot":""}